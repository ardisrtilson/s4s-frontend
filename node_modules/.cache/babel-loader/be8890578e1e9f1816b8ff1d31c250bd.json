{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/auth/Register.js\";\nimport React, { useRef } from \"react\";\nimport \"./Login.css\";\nexport const Register = props => {\n  const firstName = useRef();\n  const lastName = useRef();\n  const email = useRef();\n  const password = useRef();\n  const verifyPassword = useRef();\n  const passwordDialog = useRef();\n\n  const existingUserCheck = () => {\n    return fetch(`http://localhost:8088/customers?email=${email.current.value}`).then(_ => _.json()).then(user => !!user.length);\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (password.current.value === verifyPassword.current.value) {\n      existingUserCheck().then(() => {\n        fetch(\"http://localhost:8088/customers\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email.current.value,\n            password: password.current.value,\n            name: `${firstName.current.value} ${lastName.current.value}`\n          })\n        }).then(_ => _.json()).then(createdUser => {\n          if (createdUser.hasOwnProperty(\"id\")) {\n            localStorage.setItem(\"customer\", createdUser.id);\n            props.history.push(\"/\");\n          }\n        });\n      });\n    } else {\n      passwordDialog.current.showModal();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"dialog\", {\n    className: \"dialog dialog--password\",\n    ref: passwordDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Passwords do not match\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button--close\",\n    onClick: e => passwordDialog.current.close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form--login\",\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-3 font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Please Register for Selektor\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \" First Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: firstName,\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    placeholder: \"First name\",\n    required: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" Last Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: lastName,\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    placeholder: \"Last name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \" Email address \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    placeholder: \"Email address\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \" Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    placeholder: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"verifyPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \" Verify Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: verifyPassword,\n    type: \"password\",\n    name: \"verifyPassword\",\n    className: \"form-control\",\n    placeholder: \"Verify password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Sign in\"))));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/auth/Register.js"],"names":["React","useRef","Register","props","firstName","lastName","email","password","verifyPassword","passwordDialog","existingUserCheck","fetch","current","value","then","_","json","user","length","handleRegister","e","preventDefault","method","headers","body","JSON","stringify","name","createdUser","hasOwnProperty","localStorage","setItem","id","history","push","showModal","textAlign","close"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const firstName = useRef()\n    const lastName = useRef()\n    const email = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n    const passwordDialog = useRef()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/customers?email=${email.current.value}`)\n            .then(_ => _.json())\n            .then(user => !!user.length)\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            existingUserCheck()\n                .then(() => {\n                    fetch(\"http://localhost:8088/customers\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            email: email.current.value,\n                            password: password.current.value,\n                            name: `${firstName.current.value} ${lastName.current.value}`\n                        })\n                    })\n                        .then(_ => _.json())\n                        .then(createdUser => {\n                            if (createdUser.hasOwnProperty(\"id\")) {\n                                localStorage.setItem(\"customer\", createdUser.id)\n                                props.history.push(\"/\")\n                            }\n                        })\n                })\n        } else {\n            passwordDialog.current.showModal()\n        }\n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Passwords do not match</div>\n                <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Selektor</h1>\n                <fieldset>\n                    <label htmlFor=\"firstName\"> First Name </label>\n                    <input ref={firstName} type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        placeholder=\"First name\"\n                        required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lastName\"> Last Name </label>\n                    <input ref={lastName} type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        placeholder=\"Last name\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputEmail\"> Email address </label>\n                    <input ref={email} type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Email address\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"inputPassword\"> Password </label>\n                    <input ref={password} type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"verifyPassword\"> Verify Password </label>\n                    <input ref={verifyPassword} type=\"password\"\n                        name=\"verifyPassword\"\n                        className=\"form-control\"\n                        placeholder=\"Verify password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\">\n                        Sign in\n                    </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}