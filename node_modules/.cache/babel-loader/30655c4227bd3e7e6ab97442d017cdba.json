{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Link } from \"react-router-dom\";\nimport React, { useContext, useState, useEffect, useRef, createRef } from \"react\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport WaveSurfer from \"wavesurfer.js\";\nexport const CrushPanel = ({\n  sample\n}) => {\n  const [faves, setFaves] = useState([]);\n  const [thisUserFavorites, setThisUserFavorites] = useState([]);\n  const [currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")));\n  const lineRefs = useRef([]);\n  const waveformRef = useRef[null];\n  const {\n    favorites,\n    releaseFavorite,\n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    getRatings\n  } = useContext(SampleContext);\n  useEffect(() => {\n    getUsers().then(getFavorites()).then(getRatings()).then(getSamples());\n  }, []);\n  useEffect(() => {\n    if (samples !== []) lineRefs.current = samples.map((_, i) => {\n      var _lineRefs$current$i;\n\n      return (_lineRefs$current$i = lineRefs.current[i]) !== null && _lineRefs$current$i !== void 0 ? _lineRefs$current$i : createRef();\n    });\n    console.log(lineRefs);\n  }, []);\n  useEffect(() => {\n    setThisUserFavorites(favorites.filter(faves => faves.user_id === currentUser));\n  }, [favorites, currentUser]);\n  useEffect(() => {\n    if (samples && samples.length) {\n      setFaves(thisUserFavorites.map(fave => samples.find(sample => fave.sample_id === sample.id)));\n    }\n  }, [thisUserFavorites, samples]);\n\n  const downloadFile = () => {\n    window.location.href = sample.audio_url;\n  };\n\n  const removeFavorite = sample => {\n    let favId = thisUserFavorites.find(favorite => favorite.sample_id === sample.id);\n    releaseFavorite(favId.id).then(getFavorites);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), faves.map(sample => {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: sample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${sample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 60\n      }\n    }, sample.name)), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      preload: \"true\",\n      src: sample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: () => removeFavorite(sample),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    }, \"Remove Favorite\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: downloadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 35\n      }\n    }, \"Download Sample\"));\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js"],"names":["SampleContext","Link","React","useContext","useState","useEffect","useRef","createRef","AudioPlayer","WaveSurfer","CrushPanel","sample","faves","setFaves","thisUserFavorites","setThisUserFavorites","currentUser","setCurrentUser","parseInt","localStorage","getItem","lineRefs","waveformRef","favorites","releaseFavorite","getFavorites","getUsers","getSamples","samples","getRatings","then","current","map","_","i","console","log","filter","user_id","length","fave","find","sample_id","id","downloadFile","window","location","href","audio_url","removeFavorite","favId","favorite","sample_image","name","e"],"mappings":"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","sourcesContent":["import { SampleContext } from \"../sample/SampleProvider\"\nimport { Link } from \"react-router-dom\"\nimport React, {useContext, useState, useEffect, useRef, createRef} from \"react\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport WaveSurfer from \"wavesurfer.js\";\n\nexport const CrushPanel = ({sample}) => {\n\n  const [ faves, setFaves ] = useState([])\n  const [ thisUserFavorites, setThisUserFavorites ] = useState([])\n  const [ currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")))\n\n  const lineRefs = useRef([])\n  const waveformRef = useRef[null]\n\n\n  const {\n    favorites, \n    releaseFavorite, \n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    getRatings,\n  } = useContext(SampleContext)\n\n  useEffect(() => {\n    getUsers().then(\n    getFavorites()).then(\n    getRatings()).then(\n    getSamples())\n}, [])\n\nuseEffect(() => {\n  if (samples !== [])\n  lineRefs.current = samples.map((_, i) => lineRefs.current[i] ?? createRef(\n    // WaveSurfer.create({ \n    //   container: lineRefs.current[i],\n    //   cursorColor: \"transparent\",\n    //   backgroundColor: \"black\"\n    // })\n  ))\n  console.log(lineRefs)\n}, [])\n\nuseEffect(() => {\n  setThisUserFavorites(favorites.filter(faves => faves.user_id === currentUser))\n}, [favorites, currentUser])\n\nuseEffect(() => {\n  if (samples && samples.length){\n    setFaves(thisUserFavorites.map(fave => samples.find(sample => fave.sample_id === sample.id)))\n  }\n}, [thisUserFavorites, samples])\n\n        const downloadFile = () => {\n          window.location.href = sample.audio_url\n        }\n\n        const removeFavorite = (sample) => {\n          let favId = thisUserFavorites.find(favorite => favorite.sample_id === sample.id)\n          releaseFavorite(favId.id).then(getFavorites)\n        }\nreturn (\n  <>\n  <div className=\"samples\">\n                <div class>\n                        </div>\n                {\n                    faves.map(sample => {\n                        return (\n                          <section>\n                          <img class=\"img\" src={sample.sample_image}></img>\n                            <div class=\"link_card button4\"><Link to={`/browse/${sample.id}`}>{sample.name}</Link></div>\n                                  <AudioPlayer \n                                      autoPlayAfterSrcChange={false}\n                                      preload=\"true\"\n                                      src={sample.audio_url}\n                                      onPlay={e => console.log(\"onPlay\")}/>\n                                  <button class=\"button5\" onClick={()=>removeFavorite(sample)}>Remove Favorite</button>\n                                  <button class=\"button3\" onClick={downloadFile}>Download Sample</button>\n                          </section>)\n                    })\n                  }\n            </div> \n</>\n)\n}"]},"metadata":{},"sourceType":"module"}