{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"./SampleProvider\";\nimport { Sample } from \"./Sample\";\nimport \"./Samples.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  const {\n    favorites,\n    filterValue,\n    getCustomers,\n    getFavorites,\n    getSamples,\n    getUserFriends,\n    samples,\n    searchTerms,\n    setFilter,\n    userFriends\n  } = useContext(SampleContext);\n  const [filteredSamples, setFiltered] = useState([]);\n  useEffect(() => {\n    getSamples();\n    getCustomers();\n    getUserFriends();\n    getFavorites();\n    setFilter(\"0\");\n  }, []);\n  useEffect(() => {\n    let samplesToDisplay = samples;\n    let currentlyFiltered = samples;\n    const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n    samplesToDisplay = notUser;\n    currentlyFiltered = samplesToDisplay;\n    let randomInt = Math.floor(Math.random() * samplesToDisplay.length + 1);\n    randomSample = samplesToDisplay.find(thisSample => thisSample.id === randomInt);\n    setFiltered(ran);\n  }, [searchTerms, samples, filterValue]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(Sample, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","Sample","BrowseSamples","props","favorites","filterValue","getCustomers","getFavorites","getSamples","getUserFriends","samples","searchTerms","setFilter","userFriends","filteredSamples","setFiltered","samplesToDisplay","currentlyFiltered","notUser","filter","byUser","customerId","parseInt","localStorage","customer","randomInt","Math","floor","random","length","randomSample","find","thisSample","id","ran","map","sample"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEpC,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,WADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,cALE;AAMFC,IAAAA,OANE;AAOFC,IAAAA,WAPE;AAQFC,IAAAA,SARE;AASFC,IAAAA;AATE,MAUKhB,UAAU,CAACG,aAAD,CAVrB;AAWA,QAAM,CAAEc,eAAF,EAAmBC,WAAnB,IAAmChB,QAAQ,CAAC,EAAD,CAAjD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACVF,IAAAA,YAAY;AACZG,IAAAA,cAAc;AACdF,IAAAA,YAAY;AACZK,IAAAA,SAAS,CAAC,GAAD,CAAT;AACH,GANQ,EAMN,EANM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,gBAAgB,GAAGN,OAAvB;AACA,QAAIO,iBAAiB,GAAGP,OAAxB;AAEQ,UAAMQ,OAAO,GAAGD,iBAAiB,CAACE,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,UAAP,IAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhE,CAAhB;AACAR,IAAAA,gBAAgB,GAAGE,OAAnB;AACAD,IAAAA,iBAAiB,GAAGD,gBAApB;AACA,QAAIS,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,gBAAgB,CAACa,MAAjC,GAA0C,CAArD,CAAhB;AACAC,IAAAA,YAAY,GAAGd,gBAAgB,CAACe,IAAjB,CAAsBC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBR,SAAtD,CAAf;AAEZV,IAAAA,WAAW,CAACmB,GAAD,CAAX;AACC,GAXQ,EAWN,CAACvB,WAAD,EAAcD,OAAd,EAAuBL,WAAvB,CAXM,CAAT;AAaI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIQS,eAAe,CAACqB,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACH,EAApB;AAAwB,MAAA,MAAM,EAAEG,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAJR,CADA,CADJ;AAaH,CAhDE","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"./SampleProvider\"\nimport { Sample } from \"./Sample\"\nimport \"./Samples.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    const {favorites, \n        filterValue, \n        getCustomers,\n        getFavorites,\n        getSamples,\n        getUserFriends, \n        samples, \n        searchTerms,\n        setFilter,\n        userFriends,\n           } = useContext(SampleContext)\n    const [ filteredSamples, setFiltered ] = useState([])\n\n    useEffect(() => {\n        getSamples()\n        getCustomers()\n        getUserFriends()\n        getFavorites()\n        setFilter(\"0\")\n    }, [])\n    useEffect(() => {\n        let samplesToDisplay = samples\n        let currentlyFiltered = samples\n\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                samplesToDisplay = notUser\n                currentlyFiltered = samplesToDisplay\n                let randomInt = Math.floor(Math.random() * samplesToDisplay.length + 1);\n                randomSample = samplesToDisplay.find(thisSample => thisSample.id === randomInt)\n\n    setFiltered(ran)\n    }, [searchTerms, samples, filterValue])\n\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return <Sample key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>\n        )\n    }"]},"metadata":{},"sourceType":"module"}