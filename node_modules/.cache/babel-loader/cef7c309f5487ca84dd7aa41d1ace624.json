{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Browse } from \"./Browse\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  // Context\n  const {\n    favorites,\n    getCustomers,\n    getFavorites,\n    getSamples,\n    samples\n  } = useContext(SampleContext); // Hooks\n\n  useEffect(() => {\n    getSamples().then(() => {\n      getCustomers().then(() => {\n        getFavorites().then(() => {\n          let samplesToDisplay = samples;\n          let randomSample = samples;\n          let currentlyFiltered = samples;\n          const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n          const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer));\n          let notFaves = [];\n          notUser.forEach(nu => {\n            userFaves.forEach(uf => {\n              if (nu.id !== uf.id) {\n                if (notFaves.indexOf(nu) === -1) {\n                  notFaves.push(nu);\n                }\n              }\n            });\n          });\n          const randInt = Math.floor(Math.random() * notUser.length + 1);\n          randomSample = [notFaves.find(randomSample => randomSample.id == randInt)];\n          samplesToDisplay = notUser.filter(currentSamples => {\n            return userFaves.some(favorite => favorite.sampleId === currentSamples.id);\n          });\n          setFiltered(randomSample);\n          return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"samples\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            class: \"sampleCard\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }\n          }), filteredSamples.map(sample => {\n            return /*#__PURE__*/React.createElement(Browse, {\n              key: sample.id,\n              sample: sample,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 28\n              }\n            });\n          })));\n        });\n      });\n    });\n  }), [];\n}; // JSX","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","Browse","BrowseSamples","props","favorites","getCustomers","getFavorites","getSamples","samples","then","samplesToDisplay","randomSample","currentlyFiltered","notUser","filter","byUser","customerId","parseInt","localStorage","customer","userFaves","faves","notFaves","forEach","nu","uf","id","indexOf","push","randInt","Math","floor","random","length","find","currentSamples","some","favorite","sampleId","setFiltered","filteredSamples","map","sample"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,cAAP;AACA,OAAO,sCAAP;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEpC;AACA,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,YADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA;AAJE,MAMFX,UAAU,CAACG,aAAD,CANd,CAHoC,CAWpC;;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU,GAAGE,IAAb,CAAkB,MAAM;AACxBJ,MAAAA,YAAY,GAAGI,IAAf,CAAoB,MAAM;AAC1BH,QAAAA,YAAY,GAAGG,IAAf,CAAoB,MAAM;AAC1B,cAAIC,gBAAgB,GAAGF,OAAvB;AACA,cAAIG,YAAY,GAAGH,OAAnB;AACA,cAAII,iBAAiB,GAAGJ,OAAxB;AACQ,gBAAMK,OAAO,GAAGD,iBAAiB,CAACE,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,UAAP,IAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhE,CAAhB;AACA,gBAAMC,SAAS,GAAGhB,SAAS,CAACU,MAAV,CAAiBO,KAAK,IAAIA,KAAK,CAACL,UAAN,KAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAvD,CAAlB;AACA,cAAIG,QAAQ,GAAG,EAAf;AACAT,UAAAA,OAAO,CAACU,OAAR,CAAgBC,EAAE,IAAI;AAClBJ,YAAAA,SAAS,CAACG,OAAV,CAAkBE,EAAE,IAAI;AACpB,kBAAID,EAAE,CAACE,EAAH,KAAUD,EAAE,CAACC,EAAjB,EAAoB;AAChB,oBAAIJ,QAAQ,CAACK,OAAT,CAAiBH,EAAjB,MAAyB,CAAC,CAA9B,EAAgC;AAC5BF,kBAAAA,QAAQ,CAACM,IAAT,CAAcJ,EAAd;AACH;AACJ;AACJ,aAND;AAOF,WARF;AASA,gBAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBnB,OAAO,CAACoB,MAAxB,GAAiC,CAA5C,CAAhB;AACAtB,UAAAA,YAAY,GAAG,CAACW,QAAQ,CAACY,IAAT,CAAcvB,YAAY,IAAIA,YAAY,CAACe,EAAb,IAAmBG,OAAjD,CAAD,CAAf;AAEAnB,UAAAA,gBAAgB,GAAGG,OAAO,CAACC,MAAR,CAAeqB,cAAc,IAC5C;AAAC,mBAAOf,SAAS,CAACgB,IAAV,CAAeC,QAAQ,IAC3BA,QAAQ,CAACC,QAAT,KAAsBH,cAAc,CAACT,EADjC,CAAP;AAC4C,WAF9B,CAAnB;AAIZa,UAAAA,WAAW,CAAC5B,YAAD,CAAX;AAEA,8BACI,uDACA;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAK,YAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAIQ6B,eAAe,CAACC,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,gCAAO,oBAAC,MAAD;AAAQ,cAAA,GAAG,EAAEA,MAAM,CAAChB,EAApB;AAAwB,cAAA,MAAM,EAAEgB,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,WAFD,CAJR,CADA,CADJ;AAaH,SAtCO;AAsCL,OAvCK;AAuCH,KAxCG;AAwCD,GAzCM,CAAT,EAyCM,EAzCN;AA0CH,CAvDM,C,CAwDH","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport { Browse } from \"./Browse\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    // Context\n    const {favorites, \n        getCustomers,\n        getFavorites,\n        getSamples,\n        samples, \n\n    } = useContext(SampleContext)\n    \n    // Hooks\n\n    useEffect(() => {\n        getSamples().then(() => {\n        getCustomers().then(() => {\n        getFavorites().then(() => {\n        let samplesToDisplay = samples\n        let randomSample = samples\n        let currentlyFiltered = samples\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer))\n                let notFaves = []\n                notUser.forEach(nu => {\n                    userFaves.forEach(uf => {\n                        if (nu.id !== uf.id){\n                            if (notFaves.indexOf(nu) === -1){\n                                notFaves.push(nu)\n                            }\n                        }\n                    }\n                )})\n                const randInt = Math.floor(Math.random() * notUser.length + 1)\n                randomSample = [notFaves.find(randomSample => randomSample.id == randInt)]\n                \n                samplesToDisplay = notUser.filter(currentSamples => \n                    {return userFaves.some(favorite => \n                        favorite.sampleId === currentSamples.id)})\n\n    setFiltered(randomSample)\n\n    return (\n        <>\n        <div className=\"samples\">\n            <div class=\"sampleCard\">\n                    </div> \n            {\n                filteredSamples.map(sample => {\n                    return <Browse key={sample.id} sample={sample} />\n                })\n            }\n        </div> \n        </>     \n    )\n})})})}), []\n}\n    // JSX"]},"metadata":{},"sourceType":"module"}