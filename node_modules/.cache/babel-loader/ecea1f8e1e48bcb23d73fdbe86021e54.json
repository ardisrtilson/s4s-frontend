{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [currentSample, setCurrentSample] = useState({});\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    addFavorites,\n    skipped,\n    addSkipped,\n    getSkipped\n  } = useContext(SampleContext);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  useEffect(() => {\n    getRandomSample();\n    getUsers();\n    getSkipped();\n    getFavorites();\n  }, []);\n  useEffect(() => {\n    //Filtration\n    if (favorites.length > 0 && skipped.length > 0 && randomSample > 0) {}\n\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n    let notFaves = randomSample.filter(comparer(thisUserFavorites));\n    let notFavesOrSkipped = notFaves.filter(comparer(thisUserSkipped)); //Increment\n\n    if (notFavesOrSkipped.length > 0) {\n      console.log(notFavesOrSkipped[rSampleItem]);\n      setCurrentSample(notFavesOrSkipped[rSampleItem]);\n\n      if (rSampleItem < notFavesOrSkipped.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else {\n        setRSampleValue(0);\n      }\n    }\n  }, [favorites, skipped]);\n\n  const addSampleToFavorites = () => {\n    addFavorites({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  const addSampleToSkipped = () => {\n    addSkipped({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"link_card button4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/browse/${currentSample.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 44\n    }\n  }, currentSample.name)), /*#__PURE__*/React.createElement(AudioPlayer, {\n    autoPlayAfterSrcChange: false,\n    src: currentSample.audio_url,\n    onPlay: e => console.log(\"onPlay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button5\",\n    onClick: addSampleToSkipped,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Nah\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button2\",\n    onClick: getFavorites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Skip\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button3\",\n    onClick: addSampleToFavorites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Love\"));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","AudioPlayer","Link","BrowseSamples","props","rSampleItem","setRSampleValue","currentSample","setCurrentSample","favorites","getUsers","getFavorites","getRandomSample","randomSample","addFavorites","skipped","addSkipped","getSkipped","comparer","otherArray","current","filter","other","sample_id","id","length","currentUser","parseInt","localStorage","getItem","thisUserFavorites","faves","user_id","thisUserSkipped","skip","notFaves","notFavesOrSkipped","console","log","increment","addSampleToFavorites","user","sample","addSampleToSkipped","name","audio_url","e"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [currentSample, setCurrentSample] = useState({})\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        addFavorites,\n        skipped,\n        addSkipped,\n        getSkipped,\n    } = useContext(SampleContext)\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    useEffect(() => {\n        getRandomSample()\n        getUsers()\n        getSkipped()\n        getFavorites()\n    }, [])\n\n    useEffect(() => {\n\n        //Filtration\n        if (favorites.length > 0 && skipped.length > 0 && randomSample > 0){}\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        let notFaves = randomSample.filter(comparer(thisUserFavorites))\n        let notFavesOrSkipped = notFaves.filter(comparer(thisUserSkipped))\n\n        //Increment\n        if (notFavesOrSkipped.length > 0) {\n            console.log(notFavesOrSkipped[rSampleItem])\n            setCurrentSample(notFavesOrSkipped[rSampleItem])\n            if (rSampleItem < notFavesOrSkipped.length - 1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } else {\n                setRSampleValue(0)\n            }\n        }\n    }, [favorites, skipped])\n\n    const addSampleToFavorites = () => {\n        addFavorites({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n\n    const addSampleToSkipped = () => {\n        addSkipped({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n\n    return (\n        <div class=\"sampleCard\">\n            <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n            <AudioPlayer\n                autoPlayAfterSrcChange={false}\n                src={currentSample.audio_url}\n                onPlay={e => console.log(\"onPlay\")} />\n            <button class=\"button5\" onClick={addSampleToSkipped}>Nah</button>\n            <button class=\"button2\" onClick={getFavorites}>Skip</button>\n            <button class=\"button3\" onClick={addSampleToFavorites}>Love</button>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}