{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleProvider.js\";\nimport React, { useState } from \"react\";\nexport const SampleContext = React.createContext();\nexport const SampleProvider = props => {\n  const [commentValue, setComments] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [filterValue, setFilter] = useState([]);\n  const [ratingValue, setRating] = useState([]);\n  const [samples, setSamples] = useState([]);\n  const [searchTerms, setTerms] = useState(\"\");\n\n  const addComment = comment => {\n    return fetch(\"http://localhost:8000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(comment)\n    }).then(getSamples);\n  };\n\n  const addFavorites = sample => {\n    return fetch(\"http://localhost:8000/userFavorites\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sample)\n    }).then(getFavorites);\n  };\n\n  const addSample = sample => {\n    return fetch(\"http://localhost:8000/samples\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      },\n      body: JSON.stringify(sample)\n    }).then(getSamples);\n  };\n\n  const getComments = () => {\n    return fetch(\"http://localhost:8088/comments\").then(res => res.json()).then(setComments);\n  };\n\n  const getCustomers = () => {\n    return fetch(\"http://localhost:8088/customers\").then(res => res.json()).then(setCustomers);\n  };\n\n  const getFavorites = () => {\n    return fetch(\"http://localhost:8088/userFavorites\").then(res => res.json()).then(setFavorites);\n  };\n\n  const getSamples = () => {\n    return fetch(\"http://localhost:8000/samples\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setSamples);\n  };\n\n  const getSingleComment = id => {\n    return fetch(`http://localhost:8000/comments/${id}`, {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"rareUser_id\")}`\n      }\n    }).then(res => res.json()).then(setComments);\n  };\n\n  const releaseComment = commentId => {\n    return fetch(`http://localhost:8088/comments/${commentId}`, {\n      method: \"DELETE\"\n    }).then(getComments);\n  };\n\n  const releaseFavorite = favoriteId => {\n    return fetch(`http://localhost:8088/userFavorites/${favoriteId}`, {\n      method: \"DELETE\"\n    }).then(getFavorites);\n  };\n\n  const releaseSample = sampleId => {\n    return fetch(`http://localhost:8088/samples/${sampleId}`, {\n      method: \"DELETE\"\n    }).then(getSamples);\n  };\n\n  const updateSample = sample => {\n    return fetch(`http://localhost:8088/samples/${sample.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sample)\n    }).then(getSamples);\n  };\n\n  return /*#__PURE__*/React.createElement(SampleContext.Provider, {\n    value: {\n      addComment,\n      addFavorites,\n      addSample,\n      commentValue,\n      customers,\n      favorites,\n      filterValue,\n      getComments,\n      getCustomers,\n      getFavorites,\n      getSamples,\n      getSampleById,\n      releaseSample,\n      ratingValue,\n      releaseComment,\n      releaseFavorite,\n      samples,\n      searchTerms,\n      setComments,\n      setFavorites,\n      setFilter,\n      setRating,\n      setTerms,\n      updateSample\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleProvider.js"],"names":["React","useState","SampleContext","createContext","SampleProvider","props","commentValue","setComments","customers","setCustomers","favorites","setFavorites","filterValue","setFilter","ratingValue","setRating","samples","setSamples","searchTerms","setTerms","addComment","comment","fetch","method","headers","body","JSON","stringify","then","getSamples","addFavorites","sample","getFavorites","addSample","localStorage","getItem","getComments","res","json","getCustomers","getSingleComment","id","releaseComment","commentId","releaseFavorite","favoriteId","releaseSample","sampleId","updateSample","getSampleById","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nexport const SampleContext = React.createContext()\n\nexport const SampleProvider = (props) => {\n    const [commentValue, setComments] = useState([])\n    const [customers, setCustomers] = useState([])\n    const [favorites, setFavorites] = useState([])\n    const [filterValue, setFilter] = useState([])\n    const [ratingValue, setRating] = useState([])\n    const [samples, setSamples] = useState([])\n    const [searchTerms, setTerms] = useState(\"\")\n\n    const addComment = comment => {\n        return fetch(\"http://localhost:8000/comments\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(comment)\n        })\n            .then(getSamples)\n    }\n    const addFavorites = sample => {\n        return fetch(\"http://localhost:8000/userFavorites\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getFavorites)\n    }\n    const addSample = sample => {\n        return fetch(\"http://localhost:8000/samples\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getSamples)\n    }\n    const getComments = () => {\n        return fetch(\"http://localhost:8088/comments\")\n            .then(res => res.json())\n            .then(setComments)\n    }\n    const getCustomers = () => {\n        return fetch(\"http://localhost:8088/customers\")\n            .then(res => res.json())\n            .then(setCustomers)\n    }\n    const getFavorites = () => {\n        return fetch(\"http://localhost:8088/userFavorites\")\n            .then(res => res.json())\n            .then(setFavorites)\n    }\n    const getSamples = () => {\n        return fetch(\"http://localhost:8000/samples\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setSamples)\n    }\n\n    const getSingleComment = (id) => {\n        return fetch(`http://localhost:8000/comments/${id}`, {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"rareUser_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setComments)\n    }\n    const releaseComment = (commentId) => {\n        return fetch(`http://localhost:8088/comments/${commentId}`, {\n            method: \"DELETE\"\n        })\n            .then(getComments)\n    }\n    const releaseFavorite = (favoriteId) => {\n        return fetch(`http://localhost:8088/userFavorites/${favoriteId}`, {\n            method: \"DELETE\"\n        })\n            .then(getFavorites)\n    }\n    const releaseSample = (sampleId) => {\n        return fetch(`http://localhost:8088/samples/${sampleId}`, {\n            method: \"DELETE\"\n        })\n            .then(getSamples)\n    }\n    const updateSample = sample => {\n        return fetch(`http://localhost:8088/samples/${sample.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getSamples)\n    }\n\n    return (\n        <SampleContext.Provider value={\n            {\n                addComment,\n                addFavorites,\n                addSample,\n                commentValue,\n                customers,\n                favorites, \n                filterValue, \n                getComments,\n                getCustomers,\n                getFavorites,\n                getSamples, \n                getSampleById,\n                releaseSample, \n                ratingValue,\n                releaseComment,\n                releaseFavorite,\n                samples,\n                searchTerms,\n                setComments,\n                setFavorites, \n                setFilter,\n                setRating,\n                setTerms,\n                updateSample,\n            }}>\n        {props.children}\n        </SampleContext.Provider>\n        )\n    }"]},"metadata":{},"sourceType":"module"}