{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Browse } from \"./Browse\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  // Context\n  const {\n    favorites,\n    filterValue,\n    getCustomers,\n    getFavorites,\n    getSamples,\n    samples,\n    searchTerms,\n    setFilter\n  } = useContext(SampleContext); // State \n\n  const [filteredSamples, setFiltered] = useState([]); // Hooks\n\n  useEffect(() => {\n    getSamples();\n    getCustomers();\n    getFavorites();\n    setFilter(\"0\");\n  }, []);\n  useEffect(() => {\n    let samplesToDisplay = samples;\n    let randomSample = samples;\n    let currentlyFiltered = samples;\n    const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n    const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer));\n    console.log(notUser);\n    console.log(userFaves);\n    let notFaves = [];\n    notUser.forEach(nu => {\n      userFaves.forEach(uf => {\n        if (nu.sampleId !== uf.id) {\n          notFaves.push(nu);\n        }\n      });\n    });\n    console.log(notFaves);\n    const randInt = Math.floor(Math.random() * notUser.length + 1);\n    randomSample = [notUser.find(randomSample => randomSample.id == randInt)];\n    samplesToDisplay = notUser.filter(currentSamples => {\n      return userFaves.some(favorite => favorite.sampleId === currentSamples.id);\n    });\n    setFiltered(randomSample);\n  }, [searchTerms, samples, filterValue]); // JSX\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(Browse, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","Browse","BrowseSamples","props","favorites","filterValue","getCustomers","getFavorites","getSamples","samples","searchTerms","setFilter","filteredSamples","setFiltered","samplesToDisplay","randomSample","currentlyFiltered","notUser","filter","byUser","customerId","parseInt","localStorage","customer","userFaves","faves","console","log","notFaves","forEach","nu","uf","sampleId","id","push","randInt","Math","floor","random","length","find","currentSamples","some","favorite","map","sample"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,cAAP;AACA,OAAO,sCAAP;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEpC;AACA,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,WADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,WANE;AAOFC,IAAAA;AAPE,MAQFd,UAAU,CAACG,aAAD,CARd,CAHoC,CAapC;;AAEA,QAAM,CAAEY,eAAF,EAAmBC,WAAnB,IAAmCd,QAAQ,CAAC,EAAD,CAAjD,CAfoC,CAiBpC;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACVF,IAAAA,YAAY;AACZC,IAAAA,YAAY;AACZI,IAAAA,SAAS,CAAC,GAAD,CAAT;AACH,GALQ,EAKN,EALM,CAAT;AAOAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgB,gBAAgB,GAAGL,OAAvB;AACA,QAAIM,YAAY,GAAGN,OAAnB;AACA,QAAIO,iBAAiB,GAAGP,OAAxB;AACQ,UAAMQ,OAAO,GAAGD,iBAAiB,CAACE,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,UAAP,IAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhE,CAAhB;AACA,UAAMC,SAAS,GAAGpB,SAAS,CAACc,MAAV,CAAiBO,KAAK,IAAIA,KAAK,CAACL,UAAN,KAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAvD,CAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,QAAII,QAAQ,GAAG,EAAf;AACAX,IAAAA,OAAO,CAACY,OAAR,CAAgBC,EAAE,IAAI;AAClBN,MAAAA,SAAS,CAACK,OAAV,CAAkBE,EAAE,IAAI;AACpB,YAAID,EAAE,CAACE,QAAH,KAAgBD,EAAE,CAACE,EAAvB,EAA0B;AACtBL,UAAAA,QAAQ,CAACM,IAAT,CAAcJ,EAAd;AACH;AACJ,OAJD;AAKF,KANF;AAOAJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAMO,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBrB,OAAO,CAACsB,MAAxB,GAAiC,CAA5C,CAAhB;AACAxB,IAAAA,YAAY,GAAG,CAACE,OAAO,CAACuB,IAAR,CAAazB,YAAY,IAAIA,YAAY,CAACkB,EAAb,IAAmBE,OAAhD,CAAD,CAAf;AAEArB,IAAAA,gBAAgB,GAAGG,OAAO,CAACC,MAAR,CAAeuB,cAAc,IAC5C;AAAC,aAAOjB,SAAS,CAACkB,IAAV,CAAeC,QAAQ,IAC3BA,QAAQ,CAACX,QAAT,KAAsBS,cAAc,CAACR,EADjC,CAAP;AAC4C,KAF9B,CAAnB;AAIZpB,IAAAA,WAAW,CAACE,YAAD,CAAX;AACC,GAzBQ,EAyBN,CAACL,WAAD,EAAcD,OAAd,EAAuBJ,WAAvB,CAzBM,CAAT,CA1BoC,CAqDpC;;AAEI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIQO,eAAe,CAACgC,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACZ,EAApB;AAAwB,MAAA,MAAM,EAAEY,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAJR,CADA,CADJ;AAaH,CApEE","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport { Browse } from \"./Browse\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    // Context\n    const {favorites, \n        filterValue, \n        getCustomers,\n        getFavorites,\n        getSamples,\n        samples, \n        searchTerms,\n        setFilter,\n    } = useContext(SampleContext)\n    \n    // State \n\n    const [ filteredSamples, setFiltered ] = useState([])\n\n    // Hooks\n\n    useEffect(() => {\n        getSamples()\n        getCustomers()\n        getFavorites()\n        setFilter(\"0\")\n    }, [])\n\n    useEffect(() => {\n        let samplesToDisplay = samples\n        let randomSample = samples\n        let currentlyFiltered = samples\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer))\n                console.log(notUser)\n                console.log(userFaves)\n                let notFaves = []\n                notUser.forEach(nu => {\n                    userFaves.forEach(uf => {\n                        if (nu.sampleId !== uf.id){\n                            notFaves.push(nu)\n                        }\n                    }\n                )})\n                console.log(notFaves)\n                const randInt = Math.floor(Math.random() * notUser.length + 1)\n                randomSample = [notUser.find(randomSample => randomSample.id == randInt)]\n                \n                samplesToDisplay = notUser.filter(currentSamples => \n                    {return userFaves.some(favorite => \n                        favorite.sampleId === currentSamples.id)})\n\n    setFiltered(randomSample)\n    }, [searchTerms, samples, filterValue])\n\n    // JSX\n\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return <Browse key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>     \n        )\n    }"]},"metadata":{},"sourceType":"module"}