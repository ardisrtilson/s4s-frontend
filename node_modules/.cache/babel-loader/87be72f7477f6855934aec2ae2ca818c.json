{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleList.js\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Link } from \"react-router-dom\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AvgRating from '@material-ui/lab/Rating';\nimport ReactColorSquare from \"react-color-square\";\nimport hexSorter from 'hexsorter';\nexport const SampleList = ({\n  sample\n}) => {\n  const [sort, setSort] = useState([]);\n  const [thisUserSamples, setThisUserSamples] = useState([]);\n  const [currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")));\n  const [thisUser, setThisUser] = useState([]);\n  const {\n    favorites,\n    releaseFavorite,\n    getFavorites,\n    filterValue,\n    getUsers,\n    getSamples,\n    samples,\n    searchTerms,\n    user,\n    ratings,\n    getRatings,\n    getUserById,\n    releaseSample\n  } = useContext(SampleContext);\n  useEffect(() => {\n    getSamples();\n    getUsers();\n    getRatings();\n    getUserById(currentUser);\n  }, []);\n  useEffect(() => {\n    if (sort === 1) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.averageRating < b.averageRating ? 1 : -1));\n      getRatings();\n    } else if (sort === 2) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.averageLoudness > b.averageLoudness ? 1 : -1));\n      getRatings();\n    } else if (sort === 3) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.name > b.name ? 1 : -1));\n      getRatings();\n    } else if (sort === 4) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.name < b.name ? 1 : -1));\n      getRatings();\n    } else if (sort === 5) {\n      let hexArray = thisUserSamples.map(faveHex => faveHex.averageColorHex);\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostSaturatedColor');\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc));\n      setThisUserSamples(sortedHex.sort((a, b) => parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1));\n      getRatings();\n    } else if (sort === 6) {\n      let hexArray = thisUserSamples.map(faveHex => faveHex.averageColorHex);\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostBrightColor');\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc));\n      setThisUserSamples(sortedHex.sort((a, b) => parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1));\n      getRatings();\n    }\n  }, [sort]);\n\n  const handleControlledInputChange = e => {\n    setSort(e.target.value);\n  };\n\n  useEffect(() => {\n    console.log(user.sex);\n    setThisUserSamples(samples.filter(sample => sample.uploader === currentUser));\n  }, [favorites, currentUser, samples]);\n\n  const downloadFile = () => {\n    //   window.location.href = sample.audio_url\n    console.log(\"\");\n  };\n\n  const deleteSample = sample => {\n    releaseSample(sample).then(getSamples);\n    console.log(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: 0,\n    onChange: handleControlledInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Sort By\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Avg. Rating\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Subjective Volume\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Alphabetical\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Reverse Alphabetical\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Color by Saturation\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Color by Brightness\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"img\",\n    src: user.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, thisUser)), thisUserSamples.map(sample => {\n    let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id);\n    let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n    let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n    let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n    let averageColorHex = Math.round(averageColor).toString(16);\n    averageColorHex = `#` + averageColorHex;\n\n    if (isNaN(averageLoudness)) {\n      averageLoudness = 1.0;\n    }\n\n    if (isNaN(averageRating)) {\n      averageRating = 0;\n    }\n\n    if (averageColorHex === \"#NaN\") {\n      averageColorHex = '#ffffff';\n    }\n\n    sample.averageColorHex = averageColorHex;\n    sample.averageLoudness = averageLoudness;\n    sample.averageRating = averageRating;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: sample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${sample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 60\n      }\n    }, sample.name)), /*#__PURE__*/React.createElement(AvgRating, {\n      value: averageRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ReactColorSquare, {\n      height: 150,\n      color: averageColorHex,\n      text: \"Average Color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      preload: \"true\",\n      volume: averageLoudness,\n      src: sample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: () => deleteSample(sample.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 35\n      }\n    }, \"Remove Favorite\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: downloadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 35\n      }\n    }, \"Download Sample\"));\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleList.js"],"names":["SampleContext","Link","React","useContext","useState","useEffect","useRef","AudioPlayer","Select","MenuItem","AvgRating","ReactColorSquare","hexSorter","SampleList","sample","sort","setSort","thisUserSamples","setThisUserSamples","currentUser","setCurrentUser","parseInt","localStorage","getItem","thisUser","setThisUser","favorites","releaseFavorite","getFavorites","filterValue","getUsers","getSamples","samples","searchTerms","user","ratings","getRatings","getUserById","releaseSample","a","b","averageRating","averageLoudness","name","hexArray","map","faveHex","averageColorHex","mostSaturatedColor","sortColors","sortedHex","msc","find","fave","substring","handleControlledInputChange","e","target","value","console","log","sex","filter","uploader","downloadFile","deleteSample","then","profile_image","thisSampleFavorites","rating","id","reduce","total","next","length","parseFloat","loudness","averageColor","color","Math","round","toString","isNaN","sample_image","audio_url"],"mappings":"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","sourcesContent":["import { SampleContext } from \"../sample/SampleProvider\"\nimport { Link } from \"react-router-dom\"\nimport React, {useContext, useState, useEffect, useRef} from \"react\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AvgRating from '@material-ui/lab/Rating';\nimport ReactColorSquare from \"react-color-square\";\nimport hexSorter from 'hexsorter';\n\nexport const SampleList = ({sample}) => {\n\n  const [ sort, setSort ] = useState([])\n  const [ thisUserSamples, setThisUserSamples ] = useState([])\n  const [ currentUser, setCurrentUser ] = useState(parseInt(localStorage.getItem(\"user_number\")))\n  const [ thisUser, setThisUser] = useState([])\n\n  const {\n    favorites, \n    releaseFavorite, \n    getFavorites,\n    filterValue, \n    getUsers,\n    getSamples,\n    samples,\n    searchTerms,\n    user,\n    ratings,\n    getRatings,\n    getUserById,\n    releaseSample\n  } = useContext(SampleContext)\n\n  useEffect(() => {\n    getSamples()\n    getUsers()\n    getRatings()\n    getUserById(currentUser)\n}, [])\n\nuseEffect(() => {\n  if(sort === 1){setThisUserSamples(thisUserSamples.sort((a, b) => (a.averageRating < b.averageRating) ? 1 : -1))\n    getRatings()}\n    else if (sort === 2){setThisUserSamples(thisUserSamples.sort((a, b) => (a.averageLoudness > b.averageLoudness) ? 1 : -1))\n      getRatings()}\n    else if (sort === 3){setThisUserSamples(thisUserSamples.sort((a, b) => (a.name > b.name) ? 1 : -1))\n    getRatings()}\n    else if (sort === 4){setThisUserSamples(thisUserSamples.sort((a, b) => (a.name < b.name) ? 1 : -1))\n    getRatings()}\n    else if (sort === 5){\n      let hexArray = thisUserSamples.map(faveHex => (faveHex.averageColorHex))\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostSaturatedColor')\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc))\n      setThisUserSamples(sortedHex.sort((a, b) => (parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1)))\n      getRatings()}\n    else if (sort === 6){\n      let hexArray = thisUserSamples.map(faveHex => (faveHex.averageColorHex))\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostBrightColor')\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc))\n      setThisUserSamples(sortedHex.sort((a, b) => (parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1)))\n      getRatings()}\n}, [sort])\n\n  const handleControlledInputChange = (e) => {\n    setSort(e.target.value)\n}\n\nuseEffect(() => {\n  console.log(user.sex)\n  setThisUserSamples(samples.filter(sample => sample.uploader === currentUser))\n}, [favorites, currentUser, samples])\n\n        const downloadFile = () => {\n        //   window.location.href = sample.audio_url\n        console.log(\"\")\n        }\n\n        const deleteSample = (sample) => {\n\n          releaseSample(sample).then(getSamples)\n        console.log(\"\")\n        }\n\nreturn (\n  <>\n  <div className=\"samples\">\n  <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={0}\n          onChange={handleControlledInputChange}\n        >\n          <MenuItem value={0}>Sort By</MenuItem>\n          <MenuItem value={1}>Avg. Rating</MenuItem>\n          <MenuItem value={2}>Subjective Volume</MenuItem>\n          <MenuItem value={3}>Alphabetical</MenuItem>\n          <MenuItem value={4}>Reverse Alphabetical</MenuItem>\n          <MenuItem value={5}>Color by Saturation</MenuItem>\n          <MenuItem value={6}>Color by Brightness</MenuItem>\n        </Select>\n                <div class=\"sampleCard\">\n                <img class=\"img\" src={user.profile_image}></img>\n                <div>{thisUser}</div>\n                        </div> \n                {\n                    thisUserSamples.map(sample => {\n                      let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id)\n                      let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n                      let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n                      let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n                      let averageColorHex = Math.round(averageColor).toString(16)\n                      averageColorHex = `#` + averageColorHex\n                      if(isNaN(averageLoudness)){averageLoudness = 1.0}\n                      if(isNaN(averageRating)){averageRating = 0}\n                      if(averageColorHex === \"#NaN\"){averageColorHex = '#ffffff'}\n                      sample.averageColorHex = averageColorHex\n                      sample.averageLoudness = averageLoudness \n                      sample.averageRating = averageRating\n                        return (\n                          <section>\n                          <img class=\"img\" src={sample.sample_image}></img>\n                            <div class=\"link_card button4\"><Link to={`/browse/${sample.id}`}>{sample.name}</Link></div>\n                            <AvgRating \n                            value={averageRating}/>\n                            <ReactColorSquare height={150} color={averageColorHex} text=\"Average Color\" />\n                                  <AudioPlayer \n                                      autoPlayAfterSrcChange={false}\n                                      preload=\"true\"\n                                      volume={averageLoudness}\n                                      src={sample.audio_url}\n                                      onPlay={e => console.log(\"onPlay\")}/>\n                                  <button class=\"button5\" onClick={()=>deleteSample(sample.id)}>Remove Favorite</button>\n                                  <button class=\"button3\" onClick={downloadFile}>Download Sample</button>\n                          </section>)\n                    })\n                }\n            </div> \n</>\n)\n}"]},"metadata":{},"sourceType":"module"}