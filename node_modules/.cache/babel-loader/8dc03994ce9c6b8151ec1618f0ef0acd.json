{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nconst [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3');\nconst [color, setColor] = useState(\"#aabbcc\");\nconst [wavesurfCreated, setWavesurfCreated] = useState(false);\nconst [wavesurf, setWavesurf] = useState(false);\nexport const BrowseSamples = props => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [currentSample, setCurrentSample] = useState({});\n  const [noneLeft, setNoneLeft] = useState(false);\n  const [zeroed, setZeroed] = useState(false);\n  const [itemsLeftToShow, setitemsLeftToShow] = useState([]);\n  const waveformRef = useRef(null);\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    addFavorites,\n    skipped,\n    addSkipped,\n    getSkipped,\n    randomSamplesLoaded\n  } = useContext(SampleContext);\n  useEffect(() => {\n    if (waveformRef.current) {\n      setWavesurf(WaveSurfer.create({\n        container: waveformRef.current,\n        cursorColor: \"transparent\",\n        backgroundColor: \"black\",\n        barWidth: 1,\n        fillParent: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (wavesurf !== false) {\n      wavesurf.load(currentSample.audio_url);\n    }\n  }, [currentSample]);\n  useEffect(() => {\n    console.log(waveformRef);\n\n    if (wavesurf !== false) {\n      wavesurf.setWaveColor(color);\n      setWavesurfCreated(true);\n    }\n  }, [color]);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addSampleToFavorites = () => {\n    addFavorites({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  const addSampleToSkipped = () => {\n    addSkipped({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\"\n    });\n    waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3');\n    waveformRef.current.setWaveColor(\"white\");\n  }, []);\n  useEffect(() => {\n    getUsers().then(getSkipped).then(getFavorites).then(getRandomSample);\n  }, []);\n  useEffect(() => {\n    if (itemsLeftToShow.length > 0) {\n      setCurrentSample(itemsLeftToShow[rSampleItem]);\n    }\n  }, [rSampleItem, zeroed]);\n  useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0) {\n      if (rSampleItem < itemsLeftToShow.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else if (rSampleItem === 0 && itemsLeftToShow.length - 1 === 0) {\n        setZeroed(true);\n      } else {\n        setRSampleValue(0);\n      }\n\n      setNoneLeft(false);\n    } else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n      //data has been loaded from api, filtering done, no items left to show\n      setNoneLeft(true);\n    }\n  }, [itemsLeftToShow, randomSample, randomSamplesLoaded]);\n  useEffect(() => {\n    //Filtration\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n\n    if (randomSample.length > 0) {\n      let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites));\n      let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped));\n      setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited); //Increment\n    }\n  }, [favorites, skipped, randomSample]);\n\n  if (noneLeft !== true && randomSamplesLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${currentSample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 48\n      }\n    }, currentSample.name)), /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: currentSample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      src: currentSample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: addSampleToSkipped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \"Nah\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button2\",\n      onClick: getFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: addSampleToFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Love\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), \"None Left\");\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","useRef","SampleContext","AudioPlayer","Link","WaveSurfer","audio_url","setAudioURL","color","setColor","wavesurfCreated","setWavesurfCreated","wavesurf","setWavesurf","BrowseSamples","props","rSampleItem","setRSampleValue","currentSample","setCurrentSample","noneLeft","setNoneLeft","zeroed","setZeroed","itemsLeftToShow","setitemsLeftToShow","waveformRef","favorites","getUsers","getFavorites","getRandomSample","randomSample","addFavorites","skipped","addSkipped","getSkipped","randomSamplesLoaded","current","create","container","cursorColor","backgroundColor","barWidth","fillParent","load","console","log","setWaveColor","comparer","otherArray","filter","other","sample_id","id","length","addSampleToFavorites","user","parseInt","localStorage","getItem","sample","addSampleToSkipped","then","increment","currentUser","thisUserFavorites","faves","user_id","thisUserSkipped","skip","randomSamplesThatHaveNotBeenFavorited","randomSamplesThatHaveNotBeenSkippedOrFavorited","name","sample_image","e"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\nconst [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3')\nconst [color, setColor] = useState(\"#aabbcc\")\nconst [wavesurfCreated, setWavesurfCreated] = useState(false)\nconst [wavesurf, setWavesurf] = useState(false)\n\n\nexport const BrowseSamples = (props) => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [currentSample, setCurrentSample] = useState({})\n    const [noneLeft, setNoneLeft] = useState(false)\n    const [zeroed, setZeroed] = useState(false)\n    const [itemsLeftToShow, setitemsLeftToShow] = useState([])\n\n    const waveformRef = useRef(null);\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        addFavorites,\n        skipped,\n        addSkipped,\n        getSkipped,\n        randomSamplesLoaded,\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        if (waveformRef.current) {\n            setWavesurf(WaveSurfer.create({\n                container: waveformRef.current,\n                cursorColor: \"transparent\",\n                backgroundColor: \"black\",\n                barWidth: 1,\n                fillParent: true\n            }))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (wavesurf !== false) {\n            wavesurf.load(currentSample.audio_url)\n        }\n    }, [currentSample])\n\n    useEffect(() => {\n        console.log(waveformRef)\n        if (wavesurf !== false) {\n            wavesurf.setWaveColor(color)\n            setWavesurfCreated(true)\n        }\n    }, [color])\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addSampleToFavorites = () => {\n        addFavorites({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n\n    const addSampleToSkipped = () => {\n        addSkipped({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n    \n    useEffect(() => {\n        waveformRef.current = WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\"\n        });\n        waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n        waveformRef.current.setWaveColor(\"white\")\n      }, [])\n\n    useEffect(() => {\n        getUsers().then(getSkipped).then(getFavorites).then(getRandomSample)\n    }, [])\n\n    useEffect(() => {\n        if (itemsLeftToShow.length > 0){\n        setCurrentSample(itemsLeftToShow[rSampleItem])\n        }\n    }, [rSampleItem, zeroed])\n\n    useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0){\n            if (rSampleItem < itemsLeftToShow.length-1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } \n            else if(rSampleItem === 0 && itemsLeftToShow.length-1 === 0){\n                setZeroed(true)\n            }\n            else {\n                setRSampleValue(0)\n            }\n            setNoneLeft(false)\n    }\n    else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n        //data has been loaded from api, filtering done, no items left to show\n        setNoneLeft(true)\n    }\n    \n    }, [itemsLeftToShow, randomSample, randomSamplesLoaded])\n\n    useEffect(() => {\n\n        //Filtration\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        if (randomSample.length > 0) {\n            let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites))\n            let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped))\n            setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            //Increment\n        }\n    }, [favorites, skipped, randomSample])\n\n    if (noneLeft !== true && randomSamplesLoaded) {\n        return (\n            <div>\n                <div ref={waveformRef} />\n                <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n                <img class=\"img\" src={currentSample.sample_image}></img>\n                <div ref={waveformRef} />\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={currentSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")} />\n                <button class=\"button5\" onClick={addSampleToSkipped}>Nah</button>\n                <button class=\"button2\" onClick={getFavorites}>Skip</button>\n                <button class=\"button3\" onClick={addSampleToFavorites}>Love</button>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div class=\"sampleCard\">\n                <div ref={waveformRef} />\n                None Left\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}