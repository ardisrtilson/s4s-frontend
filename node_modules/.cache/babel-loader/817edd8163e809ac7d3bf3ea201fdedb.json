{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"./SampleProvider\";\nimport { Sample } from \"./Sample\";\nimport \"./Samples.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { Link } from \"react-router-dom\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  const {\n    favorites,\n    filterValue,\n    getCustomers,\n    getFavorites,\n    getSamples,\n    getUserFriends,\n    samples,\n    searchTerms,\n    setFilter,\n    userFriends\n  } = useContext(SampleContext);\n  const [filteredSamples, setFiltered] = useState([]);\n\n  const findFriends = () => {\n    let currentUserId = parseInt(localStorage.customer);\n    let currentRelationships = userFriends.filter(f => {\n      if (currentUserId === f.userId || currentUserId === f.friendId) {\n        return f;\n      }\n    });\n    let friendIds = currentRelationships.map(r => {\n      if (r.userId === currentUserId) {\n        return r.friendId;\n      } else {\n        return r.userId;\n      }\n    });\n    friendIds.push(currentUserId);\n    return friendIds;\n  };\n\n  useEffect(() => {\n    getSamples();\n    getCustomers();\n    getUserFriends();\n    getFavorites();\n    setFilter(\"0\");\n  }, []);\n  useEffect(() => {\n    let samplesToDisplay = samples;\n    let allUserFriends = findFriends();\n    let currentlyFiltered = samples;\n\n    if (props.history.location.pathname === \"/\") {\n      samplesToDisplay = currentlyFiltered.filter(byUser => byUser.customerId === parseInt(localStorage.customer));\n      currentlyFiltered = samplesToDisplay;\n    }\n\n    if (props.history.location.pathname === \"/browse\") {\n      const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n      samplesToDisplay = notUser;\n      currentlyFiltered = samplesToDisplay;\n    }\n\n    if (searchTerms !== \"\") {\n      samplesToDisplay = currentlyFiltered.filter(sample => sample.name.toLowerCase().includes(searchTerms));\n      currentlyFiltered = samplesToDisplay;\n    }\n\n    if (filterValue === \"1\" && props.history.location.pathname === \"/browse\") {\n      const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n      samplesToDisplay = notUser.filter(byFriend => allUserFriends.includes(byFriend.customerId));\n    }\n\n    if (filterValue === \"2\" && props.history.location.pathname === \"/browse\") {\n      const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n      const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer));\n      samplesToDisplay = notUser.filter(currentSamples => {\n        return userFaves.some(favorite => favorite.sampleId === currentSamples.id);\n      });\n    }\n\n    console.log(filteredSamples);\n    setFiltered(samplesToDisplay);\n  }, [searchTerms, samples, filterValue]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"link_card button4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/browse/${sample.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 34\n    }\n  }, sample.name)), /*#__PURE__*/React.createElement(AudioPlayer, {\n    preload: true,\n    src: sample.url,\n    onPlay: e => console.log(\"onPlay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button5\",\n    onClick: removeFavorite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Remove Favorite\"), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button3\",\n    onClick: downloadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Download Sample\")));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","Sample","Link","AudioPlayer","BrowseSamples","props","favorites","filterValue","getCustomers","getFavorites","getSamples","getUserFriends","samples","searchTerms","setFilter","userFriends","filteredSamples","setFiltered","findFriends","currentUserId","parseInt","localStorage","customer","currentRelationships","filter","f","userId","friendId","friendIds","map","r","push","samplesToDisplay","allUserFriends","currentlyFiltered","history","location","pathname","byUser","customerId","notUser","sample","name","toLowerCase","includes","byFriend","userFaves","faves","currentSamples","some","favorite","sampleId","id","console","log","url","e","removeFavorite","downloadFile"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"./SampleProvider\"\nimport { Sample } from \"./Sample\"\nimport \"./Samples.css\"\nimport 'react-h5-audio-player/lib/styles.css'\nimport { Link } from \"react-router-dom\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\n\nexport const BrowseSamples = (props) => {\n\n    const {favorites, \n        filterValue, \n        getCustomers,\n        getFavorites,\n        getSamples,\n        getUserFriends, \n        samples, \n        searchTerms,\n        setFilter,\n        userFriends,\n           } = useContext(SampleContext)\n    const [ filteredSamples, setFiltered ] = useState([])\n    const findFriends = () => {\n        let currentUserId = parseInt(localStorage.customer)\n        let currentRelationships = userFriends.filter(f => {\n            if (currentUserId === f.userId || currentUserId === f.friendId) {\n                return f\n            }\n        })\n        let friendIds = currentRelationships.map(r => {\n            if (r.userId === currentUserId) {\n                return r.friendId\n            } else {\n                return r.userId\n            }\n        })\n        friendIds.push(currentUserId)\n        return friendIds\n}\n    useEffect(() => {\n        getSamples()\n        getCustomers()\n        getUserFriends()\n        getFavorites()\n        setFilter(\"0\")\n    }, [])\n    useEffect(() => {\n        let samplesToDisplay = samples\n        let allUserFriends = findFriends()\n        let currentlyFiltered = samples\n\n            if (props.history.location.pathname === \"/\"){\n            samplesToDisplay = currentlyFiltered.filter(byUser => byUser.customerId === parseInt(localStorage.customer))\n            currentlyFiltered = samplesToDisplay\n            }\n\n            if (props.history.location.pathname === \"/browse\"){\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                samplesToDisplay = notUser\n                currentlyFiltered = samplesToDisplay\n                }\n\n            if (searchTerms !== \"\") {\n                samplesToDisplay = currentlyFiltered.filter(sample => sample.name.toLowerCase().includes(searchTerms))\n                currentlyFiltered = samplesToDisplay\n            }\n\n            if (filterValue === \"1\" && props.history.location.pathname === \"/browse\"){\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                samplesToDisplay = notUser.filter(byFriend => allUserFriends.includes(byFriend.customerId))\n            }\n\n            if (filterValue === \"2\" && props.history.location.pathname === \"/browse\"){\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer))\n                samplesToDisplay = notUser.filter(currentSamples => \n                    {return userFaves.some(favorite => \n                        favorite.sampleId === currentSamples.id)})\n            }\n    console.log(filteredSamples)\n    setFiltered(samplesToDisplay)\n    }, [searchTerms, samples, filterValue])\n\n        return (\n<>\n<section class=\"sampleCard\">\n  <div class=\"link_card button4\"><Link to={`/browse/${sample.id}`}>{sample.name}</Link></div>\n        <AudioPlayer \n            preload\n            src={sample.url}\n            onPlay={e => console.log(\"onPlay\")}/>\n        <button class=\"button5\" onClick={removeFavorite}>Remove Favorite</button>\n        <button class=\"button3\" onClick={downloadFile}>Download Sample</button>\n</section>\n</>\n            \n        )\n    }"]},"metadata":{},"sourceType":"module"}