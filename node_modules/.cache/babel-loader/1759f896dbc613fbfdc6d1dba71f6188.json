{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/upload/SampleForm.js\";\n// Organized\nimport React, { useContext, useRef, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport \"./Upload.css\";\nimport firebase from 'firebase';\nexport const SampleForm = props => {\n  const [postImage, setPostImage] = useState(\"\");\n  let db = firebase.firestore();\n  let thingsRef = db.collection('Samples');\n  let url;\n  let file;\n  const {\n    addSample\n  } = useContext(SampleContext);\n  const name = useRef(null);\n  const description = useRef(null);\n\n  const getBase64 = (file, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(file);\n  };\n\n  const createPostImageJSON = event => {\n    getBase64(event.target.files[0], base64ImageString => {\n      setPostImage({\n        'sample_image': base64ImageString\n      });\n    });\n  };\n\n  const constructNewSample = () => {\n    if (file) {\n      let fileRef = firebase.storage().ref(\"Audio/\" + file.name);\n      fileRef.put(file).then(() => {\n        async function getURL() {\n          url = await fileRef.getDownloadURL();\n        }\n\n        getURL().then(() => {\n          addSample({\n            name: name.current.value,\n            audio_url: url,\n            date_added: \"2020-7-7\",\n            sample_image: postImage.sample_image\n          }).then(() => props.history.push(\"/\"));\n          thingsRef.add({\n            name: name.current.value,\n            uploader: localStorage.getItem(\"user_number\"),\n            audio_url: url,\n            date_added: \"2020-7-7\"\n          });\n        });\n      });\n    } else {\n      window.confirm(\"Sample is still loading. Try again in a moment.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sampleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Upload Sample\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 49\n    }\n  }, \"Sample Name:\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"sampleName\",\n    ref: name,\n    required: true,\n    autoFocus: true,\n    className: \"form-control\",\n    placeholder: \"Sample Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 49\n    }\n  }, \"Description:\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"sampleDescription\",\n    ref: description,\n    required: true,\n    autoFocus: true,\n    className: \"form-control\",\n    placeholder: \"Enter Description Here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploadButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"post_image\",\n    onChange: evt => {\n      createPostImageJSON(evt);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"button3\",\n    type: \"file\",\n    id: \"fileButton\",\n    onChange: evt => {\n      file = evt.target.files[0];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button4\",\n    type: \"submit\",\n    onClick: evt => {\n      console.log(name.current.value);\n\n      if (name.current.value != \"\") {\n        if (description.current.value != \"\") {\n          evt.preventDefault();\n          constructNewSample();\n        } else {\n          window.alert(\"Please Enter a Description For Your Sample\");\n        }\n      } else {\n        window.alert(\"Please Enter a Name For Your Sample\");\n      }\n    },\n    class: \"button6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Upload\")));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/upload/SampleForm.js"],"names":["React","useContext","useRef","useState","SampleContext","firebase","SampleForm","props","postImage","setPostImage","db","firestore","thingsRef","collection","url","file","addSample","name","description","getBase64","callback","reader","FileReader","addEventListener","result","readAsDataURL","createPostImageJSON","event","target","files","base64ImageString","constructNewSample","fileRef","storage","ref","put","then","getURL","getDownloadURL","current","value","audio_url","date_added","sample_image","history","push","add","uploader","localStorage","getItem","window","confirm","evt","console","log","preventDefault","alert"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useRef, useState} from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport \"./Upload.css\"\nimport firebase from 'firebase'\n\nexport const SampleForm = (props) => {\n    const [ postImage, setPostImage ] = useState(\"\")\n    let db = firebase.firestore();\n    let thingsRef = db.collection('Samples')\n    let url\n    let file\n\n    const { addSample } = useContext(SampleContext)\n    const name = useRef(null)\n    const description = useRef(null)\n\n    const getBase64 = (file, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(file);\n    }\n    \n    const createPostImageJSON = (event) => {\n        \n        getBase64(event.target.files[0], (base64ImageString) => {\n            setPostImage({'sample_image':base64ImageString})\n        });\n    }\n\n    const constructNewSample = () => {\n        if (file){\n        let fileRef = firebase.storage().ref(\"Audio/\" + file.name)    \n        fileRef.put(file).then(() => {\n            async function getURL(){\n            url = await fileRef.getDownloadURL()\n            }\n                getURL().then(() => {\n                    addSample({\n                        name: name.current.value,\n                        audio_url: url,\n                        date_added: \"2020-7-7\", \n                        sample_image: postImage.sample_image\n                    }).then(() => props.history.push(\"/\"))\n                    thingsRef.add({\n                        name: name.current.value,\n                        uploader: localStorage.getItem(\"user_number\"),\n                        audio_url: url,\n                        date_added: \"2020-7-7\"\n                    })\n                })\n            })\n        }\n        else {window.confirm(\"Sample is still loading. Try again in a moment.\")}\n}\n\n    return (\n        <form className=\"sampleForm\">\n            <h1 class=\"heading\">Upload Sample</h1>\n                <div className=\"form-group1\">\n                    <label htmlFor=\"sampleName\"><h3>Sample Name:</h3></label>\n                    <input type=\"text\" id=\"sampleName\" ref={name} required autoFocus className=\"form-control\" placeholder=\"Sample Name\" />\n                </div>\n                <div className=\"form-group2\">\n                    <label htmlFor=\"sampleName\"><h3>Description:</h3> </label>\n                    <input type=\"text\" id=\"sampleDescription\" ref={description} required autoFocus className=\"form-control\" placeholder=\"Enter Description Here\" />\n                </div>\n                <div className=\"uploadButtons\">\n                            <input type=\"file\" id=\"post_image\" onChange={(evt) => {createPostImageJSON(evt)}} />\n                        </div>\n                <div className=\"upload-group\">\n            <input class=\"button3\" type=\"file\" id=\"fileButton\" \n                onChange={evt => {\n                    file = evt.target.files[0]\n                }}/>\n            <button class=\"button4\" type=\"submit\"\n                onClick={evt => {\n                    console.log(name.current.value)\n                    if(name.current.value != \"\"){\n                        if(description.current.value != \"\"){\n                    evt.preventDefault()\n                    constructNewSample()}\n                    else{window.alert(\"Please Enter a Description For Your Sample\")}\n                    }\n                else{window.alert(\"Please Enter a Name For Your Sample\")}\n                }}\n                class=\"button6\">\n                Upload\n            </button>\n            </div>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}