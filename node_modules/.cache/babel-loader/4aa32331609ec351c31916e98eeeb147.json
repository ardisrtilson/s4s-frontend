{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [currentSample, setCurrentSample] = useState({});\n  const [noneLeft, setNoneLeft] = useState(false);\n  const [zeroed, setZeroed] = useState(false);\n  const [itemsLeftToShow, setitemsLeftToShow] = useState([]);\n  const waveformRef = useRef(null);\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    addFavorites,\n    skipped,\n    addSkipped,\n    getSkipped,\n    randomSamplesLoaded\n  } = useContext(SampleContext);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addSampleToFavorites = () => {\n    addFavorites({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  const addSampleToSkipped = () => {\n    addSkipped({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\"\n    });\n    waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3');\n    waveformRef.current.setWaveColor(color);\n  }, []);\n  useEffect(() => {\n    getUsers().then(getSkipped).then(getFavorites).then(getRandomSample);\n  }, []);\n  useEffect(() => {\n    if (itemsLeftToShow.length > 0) {\n      setCurrentSample(itemsLeftToShow[rSampleItem]);\n    }\n  }, [rSampleItem, zeroed]);\n  useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0) {\n      console.log(itemsLeftToShow[rSampleItem]);\n\n      if (rSampleItem < itemsLeftToShow.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else {\n        setRSampleValue(0);\n        setZeroed(true);\n      }\n\n      setNoneLeft(false);\n    } else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n      //data has been loaded from api, filtering done, no items left to show\n      setNoneLeft(true);\n    } else {}\n  }, [itemsLeftToShow, randomSample, randomSamplesLoaded]);\n  useEffect(() => {\n    //Filtration\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n\n    if (randomSample.length > 0) {\n      let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites));\n      let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped));\n      console.log(randomSamplesThatHaveNotBeenSkippedOrFavorited);\n      setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited); //Increment\n    }\n  }, [favorites, skipped, randomSample]);\n\n  if (noneLeft !== true) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${currentSample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 48\n      }\n    }, currentSample.name)), /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: currentSample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      src: currentSample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: addSampleToSkipped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Nah\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button2\",\n      onClick: getFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: addSampleToFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Love\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"None Left\");\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","AudioPlayer","Link","BrowseSamples","props","rSampleItem","setRSampleValue","currentSample","setCurrentSample","noneLeft","setNoneLeft","zeroed","setZeroed","itemsLeftToShow","setitemsLeftToShow","waveformRef","useRef","favorites","getUsers","getFavorites","getRandomSample","randomSample","addFavorites","skipped","addSkipped","getSkipped","randomSamplesLoaded","comparer","otherArray","current","filter","other","sample_id","id","length","addSampleToFavorites","user","parseInt","localStorage","getItem","sample","addSampleToSkipped","WaveSurfer","create","container","cursorColor","backgroundColor","load","setWaveColor","color","then","console","log","increment","currentUser","thisUserFavorites","faves","user_id","thisUserSkipped","skip","randomSamplesThatHaveNotBeenFavorited","randomSamplesThatHaveNotBeenSkippedOrFavorited","name","sample_image","audio_url","e"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [currentSample, setCurrentSample] = useState({})\n    const [noneLeft, setNoneLeft] = useState(false)\n    const [zeroed, setZeroed] = useState(false)\n    const [itemsLeftToShow, setitemsLeftToShow] = useState([])\n\n    const waveformRef = useRef(null);\n    \n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        addFavorites,\n        skipped,\n        addSkipped,\n        getSkipped,\n        randomSamplesLoaded,\n    } = useContext(SampleContext)\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addSampleToFavorites = () => {\n        addFavorites({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n\n    const addSampleToSkipped = () => {\n        addSkipped({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n    \n    useEffect(() => {\n        waveformRef.current = WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\"\n        });\n        waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n        waveformRef.current.setWaveColor(color)\n      }, [])\n\n    useEffect(() => {\n        getUsers().then(getSkipped).then(getFavorites).then(getRandomSample)\n    }, [])\n\n    useEffect(() => {\n        if (itemsLeftToShow.length > 0){\n        setCurrentSample(itemsLeftToShow[rSampleItem])\n        }\n    }, [rSampleItem, zeroed])\n\n    useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0){\n            console.log(itemsLeftToShow[rSampleItem])\n            if (rSampleItem < itemsLeftToShow.length - 1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } else {\n                setRSampleValue(0)\n                setZeroed(true)\n            }\n            setNoneLeft(false)\n    }\n    else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n        //data has been loaded from api, filtering done, no items left to show\n        setNoneLeft(true)\n    }\n    else {\n        \n    }\n    }, [itemsLeftToShow, randomSample, randomSamplesLoaded])\n\n    useEffect(() => {\n\n        //Filtration\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        if (randomSample.length > 0) {\n            let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites))\n            let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped))\n            console.log(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            //Increment\n        }\n    }, [favorites, skipped, randomSample])\n\n    if (noneLeft !== true) {\n        return (\n            <div class=\"sampleCard\">\n                <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n                <img class=\"img\" src={currentSample.sample_image}></img>\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={currentSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")} />\n                <button class=\"button5\" onClick={addSampleToSkipped}>Nah</button>\n                <button class=\"button2\" onClick={getFavorites}>Skip</button>\n                <button class=\"button3\" onClick={addSampleToFavorites}>Love</button>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div class=\"sampleCard\">\n                None Left\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}