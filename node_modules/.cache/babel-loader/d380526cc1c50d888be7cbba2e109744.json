{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleList.js\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Link } from \"react-router-dom\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AvgRating from '@material-ui/lab/Rating';\nimport ReactColorSquare from \"react-color-square\";\nimport hexSorter from 'hexsorter';\nexport const SampleList = ({\n  sample\n}) => {\n  const [sort, setSort] = useState([]);\n  const [thisUserSamples, setThisUserSamples] = useState([]);\n  const [currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")));\n  const [thisUser, setThisUser] = useState([]);\n  const {\n    favorites,\n    getUsers,\n    getSamples,\n    samples,\n    user,\n    ratings,\n    getRatings,\n    getUserById,\n    releaseSample,\n    users\n  } = useContext(SampleContext);\n\n  const delete_prompt = id => {\n    var retVal = window.confirm(\"Are you sure you want to delete your comment?\");\n\n    if (retVal == true) {\n      deleteSample(id);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    getSamples();\n    getUsers();\n    getRatings();\n    getUserById(currentUser);\n  }, []);\n  useEffect(() => {\n    if (sort === 1) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.averageRating < b.averageRating ? 1 : -1));\n      getRatings();\n    } else if (sort === 2) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.averageLoudness > b.averageLoudness ? 1 : -1));\n      getRatings();\n    } else if (sort === 3) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.name > b.name ? 1 : -1));\n      getRatings();\n    } else if (sort === 4) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => a.name < b.name ? 1 : -1));\n      getRatings();\n    } else if (sort === 5) {\n      let hexArray = thisUserSamples.map(faveHex => faveHex.averageColorHex);\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostSaturatedColor');\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc));\n      setThisUserSamples(sortedHex.sort((a, b) => parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1));\n      getRatings();\n    } else if (sort === 6) {\n      let hexArray = thisUserSamples.map(faveHex => faveHex.averageColorHex);\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostBrightColor');\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc));\n      setThisUserSamples(sortedHex.sort((a, b) => parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1));\n      getRatings();\n    }\n  }, [sort]);\n\n  const handleControlledInputChange = e => {\n    setSort(e.target.value);\n  };\n\n  useEffect(() => {\n    setThisUserSamples(samples.filter(sample => sample.uploader === currentUser));\n  }, [favorites, currentUser, samples]);\n\n  const downloadFile = sample => {\n    window.location.href = sample.audio_url;\n    console.log(\"\");\n  };\n\n  const deleteSample = sample => {\n    releaseSample(sample).then(getSamples);\n    console.log(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: 0,\n    onChange: handleControlledInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Sort By\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Avg. Rating\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Subjective Volume (Femme Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Alphabetical\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Reverse Alphabetical\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Saturation (Masc Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, \"Brightness (Masc Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Brightness (Femme Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Saturation (Femme Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Subjective Volume (Masc Users)\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"img\",\n    src: user.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, thisUser)), thisUserSamples.map(sample => {\n    let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id);\n    let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n    let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n    let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n    let averageColorHex = Math.round(averageColor).toString(16);\n    averageColorHex = `#` + averageColorHex;\n\n    if (isNaN(averageLoudness)) {\n      averageLoudness = 1.0;\n    }\n\n    if (isNaN(averageRating)) {\n      averageRating = 0;\n    }\n\n    if (averageColorHex === \"#NaN\") {\n      averageColorHex = '#ffffff';\n    }\n\n    sample.averageColorHex = averageColorHex;\n    sample.averageLoudness = averageLoudness;\n    sample.averageRating = averageRating;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      class: \"playerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: sample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${sample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 48\n      }\n    }, sample.name)), /*#__PURE__*/React.createElement(AvgRating, {\n      value: averageRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ReactColorSquare, {\n      height: 100,\n      width: 568,\n      color: averageColorHex,\n      text: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      preload: \"true\",\n      volume: averageLoudness,\n      src: sample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: () => delete_prompt(sample.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Delete Sample\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: () => downloadFile(sample),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"Download Sample\"));\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleList.js"],"names":["SampleContext","Link","React","useContext","useState","useEffect","useRef","AudioPlayer","Select","MenuItem","AvgRating","ReactColorSquare","hexSorter","SampleList","sample","sort","setSort","thisUserSamples","setThisUserSamples","currentUser","setCurrentUser","parseInt","localStorage","getItem","thisUser","setThisUser","favorites","getUsers","getSamples","samples","user","ratings","getRatings","getUserById","releaseSample","users","delete_prompt","id","retVal","window","confirm","deleteSample","a","b","averageRating","averageLoudness","name","hexArray","map","faveHex","averageColorHex","mostSaturatedColor","sortColors","sortedHex","msc","find","fave","substring","handleControlledInputChange","e","target","value","filter","uploader","downloadFile","location","href","audio_url","console","log","then","profile_image","thisSampleFavorites","rating","reduce","total","next","length","parseFloat","loudness","averageColor","color","Math","round","toString","isNaN","sample_image"],"mappings":";AAAA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAExC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAACiB,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAT,CAA9C;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM;AACJsB,IAAAA,SADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,WARI;AASJC,IAAAA,aATI;AAUJC,IAAAA;AAVI,MAWFhC,UAAU,CAACH,aAAD,CAXd;;AAaA,QAAMoC,aAAa,GAAIC,EAAD,IAAQ;AAC5B,QAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAb;;AACA,QAAIF,MAAM,IAAI,IAAd,EAAqB;AACjBG,MAAAA,YAAY,CAACJ,EAAD,CAAZ;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACH,aAAO,KAAP;AACH;AACJ,GARC;;AAUAhC,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,UAAU;AACVD,IAAAA,QAAQ;AACRK,IAAAA,UAAU;AACVC,IAAAA,WAAW,CAACd,WAAD,CAAX;AACD,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAI,KAAK,CAAb,EAAgB;AACdG,MAAAA,kBAAkB,CAACD,eAAe,CAACF,IAAhB,CAAqB,CAAC2B,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,aAAF,GAAkBD,CAAC,CAACC,aAArB,GAAsC,CAAtC,GAA0C,CAAC,CAA1E,CAAD,CAAlB;AACAZ,MAAAA,UAAU;AACX,KAHD,MAIK,IAAIjB,IAAI,KAAK,CAAb,EAAgB;AACnBG,MAAAA,kBAAkB,CAACD,eAAe,CAACF,IAAhB,CAAqB,CAAC2B,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACG,eAAF,GAAoBF,CAAC,CAACE,eAAvB,GAA0C,CAA1C,GAA8C,CAAC,CAA9E,CAAD,CAAlB;AACAb,MAAAA,UAAU;AACX,KAHI,MAIA,IAAIjB,IAAI,KAAK,CAAb,EAAgB;AACnBG,MAAAA,kBAAkB,CAACD,eAAe,CAACF,IAAhB,CAAqB,CAAC2B,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACI,IAAF,GAASH,CAAC,CAACG,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAxD,CAAD,CAAlB;AACAd,MAAAA,UAAU;AACX,KAHI,MAIA,IAAIjB,IAAI,KAAK,CAAb,EAAgB;AACnBG,MAAAA,kBAAkB,CAACD,eAAe,CAACF,IAAhB,CAAqB,CAAC2B,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACI,IAAF,GAASH,CAAC,CAACG,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAxD,CAAD,CAAlB;AACAd,MAAAA,UAAU;AACX,KAHI,MAIA,IAAIjB,IAAI,KAAK,CAAb,EAAgB;AACnB,UAAIgC,QAAQ,GAAG9B,eAAe,CAAC+B,GAAhB,CAAoBC,OAAO,IAAKA,OAAO,CAACC,eAAxC,CAAf;AACA,UAAIC,kBAAkB,GAAGvC,SAAS,CAACwC,UAAV,CAAqBL,QAArB,EAA+B,oBAA/B,CAAzB;AACA,UAAIM,SAAS,GAAGF,kBAAkB,CAACH,GAAnB,CAAuBM,GAAG,IAAIrC,eAAe,CAACsC,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACN,eAAL,KAAyBI,GAAtD,CAA9B,CAAhB;AACApC,MAAAA,kBAAkB,CAACmC,SAAS,CAACtC,IAAV,CAAe,CAAC2B,CAAD,EAAIC,CAAJ,KAAWtB,QAAQ,CAACqB,CAAC,CAACQ,eAAF,CAAkBO,SAAlB,CAA4B,CAA5B,IAAiCd,CAAC,CAACO,eAAF,CAAkBO,SAAlB,CAA4B,CAA5B,CAAlC,CAAR,GAA4E,CAA5E,GAAgF,CAAC,CAA3G,CAAD,CAAlB;AACAzB,MAAAA,UAAU;AACX,KANI,MAOA,IAAIjB,IAAI,KAAK,CAAb,EAAgB;AACnB,UAAIgC,QAAQ,GAAG9B,eAAe,CAAC+B,GAAhB,CAAoBC,OAAO,IAAKA,OAAO,CAACC,eAAxC,CAAf;AACA,UAAIC,kBAAkB,GAAGvC,SAAS,CAACwC,UAAV,CAAqBL,QAArB,EAA+B,iBAA/B,CAAzB;AACA,UAAIM,SAAS,GAAGF,kBAAkB,CAACH,GAAnB,CAAuBM,GAAG,IAAIrC,eAAe,CAACsC,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACN,eAAL,KAAyBI,GAAtD,CAA9B,CAAhB;AACApC,MAAAA,kBAAkB,CAACmC,SAAS,CAACtC,IAAV,CAAe,CAAC2B,CAAD,EAAIC,CAAJ,KAAWtB,QAAQ,CAACqB,CAAC,CAACQ,eAAF,CAAkBO,SAAlB,CAA4B,CAA5B,IAAiCd,CAAC,CAACO,eAAF,CAAkBO,SAAlB,CAA4B,CAA5B,CAAlC,CAAR,GAA4E,CAA5E,GAAgF,CAAC,CAA3G,CAAD,CAAlB;AACAzB,MAAAA,UAAU;AACX;AACF,GA/BQ,EA+BN,CAACjB,IAAD,CA/BM,CAAT;;AAiCA,QAAM2C,2BAA2B,GAAIC,CAAD,IAAO;AACzC3C,IAAAA,OAAO,CAAC2C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAIAxD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,kBAAkB,CAACW,OAAO,CAACiC,MAAR,CAAehD,MAAM,IAAIA,MAAM,CAACiD,QAAP,KAAoB5C,WAA7C,CAAD,CAAlB;AACD,GAFQ,EAEN,CAACO,SAAD,EAAYP,WAAZ,EAAyBU,OAAzB,CAFM,CAAT;;AAIA,QAAMmC,YAAY,GAAIlD,MAAD,IAAY;AAC7ByB,IAAAA,MAAM,CAAC0B,QAAP,CAAgBC,IAAhB,GAAuBpD,MAAM,CAACqD,SAA9B;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACD,GAHD;;AAKA,QAAM5B,YAAY,GAAI3B,MAAD,IAAY;AAE/BoB,IAAAA,aAAa,CAACpB,MAAD,CAAb,CAAsBwD,IAAtB,CAA2B1C,UAA3B;AACAwC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACD,GAJD;;AAMA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,0BADV;AAEE,IAAA,EAAE,EAAC,oBAFL;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,QAAQ,EAAEX,2BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,eAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eAQE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCARF,eASE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,eAUE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVF,eAWE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXF,eAYE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAZF,eAaE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAbF,eAcE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAdF,eAeE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAfF,CADF,eAkBE;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAiB,IAAA,GAAG,EAAE5B,IAAI,CAACyC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM/C,QAAN,CAFF,CAlBF,EAuBIP,eAAe,CAAC+B,GAAhB,CAAoBlC,MAAM,IAAI;AAC5B,QAAI0D,mBAAmB,GAAGzC,OAAO,CAAC+B,MAAR,CAAeW,MAAM,IAAIA,MAAM,CAAC3D,MAAP,CAAcuB,EAAd,KAAqBvB,MAAM,CAACuB,EAArD,CAA1B;AACA,QAAIO,aAAa,GAAG4B,mBAAmB,CAACE,MAApB,CAA2B,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGtD,QAAQ,CAACuD,IAAI,CAACH,MAAN,CAA5D,EAA2E,CAA3E,IAAgFD,mBAAmB,CAACK,MAAxH;AACA,QAAIhC,eAAe,GAAG2B,mBAAmB,CAACE,MAApB,CAA2B,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGG,UAAU,CAACF,IAAI,CAACG,QAAN,CAA9D,EAA+E,CAA/E,IAAoFP,mBAAmB,CAACK,MAA9H;AACA,QAAIG,YAAY,GAAGR,mBAAmB,CAACE,MAApB,CAA2B,CAACC,KAAD,EAAQC,IAAR,KAAiBD,KAAK,GAAGtD,QAAQ,CAACuD,IAAI,CAACK,KAAL,CAAWxB,SAAX,CAAqB,CAArB,CAAD,EAA0B,EAA1B,CAA5D,EAA2F,CAA3F,IAAgGe,mBAAmB,CAACK,MAAvI;AACA,QAAI3B,eAAe,GAAGgC,IAAI,CAACC,KAAL,CAAWH,YAAX,EAAyBI,QAAzB,CAAkC,EAAlC,CAAtB;AACAlC,IAAAA,eAAe,GAAI,GAAD,GAAMA,eAAxB;;AACA,QAAImC,KAAK,CAACxC,eAAD,CAAT,EAA4B;AAAEA,MAAAA,eAAe,GAAG,GAAlB;AAAuB;;AACrD,QAAIwC,KAAK,CAACzC,aAAD,CAAT,EAA0B;AAAEA,MAAAA,aAAa,GAAG,CAAhB;AAAmB;;AAC/C,QAAIM,eAAe,KAAK,MAAxB,EAAgC;AAAEA,MAAAA,eAAe,GAAG,SAAlB;AAA6B;;AAC/DpC,IAAAA,MAAM,CAACoC,eAAP,GAAyBA,eAAzB;AACApC,IAAAA,MAAM,CAAC+B,eAAP,GAAyBA,eAAzB;AACA/B,IAAAA,MAAM,CAAC8B,aAAP,GAAuBA,aAAvB;AACA,wBACE;AAAS,MAAA,KAAK,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAiB,MAAA,GAAG,EAAE9B,MAAM,CAACwE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAUxE,MAAM,CAACuB,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCvB,MAAM,CAACgC,IAA1C,CAA/B,CAFF,eAGE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEF,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAKE,oBAAC,gBAAD;AAAkB,MAAA,MAAM,EAAE,GAA1B;AAA+B,MAAA,KAAK,EAAE,GAAtC;AAA2C,MAAA,KAAK,EAAEM,eAAlD;AAAmE,MAAA,IAAI,EAAC,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,WAAD;AACE,MAAA,sBAAsB,EAAE,KAD1B;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,MAAM,EAAEL,eAHV;AAIE,MAAA,GAAG,EAAE/B,MAAM,CAACqD,SAJd;AAKE,MAAA,MAAM,EAAER,CAAC,IAAIS,OAAO,CAACC,GAAR,CAAY,QAAZ,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAYE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAMjC,aAAa,CAACtB,MAAM,CAACuB,EAAR,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF,eAaE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAwB,MAAA,OAAO,EAAE,MAAI2B,YAAY,CAAClD,MAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbF,CADF;AAgBD,GA7BD,CAvBJ,CADF,CADF;AA2DD,CApJM","sourcesContent":["import { SampleContext } from \"../sample/SampleProvider\"\nimport { Link } from \"react-router-dom\"\nimport React, { useContext, useState, useEffect, useRef } from \"react\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AvgRating from '@material-ui/lab/Rating';\nimport ReactColorSquare from \"react-color-square\";\nimport hexSorter from 'hexsorter';\n\nexport const SampleList = ({ sample }) => {\n\n  const [sort, setSort] = useState([])\n  const [thisUserSamples, setThisUserSamples] = useState([])\n  const [currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")))\n  const [thisUser, setThisUser] = useState([])\n\n  const {\n    favorites,\n    getUsers,\n    getSamples,\n    samples,\n    user,\n    ratings,\n    getRatings,\n    getUserById,\n    releaseSample,\n    users\n  } = useContext(SampleContext)\n\n  const delete_prompt = (id) => {\n    var retVal = window.confirm(\"Are you sure you want to delete your comment?\");\n    if( retVal == true ) {\n        deleteSample(id)\n        return true;\n    } else {\n        return false;\n    }\n}\n\n  useEffect(() => {\n    getSamples()\n    getUsers()\n    getRatings()\n    getUserById(currentUser)\n  }, [])\n\n  useEffect(() => {\n    if (sort === 1) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => (a.averageRating < b.averageRating) ? 1 : -1))\n      getRatings()\n    }\n    else if (sort === 2) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => (a.averageLoudness > b.averageLoudness) ? 1 : -1))\n      getRatings()\n    }\n    else if (sort === 3) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => (a.name > b.name) ? 1 : -1))\n      getRatings()\n    }\n    else if (sort === 4) {\n      setThisUserSamples(thisUserSamples.sort((a, b) => (a.name < b.name) ? 1 : -1))\n      getRatings()\n    }\n    else if (sort === 5) {\n      let hexArray = thisUserSamples.map(faveHex => (faveHex.averageColorHex))\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostSaturatedColor')\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc))\n      setThisUserSamples(sortedHex.sort((a, b) => (parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1)))\n      getRatings()\n    }\n    else if (sort === 6) {\n      let hexArray = thisUserSamples.map(faveHex => (faveHex.averageColorHex))\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostBrightColor')\n      let sortedHex = mostSaturatedColor.map(msc => thisUserSamples.find(fave => fave.averageColorHex === msc))\n      setThisUserSamples(sortedHex.sort((a, b) => (parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1)))\n      getRatings()\n    }\n  }, [sort])\n\n  const handleControlledInputChange = (e) => {\n    setSort(e.target.value)\n  }\n\n  useEffect(() => {\n    setThisUserSamples(samples.filter(sample => sample.uploader === currentUser))\n  }, [favorites, currentUser, samples])\n\n  const downloadFile = (sample) => {\n      window.location.href = sample.audio_url\n    console.log(\"\")\n  }\n\n  const deleteSample = (sample) => {\n\n    releaseSample(sample).then(getSamples)\n    console.log(\"\")\n  }\n\n  return (\n    <>\n      <div className=\"samples\">\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={0}\n          onChange={handleControlledInputChange}\n        >\n          <MenuItem value={0}>Sort By</MenuItem>\n          <MenuItem value={1}>Avg. Rating</MenuItem>\n          <MenuItem value={2}>Subjective Volume (Femme Users)</MenuItem>\n          <MenuItem value={3}>Alphabetical</MenuItem>\n          <MenuItem value={4}>Reverse Alphabetical</MenuItem>\n          <MenuItem value={5}>Saturation (Masc Users)</MenuItem>\n          <MenuItem value={6}>Brightness (Masc Users)</MenuItem>\n          <MenuItem value={7}>Brightness (Femme Users)</MenuItem>\n          <MenuItem value={8}>Saturation (Femme Users)</MenuItem>\n          <MenuItem value={9}>Subjective Volume (Masc Users)</MenuItem>\n        </Select>\n        <div class=\"sampleCard\">\n          <img class=\"img\" src={user.profile_image}></img>\n          <div>{thisUser}</div>\n        </div>\n        {\n          thisUserSamples.map(sample => {\n            let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id)\n            let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n            let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n            let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n            let averageColorHex = Math.round(averageColor).toString(16)\n            averageColorHex = `#` + averageColorHex\n            if (isNaN(averageLoudness)) { averageLoudness = 1.0 }\n            if (isNaN(averageRating)) { averageRating = 0 }\n            if (averageColorHex === \"#NaN\") { averageColorHex = '#ffffff' }\n            sample.averageColorHex = averageColorHex\n            sample.averageLoudness = averageLoudness\n            sample.averageRating = averageRating\n            return (\n              <section class=\"playerContainer\">\n                <img class=\"img\" src={sample.sample_image}></img>\n                <div class=\"link_card button4\"><Link to={`/browse/${sample.id}`}>{sample.name}</Link></div>\n                <AvgRating\n                  value={averageRating} />\n                <ReactColorSquare height={100} width={568} color={averageColorHex} text=\"\" />\n                <AudioPlayer\n                  autoPlayAfterSrcChange={false}\n                  preload=\"true\"\n                  volume={averageLoudness}\n                  src={sample.audio_url}\n                  onPlay={e => console.log(\"onPlay\")} />\n                <button class=\"button5\" onClick={() => delete_prompt(sample.id)}>Delete Sample</button>\n                <button class=\"button3\" onClick={()=>downloadFile(sample)}>Download Sample</button>\n              </section>)\n          })\n        }\n      </div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}