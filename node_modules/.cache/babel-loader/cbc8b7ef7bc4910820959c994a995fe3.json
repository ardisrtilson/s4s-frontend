{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Link } from \"react-router-dom\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport WaveSurfer from \"wavesurfer.js\";\nexport const CrushPanel = ({\n  sample\n}) => {\n  const [thisUserFavorites, setThisUserFavorites] = useState([]);\n  const [faves, setFaves] = useState([]);\n  const [currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")));\n  const waveformRef = useRef(null);\n  const {\n    favorites,\n    releaseFavorite,\n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    ratings,\n    getRatings\n  } = useContext(SampleContext);\n  useEffect(() => {\n    getUsers();\n    getFavorites();\n    getRatings();\n    setCurrentUser();\n    getSamples();\n  }, []);\n  useEffect(() => {\n    setThisUserFavorites(favorites.filter(faves => faves.user_id === currentUser));\n  }, [favorites]);\n  useEffect(() => {\n    setFaves(thisUserFavorites.map(fave => samples.find(sample => fave.sample_id === sample.id)));\n  }, [favorites]); // useEffect(() => {\n  //   waveformRef.current = WaveSurfer.create({ \n  //     container: waveformRef.current,\n  //     cursorColor: \"transparent\",\n  //     backgroundColor: \"black\"\n  //   });\n  //   waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n  //   waveformRef.current.setWaveColor(\"white\")\n  // }, [])\n\n  const downloadFile = () => {\n    window.location.href = sample.audio_url;\n  };\n\n  const removeFavorite = sample => {\n    let favId = thisUserFavorites.find(favorite => favorite.sample_id === sample.id);\n    releaseFavorite(favId.id).then(getFavorites);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), faves.map(sample => {\n    let thisSampleRatings = ratings.filter(rating => rating.sample === sample.id);\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: sample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${sample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 60\n      }\n    }, sample.name)), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      preload: \"true\",\n      src: sample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: () => removeFavorite(sample),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 35\n      }\n    }, \"Remove Favorite\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: downloadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    }, \"Download Sample\"));\n  })));\n}; // else {return <div ref={waveformRef} />}","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js"],"names":["SampleContext","Link","React","useContext","useState","useEffect","useRef","AudioPlayer","WaveSurfer","CrushPanel","sample","thisUserFavorites","setThisUserFavorites","faves","setFaves","currentUser","setCurrentUser","parseInt","localStorage","getItem","waveformRef","favorites","releaseFavorite","getFavorites","getUsers","getSamples","samples","ratings","getRatings","filter","user_id","map","fave","find","sample_id","id","downloadFile","window","location","href","audio_url","removeFavorite","favId","favorite","then","thisSampleRatings","rating","sample_image","name","e","console","log"],"mappings":"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","sourcesContent":["import { SampleContext } from \"../sample/SampleProvider\"\nimport { Link } from \"react-router-dom\"\nimport React, {useContext, useState, useEffect, useRef} from \"react\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport WaveSurfer from \"wavesurfer.js\";\n\nexport const CrushPanel = ({sample}) => {\n\n  const [ thisUserFavorites, setThisUserFavorites ] = useState([])\n  const [ faves, setFaves ] = useState([])\n  const [ currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")))\n\n  const waveformRef = useRef(null)\n\n  const {\n    favorites, \n    releaseFavorite, \n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    ratings,\n    getRatings,\n  } = useContext(SampleContext)\n\n  useEffect(() => {\n    getUsers()\n    getFavorites()\n    getRatings()\n    setCurrentUser()\n    getSamples()\n}, [])\n\nuseEffect(() => {\n  setThisUserFavorites(favorites.filter(faves => faves.user_id === currentUser))\n}, [favorites])\n\nuseEffect(() => {\n  setFaves(thisUserFavorites.map(fave => samples.find(sample => fave.sample_id === sample.id)))\n}, [favorites])\n\n  // useEffect(() => {\n  //   waveformRef.current = WaveSurfer.create({ \n  //     container: waveformRef.current,\n  //     cursorColor: \"transparent\",\n  //     backgroundColor: \"black\"\n  //   });\n  //   waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n  //   waveformRef.current.setWaveColor(\"white\")\n  // }, [])\n\n        const downloadFile = () => {\n          window.location.href = sample.audio_url\n        }\n\n        const removeFavorite = (sample) => {\n          let favId = thisUserFavorites.find(favorite => favorite.sample_id === sample.id)\n          releaseFavorite(favId.id).then(getFavorites)\n        }\n\nreturn (\n  <>\n  <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div>\n                {\n                    faves.map(sample => {\n                      let thisSampleRatings = ratings.filter(rating => rating.sample === sample.id)\n                        return (\n                          <section>\n                          <img class=\"img\" src={sample.sample_image}></img>\n                            <div class=\"link_card button4\"><Link to={`/browse/${sample.id}`}>{sample.name}</Link></div>\n                            {/* <div ref={waveformRef} /> */}\n                                  <AudioPlayer \n                                      autoPlayAfterSrcChange={false}\n                                      preload=\"true\"\n                                      src={sample.audio_url}\n                                      onPlay={e => console.log(\"onPlay\")}/>\n                                  <button class=\"button5\" onClick={()=>removeFavorite(sample)}>Remove Favorite</button>\n                                  <button class=\"button3\" onClick={downloadFile}>Download Sample</button>\n                          </section>)\n                    })\n                  }\n            </div> \n</>\n)\n}\n// else {return <div ref={waveformRef} />}"]},"metadata":{},"sourceType":"module"}