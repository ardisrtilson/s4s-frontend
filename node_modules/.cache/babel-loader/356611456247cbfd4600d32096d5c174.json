{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/upload/SampleForm.js\";\n// Organized\nimport React, { useContext, useRef } from \"react\";\nimport { SampleContext } from \"./SampleProvider\";\nimport \"./Samples.css\";\nimport firebase from 'firebase';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBvcefxE55FTuGU_atOzBriWjYMjBTWSmI\",\n  authDomain: \"selektor-b0fc6.firebaseapp.com\",\n  databaseURL: \"https://selektor-b0fc6.firebaseio.com\",\n  projectId: \"selektor-b0fc6\",\n  storageBucket: \"selektor-b0fc6.appspot.com\",\n  messagingSenderId: \"575613031578\",\n  appId: \"1:575613031578:web:9fbbe8aea6fe7b30593b23\",\n  measurementId: \"G-17ZEH949SN\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const SampleForm = props => {\n  let file;\n  let db = firebase.firestore();\n  let thingsRef = db.collection('Samples');\n  let url;\n  const {\n    addSample\n  } = useContext(SampleContext);\n  const name = useRef(null);\n  const description = useRef(null);\n\n  const constructNewSample = () => {\n    let fileRef = firebase.storage().ref(\"Audio/\" + file.name);\n    fileRef.put(file).then(() => {\n      async function getURL() {\n        url = await fileRef.getDownloadURL();\n      }\n\n      getURL().then(() => {\n        addSample({\n          name: name.current.value,\n          description: description.current.value,\n          customerId: parseInt(localStorage.getItem(\"customer\")),\n          rating: \"\",\n          url: url\n        });\n        thingsRef.add({\n          name: name.current.value,\n          description: description.current.value,\n          customerId: parseInt(localStorage.getItem(\"customer\")),\n          url: url\n        }).then(() => props.history.push(\"/browse\"));\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sampleForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Upload Sample\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 49\n    }\n  }, \"Sample Name:\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"sampleName\",\n    ref: name,\n    required: true,\n    autoFocus: true,\n    className: \"form-control\",\n    placeholder: \"Sample Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sampleName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 49\n    }\n  }, \"Description:\"), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"sampleDescription\",\n    ref: description,\n    required: true,\n    autoFocus: true,\n    className: \"form-control\",\n    placeholder: \"Enter Description Here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    class: \"button3\",\n    type: \"file\",\n    id: \"fileButton\",\n    onChange: evt => {\n      file = evt.target.files[0];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    class: \"button4\",\n    type: \"submit\",\n    onClick: evt => {\n      console.log(name.current.value);\n\n      if (name.current.value != \"\") {\n        if (description.current.value != \"\") {\n          evt.preventDefault();\n          constructNewSample();\n        } else {\n          window.alert(\"Please Enter a Description For Your Sample\");\n        }\n      } else {\n        window.alert(\"Please Enter a Name For Your Sample\");\n      }\n    },\n    class: \"button6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Upload\")));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/upload/SampleForm.js"],"names":["React","useContext","useRef","SampleContext","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","SampleForm","props","file","db","firestore","thingsRef","collection","url","addSample","name","description","constructNewSample","fileRef","storage","ref","put","then","getURL","getDownloadURL","current","value","customerId","parseInt","localStorage","getItem","rating","add","history","push","evt","target","files","console","log","preventDefault","window","alert"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useRef} from \"react\"\nimport { SampleContext } from \"./SampleProvider\"\nimport \"./Samples.css\"\nimport firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBvcefxE55FTuGU_atOzBriWjYMjBTWSmI\",\n    authDomain: \"selektor-b0fc6.firebaseapp.com\",\n    databaseURL: \"https://selektor-b0fc6.firebaseio.com\",\n    projectId: \"selektor-b0fc6\",\n    storageBucket: \"selektor-b0fc6.appspot.com\",\n    messagingSenderId: \"575613031578\",\n    appId: \"1:575613031578:web:9fbbe8aea6fe7b30593b23\",\n    measurementId: \"G-17ZEH949SN\"\n}\nfirebase.initializeApp(firebaseConfig)\n\nexport const SampleForm = (props) => {\n\n    let file\n    let db = firebase.firestore();\n    let thingsRef = db.collection('Samples')\n    let url\n\n    const { addSample } = useContext(SampleContext)\n    const name = useRef(null)\n    const description = useRef(null)\n\n    const constructNewSample = () => {\n        let fileRef = firebase.storage().ref(\"Audio/\" + file.name)    \n        fileRef.put(file).then(() => {\n            async function getURL(){\n            url = await fileRef.getDownloadURL()\n            }\n                getURL().then(() => {\n                    addSample({\n                        name: name.current.value,\n                        description: description.current.value,\n                        customerId: parseInt(localStorage.getItem(\"customer\")),\n                        rating: \"\",\n                        url: url\n                    })\n                    thingsRef.add({\n                        name: name.current.value,\n                        description: description.current.value,\n                        customerId: parseInt(localStorage.getItem(\"customer\")),\n                        url: url\n                    })\n                    .then(() => props.history.push(\"/browse\"))\n                })\n            })\n}\n\n    return (\n        <form className=\"sampleForm\">\n            <h1 class=\"heading\">Upload Sample</h1>\n                <div className=\"form-group1\">\n                    <label htmlFor=\"sampleName\"><h3>Sample Name:</h3></label>\n                    <input type=\"text\" id=\"sampleName\" ref={name} required autoFocus className=\"form-control\" placeholder=\"Sample Name\" />\n                </div>\n                <div className=\"form-group2\">\n                    <label htmlFor=\"sampleName\"><h3>Description:</h3> </label>\n                    <input type=\"text\" id=\"sampleDescription\" ref={description} required autoFocus className=\"form-control\" placeholder=\"Enter Description Here\" />\n                </div>\n                <div className=\"upload-group\">\n            <input class=\"button3\" type=\"file\" id=\"fileButton\" \n                onChange={evt => {\n                    file = evt.target.files[0]\n                }}/>\n            <button class=\"button4\" type=\"submit\"\n                onClick={evt => {\n                    console.log(name.current.value)\n                    if(name.current.value != \"\"){\n                        if(description.current.value != \"\"){\n                    evt.preventDefault()\n                    constructNewSample()}\n                    else{window.alert(\"Please Enter a Description For Your Sample\")}\n                    }\n                else{window.alert(\"Please Enter a Name For Your Sample\")}\n                }}\n                class=\"button6\">\n                Upload\n            </button>\n            </div>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}