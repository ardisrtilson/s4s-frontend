{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/auth/Register.js\";\nimport React, { useRef, useState } from \"react\";\nimport \"./Login.css\";\nexport const Register = props => {\n  const username = useRef();\n  const firstName = useRef();\n  const lastName = useRef();\n  const password = useRef();\n  const verifyPassword = useRef();\n  const passwordDialog = useRef();\n  const sex = useRef();\n  const [userImage, setUserImage] = useState(\"\");\n\n  const getBase64 = (file, callback) => {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => callback(reader.result));\n    reader.readAsDataURL(file);\n  };\n\n  const createPostImageJSON = event => {\n    getBase64(event.target.files[0], base64ImageString => {\n      setUserImage({\n        'image_data': base64ImageString\n      });\n    });\n  };\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (password.current.value === verifyPassword.current.value) {\n      // existingUserCheck()\n      debug;\n      fetch(\"http://localhost:8000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username.current.value,\n          password: password.current.value,\n          first_name: firstName.current.value,\n          last_name: lastName.current.value,\n          sex_id: sex.current.value,\n          profile_image: userImage.image_data\n        })\n      }).then(_ => _.json()).then(props.history.push(\"/login\"));\n    } else {\n      passwordDialog.current.showModal();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"dialog\", {\n    className: \"dialog dialog--password\",\n    ref: passwordDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Passwords do not match\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button--close\",\n    onClick: e => passwordDialog.current.close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form--login\",\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-3 font-weight-normal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Sign Up 4 Samples 4 Singles\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" Username \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: username,\n    type: \"text\",\n    name: \"username\",\n    className: \"form-control\",\n    placeholder: \"username\",\n    required: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \" First Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: firstName,\n    type: \"text\",\n    name: \"firstName\",\n    className: \"form-control\",\n    placeholder: \"First name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \" Last Name \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: lastName,\n    type: \"text\",\n    name: \"lastName\",\n    className: \"form-control\",\n    placeholder: \"Last name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    ref: sex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Femme\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Masc\")), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploadButtons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"image_url\",\n    onChange: evt => {\n      createPostImageJSON(evt);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \" Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    placeholder: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"verifyPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \" Verify Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: verifyPassword,\n    type: \"password\",\n    name: \"verifyPassword\",\n    className: \"form-control\",\n    placeholder: \"Verify password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Sign in\"))));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/auth/Register.js"],"names":["React","useRef","useState","Register","props","username","firstName","lastName","password","verifyPassword","passwordDialog","sex","userImage","setUserImage","getBase64","file","callback","reader","FileReader","addEventListener","result","readAsDataURL","createPostImageJSON","event","target","files","base64ImageString","handleRegister","e","preventDefault","current","value","debug","fetch","method","headers","body","JSON","stringify","first_name","last_name","sex_id","profile_image","image_data","then","_","json","history","push","showModal","textAlign","close","evt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAO,aAAP;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/B,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAMK,SAAS,GAAGL,MAAM,EAAxB;AACA,QAAMM,QAAQ,GAAGN,MAAM,EAAvB;AACA,QAAMO,QAAQ,GAAGP,MAAM,EAAvB;AACA,QAAMQ,cAAc,GAAGR,MAAM,EAA7B;AACA,QAAMS,cAAc,GAAGT,MAAM,EAA7B;AACA,QAAMU,GAAG,GAAGV,MAAM,EAAlB;AAEA,QAAM,CAAEW,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMY,SAAS,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAClC,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAMH,QAAQ,CAACC,MAAM,CAACG,MAAR,CAA9C;AACAH,IAAAA,MAAM,CAACI,aAAP,CAAqBN,IAArB;AACH,GAJD;;AAMA,QAAMO,mBAAmB,GAAIC,KAAD,IAAW;AAEnCT,IAAAA,SAAS,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,EAAyBC,iBAAD,IAAuB;AACpDb,MAAAA,YAAY,CAAC;AAAC,sBAAaa;AAAd,OAAD,CAAZ;AACH,KAFQ,CAAT;AAGH,GALD;;AAOA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIrB,QAAQ,CAACsB,OAAT,CAAiBC,KAAjB,KAA2BtB,cAAc,CAACqB,OAAf,CAAuBC,KAAtD,EAA6D;AACzD;AACAC,MAAAA,KAAK;AACGC,MAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,QAAAA,MAAM,EAAE,MAD4B;AAEpCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF2B;AAKpCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjC,UAAAA,QAAQ,EAAEA,QAAQ,CAACyB,OAAT,CAAiBC,KADV;AAEjBvB,UAAAA,QAAQ,EAAEA,QAAQ,CAACsB,OAAT,CAAiBC,KAFV;AAGjBQ,UAAAA,UAAU,EAAEjC,SAAS,CAACwB,OAAV,CAAkBC,KAHb;AAIjBS,UAAAA,SAAS,EAAEjC,QAAQ,CAACuB,OAAT,CAAiBC,KAJX;AAKjBU,UAAAA,MAAM,EAAE9B,GAAG,CAACmB,OAAJ,CAAYC,KALH;AAMjBW,UAAAA,aAAa,EAAE9B,SAAS,CAAC+B;AANR,SAAf;AAL8B,OAAnC,CAAL,CAcKC,IAdL,CAcUC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAdf,EAeKF,IAfL,CAgBYxC,KAAK,CAAC2C,OAAN,CAAcC,IAAd,CAAmB,QAAnB,CAhBZ;AAiBX,KApBD,MAoBO;AACHtC,MAAAA,cAAc,CAACoB,OAAf,CAAuBmB,SAAvB;AACH;AACJ,GA1BD;;AA4BA,sBACI;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,GAAG,EAAExC,cAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAEkB,CAAC,IAAIlB,cAAc,CAACoB,OAAf,CAAuBqB,KAAvB,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CAFJ,eAOI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAExB,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,IAAA,GAAG,EAAEtB,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,QAAQ,MAJZ;AAIa,IAAA,SAAS,MAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,IAAA,GAAG,EAAEC,SAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,WAAW,EAAC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,IAAA,GAAG,EAAEC,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,WAAW,EAAC,WAHhB;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAjBJ,eAyBI;AAAQ,IAAA,GAAG,EAAEI,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEA;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CAzBJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,WAAtB;AAAkC,IAAA,QAAQ,EAAGyC,GAAD,IAAS;AAAC9B,MAAAA,mBAAmB,CAAC8B,GAAD,CAAnB;AAAyB,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR,CADA,eAMI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI;AAAO,IAAA,GAAG,EAAE5C,QAAZ;AAAsB,IAAA,IAAI,EAAC,UAA3B;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,WAAW,EAAC,UAHhB;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CA7BJ,eA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAO,IAAA,GAAG,EAAEC,cAAZ;AAA4B,IAAA,IAAI,EAAC,UAAjC;AACI,IAAA,IAAI,EAAC,gBADT;AAEI,IAAA,SAAS,EAAC,cAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA1CJ,eAkDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAlDJ,CAPJ,CADJ;AAkEH,CAtHM","sourcesContent":["import React, { useRef, useState } from \"react\"\nimport \"./Login.css\"\n\nexport const Register = (props) => {\n    const username = useRef()\n    const firstName = useRef()\n    const lastName = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n    const passwordDialog = useRef()\n    const sex = useRef()\n\n    const [ userImage, setUserImage ] = useState(\"\")\n\n    const getBase64 = (file, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(file);\n    }\n\n    const createPostImageJSON = (event) => {\n        \n        getBase64(event.target.files[0], (base64ImageString) => {\n            setUserImage({'image_data':base64ImageString})\n        });\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            // existingUserCheck()\n            debug\n                    fetch(\"http://localhost:8000/register\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            username: username.current.value,\n                            password: password.current.value,\n                            first_name: firstName.current.value,\n                            last_name: lastName.current.value,\n                            sex_id: sex.current.value,\n                            profile_image: userImage.image_data\n                        })\n                    })\n                        .then(_ => _.json())\n                        .then(\n                                props.history.push(\"/login\"))\n        } else {\n            passwordDialog.current.showModal()\n        }\n    }\n\n    return (\n        <main style={{ textAlign: \"center\" }}>\n\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Passwords do not match</div>\n                <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n\n            <form className=\"form--login\" onSubmit={handleRegister}>\n                <h1 className=\"h3 mb-3 font-weight-normal\">Sign Up 4 Samples 4 Singles</h1>\n                <fieldset>\n                    <label htmlFor=\"username\"> Username </label>\n                    <input ref={username} type=\"text\"\n                        name=\"username\"\n                        className=\"form-control\"\n                        placeholder=\"username\"\n                        required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"firstName\"> First Name </label>\n                    <input ref={firstName} type=\"text\"\n                        name=\"firstName\"\n                        className=\"form-control\"\n                        placeholder=\"First name\"/>\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"lastName\"> Last Name </label>\n                    <input ref={lastName} type=\"text\"\n                        name=\"lastName\"\n                        className=\"form-control\"\n                        placeholder=\"Last name\"\n                        required />\n                </fieldset>\n                <select ref={sex}>\n                <option value=\"1\">Femme</option>\n                <option value=\"2\">Masc</option>\n                </select>\n                <fieldset>\n                <fieldset>\n                        <div className=\"uploadButtons\">\n                            <input type=\"file\" id=\"image_url\" onChange={(evt) => {createPostImageJSON(evt)}} />\n                        </div>\n                </fieldset>\n                    <label htmlFor=\"inputPassword\"> Password </label>\n                    <input ref={password} type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <label htmlFor=\"verifyPassword\"> Verify Password </label>\n                    <input ref={verifyPassword} type=\"password\"\n                        name=\"verifyPassword\"\n                        className=\"form-control\"\n                        placeholder=\"Verify password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <button type=\"submit\">\n                        Sign in\n                    </button>\n                </fieldset>\n            </form>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}