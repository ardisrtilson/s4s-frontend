{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleDetail.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Samples.css\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\nexport const SampleDetails = props => {\n  const [localState, setLocalState] = useState({});\n\n  const delete_prompt = id => {\n    var retVal = window.confirm(\"Are you sure you want to delete your comment?\");\n\n    if (retVal == true) {\n      deleteComment(id);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleControlledInputChange = e => {\n    const newComment = Object.assign({}, localState);\n    newComment[e.target.name] = e.target.value;\n    setLocalState(newComment);\n  };\n\n  const deleteComment = id => {\n    releaseComment(id);\n    getComments();\n  };\n\n  const submitComment = () => {\n    addComment({\n      content: localState.content,\n      user: localStorage.getItem(\"user_number\"),\n      date_added: \"4\",\n      sample: props.match.params.sampleId\n    });\n    getComments();\n  };\n\n  const waveformRef = useRef(null);\n  const {\n    getUsers,\n    singleSample,\n    getSampleById,\n    getComments,\n    commentValue,\n    addComment,\n    releaseComment\n  } = useContext(SampleContext);\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\",\n      barWidth: 1,\n      fillParent: true\n    });\n    waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3');\n    waveformRef.current.setWaveColor(\"red\");\n  }, []);\n  useEffect(() => {\n    let sampleId = parseInt(props.match.params.sampleId);\n    getUsers();\n    getComments().then(res => setLocalState(res));\n    getSampleById(sampleId);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"img\",\n    src: singleSample.sample_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"link_card button4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/browse/${singleSample.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 48\n    }\n  }, singleSample.name)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: waveformRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayer, {\n    autoPlayAfterSrcChange: false,\n    src: singleSample.audio_url,\n    onPlay: e => console.log(\"onPlay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"content\",\n    onChange: handleControlledInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      submitComment();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Submit Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 14\n    },\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Comments\"), commentValue.map(comment => {\n    return /*#__PURE__*/React.createElement(Paper, {\n      style: {\n        padding: \"40px 20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: comment.user.profile_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      justifyContent: \"left\",\n      item: true,\n      xs: true,\n      zeroMinWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        margin: 0,\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, comment.user.user.username), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, comment.content), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        delete_prompt(comment.id);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Delete Comment\"), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: \"left\",\n        color: \"gray\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"posted less than 1 minute ago\"))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"fullWidth\",\n      style: {\n        margin: \"30px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }));\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleDetail.js"],"names":["React","useContext","useEffect","useState","useRef","SampleContext","AudioPlayer","Link","WaveSurfer","HexColorPicker","TextField","Rating","Button","Divider","Avatar","Grid","Paper","SampleDetails","props","localState","setLocalState","delete_prompt","id","retVal","window","confirm","deleteComment","handleControlledInputChange","e","newComment","Object","assign","target","name","value","releaseComment","getComments","submitComment","addComment","content","user","localStorage","getItem","date_added","sample","match","params","sampleId","waveformRef","getUsers","singleSample","getSampleById","commentValue","current","create","container","cursorColor","backgroundColor","barWidth","fillParent","load","setWaveColor","parseInt","then","res","sample_image","audio_url","console","log","padding","map","comment","profile_image","margin","textAlign","username","color"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Samples.css\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css'\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\n\nexport const SampleDetails = (props) => {\n\n  const [localState, setLocalState] = useState({})\n\n  const delete_prompt = (id) => {\n    var retVal = window.confirm(\"Are you sure you want to delete your comment?\");\n    if( retVal == true ) {\n        deleteComment(id)\n        return true;\n    } else {\n        return false;\n    }\n}\n\n  const handleControlledInputChange = (e) => {\n    const newComment = Object.assign({}, localState)\n    newComment[e.target.name] = e.target.value\n    setLocalState(newComment)\n}\n\nconst deleteComment = (id) => {\n  releaseComment(id)\n  getComments()\n}\n\nconst submitComment = () => {\n  addComment({\n    content: localState.content,\n    user: localStorage.getItem(\"user_number\"),\n    date_added: \"4\",\n    sample: props.match.params.sampleId\n})\n  getComments()\n}\n\n  const waveformRef = useRef(null);\n\n    const {\n        getUsers,\n        singleSample,\n        getSampleById,\n        getComments,\n        commentValue,\n        addComment,\n        releaseComment\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        waveformRef.current = WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\",\n          barWidth: 1,\n          fillParent: true\n        });\n        waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n        waveformRef.current.setWaveColor(\"red\")\n      }, [])\n\n    useEffect(() => {\n        let sampleId = parseInt(props.match.params.sampleId)\n        getUsers()\n        getComments().then(res => setLocalState(res))\n        getSampleById(sampleId)\n    }, [])\n\n        return (\n            <>\n            <div class=\"sampleContainer\">\n            <img class=\"img\" src={singleSample.sample_image}></img>\n                <div class=\"link_card button4\"><Link to={`/browse/${singleSample.id}`}>{singleSample.name}</Link></div>\n                <div ref={waveformRef} />\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={singleSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")}/>\n            <TextField name=\"content\" onChange={handleControlledInputChange}></TextField>\n            <Button onClick={() => {submitComment()}}>Submit Comment</Button>\n            </div>\n            <div style={{ padding: 14 }} className=\"App\">\n      <h1>Comments</h1>\n      {\n      commentValue.map(comment => {\n      return(\n      <Paper style={{ padding: \"40px 20px\" }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt=\"Remy Sharp\" src={comment.user.profile_image} />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>{comment.user.user.username}</h4>\n            <p style={{ textAlign: \"left\" }}>\n              {comment.content}\n            </p>\n            <Button onClick={() => {delete_prompt(comment.id)}}>Delete Comment</Button>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n              posted less than 1 minute ago\n            </p>\n          </Grid>\n        </Grid>\n        <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\n      </Paper>\n      )\n      }\n      )\n\n      }\n    </div>\n            </>\n        )\n}"]},"metadata":{},"sourceType":"module"}