{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/rate/Rate.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Browse.css\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nexport const Rate = () => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [value, setValue] = useState(null);\n  const [volume, setVolume] = useState(null);\n  const [currentSample, setCurrentSample] = useState({});\n  const [noneLeft, setNoneLeft] = useState(false);\n  const [zeroed, setZeroed] = useState(false);\n  const [itemsLeftToShow, setitemsLeftToShow] = useState([]);\n  const [color, setColor] = useState(\"#aabbcc\");\n  const waveformRef = useRef(null);\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    skipped,\n    addRatings,\n    getRatings,\n    ratings,\n    getSkipped,\n    randomSamplesLoaded\n  } = useContext(SampleContext);\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\",\n      barWidth: 1,\n      fillParent: true\n    });\n    waveformRef.current.load('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3');\n    waveformRef.current.setWaveColor(color);\n  }, []);\n  useEffect(() => {\n    waveformRef.current.setWaveColor(color);\n  }, [color]);\n  useEffect(() => {\n    waveformRef.current.setWaveColor(color);\n  }, [url]);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addSampleRatings = () => {\n    console.log(volume);\n    addRatings({\n      sample: currentSample.id,\n      color: color,\n      rating: value,\n      loudness: volume\n    });\n  };\n\n  useEffect(() => {\n    getUsers().then(getSkipped).then(getFavorites).then(getRandomSample);\n  }, []);\n  useEffect(() => {\n    if (itemsLeftToShow.length > 0) {\n      setCurrentSample(itemsLeftToShow[rSampleItem]);\n    }\n  }, [rSampleItem, zeroed]);\n  useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0) {\n      console.log(itemsLeftToShow[rSampleItem]);\n\n      if (rSampleItem < itemsLeftToShow.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else {\n        setRSampleValue(0);\n        setZeroed(true);\n      }\n\n      setNoneLeft(false);\n    } else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n      //data has been loaded from api, filtering done, no items left to show\n      setNoneLeft(true);\n    } else {}\n  }, [itemsLeftToShow, randomSample, randomSamplesLoaded]);\n  useEffect(() => {\n    //Filtrationxs\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n\n    if (randomSample.length > 0) {\n      let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites));\n      let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped));\n      console.log(randomSamplesThatHaveNotBeenSkippedOrFavorited);\n      setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited); //Increment\n    }\n  }, [randomSample, ratings]);\n\n  if (noneLeft !== true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: currentSample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${currentSample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 48\n      }\n    }, currentSample.name)), /*#__PURE__*/React.createElement(Rating, {\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      src: currentSample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      onVolumeChange: e => setVolume(e.target.volume),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: addSampleRatings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \"Submit Ratings\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button2\",\n      onClick: getRatings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(HexColorPicker, {\n      color: color,\n      onChange: setColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, \"None Left\");\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/rate/Rate.js"],"names":["React","useContext","useEffect","useState","useRef","Rating","SampleContext","AudioPlayer","Link","WaveSurfer","HexColorPicker","Rate","rSampleItem","setRSampleValue","value","setValue","volume","setVolume","currentSample","setCurrentSample","noneLeft","setNoneLeft","zeroed","setZeroed","itemsLeftToShow","setitemsLeftToShow","color","setColor","waveformRef","favorites","getUsers","getFavorites","getRandomSample","randomSample","skipped","addRatings","getRatings","ratings","getSkipped","randomSamplesLoaded","current","create","container","cursorColor","backgroundColor","barWidth","fillParent","load","setWaveColor","url","comparer","otherArray","filter","other","sample_id","id","length","addSampleRatings","console","log","sample","rating","loudness","then","increment","currentUser","parseInt","localStorage","getItem","thisUserFavorites","faves","user_id","thisUserSkipped","skip","randomSamplesThatHaveNotBeenFavorited","randomSamplesThatHaveNotBeenSkippedOrFavorited","sample_image","name","event","newValue","audio_url","e","target"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Browse.css\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css'\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\n\nexport const Rate = () => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [value, setValue] = useState(null)\n    const [volume, setVolume] = useState(null)\n    const [currentSample, setCurrentSample] = useState({})\n    const [noneLeft, setNoneLeft] = useState(false)\n    const [zeroed, setZeroed] = useState(false)\n    const [itemsLeftToShow, setitemsLeftToShow] = useState([])\n    const [color, setColor] = useState(\"#aabbcc\");\n\n    const waveformRef = useRef(null);\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        skipped,\n        addRatings,\n        getRatings,\n        ratings,\n        getSkipped,\n        randomSamplesLoaded,\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        waveformRef.current = WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\",\n          barWidth: 1,\n          fillParent:true\n        });\n        waveformRef.current.load('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3')\n        waveformRef.current.setWaveColor(color)\n      }, [])\n\n      useEffect(() => {\n        waveformRef.current.setWaveColor(color)\n      }, [color]);\n\n      useEffect(() => {\n        waveformRef.current.setWaveColor(color)\n      }, [url]);\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addSampleRatings = () => {\n        console.log(volume)\n        addRatings({\n            sample: currentSample.id,\n            color: color,\n            rating: value,\n            loudness: volume\n        })\n    }\n    \n    useEffect(() => {\n        getUsers().then(getSkipped).then(getFavorites).then(getRandomSample)\n    }, [])\n\n    useEffect(() => {\n        if (itemsLeftToShow.length > 0){\n        setCurrentSample(itemsLeftToShow[rSampleItem])\n        }\n    }, [rSampleItem, zeroed])\n\n    useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0){\n            console.log(itemsLeftToShow[rSampleItem])\n            if (rSampleItem < itemsLeftToShow.length - 1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } else {\n                setRSampleValue(0)\n                setZeroed(true)\n            }\n            setNoneLeft(false)\n    }\n    else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n        //data has been loaded from api, filtering done, no items left to show\n        setNoneLeft(true)\n    }\n    else {\n        \n    }\n    }, [itemsLeftToShow, randomSample, randomSamplesLoaded])\n\n    useEffect(() => {\n\n        //Filtrationxs\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        if (randomSample.length > 0) {\n            let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites))\n            let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped))\n            console.log(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            //Increment\n        }\n    }, [randomSample, ratings])\n\n    if (noneLeft !== true) {\n        return (\n            <>\n            <div class =\"sampleContainer\">\n            <img class=\"img\" src={currentSample.sample_image}></img>\n            <div ref={waveformRef} />\n                <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n                <Rating \n                value={value}\n                onChange={(event, newValue) => {setValue(newValue)}}/>\n\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={currentSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")}\n                    onVolumeChange={e => setVolume(e.target.volume)} />\n                    <button class=\"button5\" onClick={addSampleRatings}>Submit Ratings</button>\n                    <button class=\"button2\" onClick={getRatings}>Skip</button>\n                <HexColorPicker color={color} onChange={setColor} />\n            </div>\n            </>\n        )\n    }\n    else {\n        return (\n            <div class=\"sampleCard\">\n                None Left\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}