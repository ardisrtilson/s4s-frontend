{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport Rating from '@material-ui/lab/Rating';\nexport const BrowseSamples = props => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [currentSample, setCurrentSample] = useState({});\n  const [noneLeft, setNoneLeft] = useState(false);\n  const [zeroed, setZeroed] = useState(false);\n  const [itemsLeftToShow, setitemsLeftToShow] = useState([]);\n  const [wavesurf, setWavesurf] = useState(false);\n  const waveformRef = useRef(null);\n  const [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3');\n  const [color, setColor] = useState(\"#aabbcc\");\n  const [wavesurfCreated, setWavesurfCreated] = useState(false);\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    addFavorites,\n    skipped,\n    addSkipped,\n    getSkipped,\n    randomSamplesLoaded,\n    getRatings,\n    ratings\n  } = useContext(SampleContext);\n  useEffect(() => {\n    if (waveformRef.current) {\n      setWavesurf(WaveSurfer.create({\n        container: waveformRef.current,\n        cursorColor: \"transparent\",\n        backgroundColor: \"black\",\n        barWidth: 1,\n        fillParent: true\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (wavesurf !== false) {\n      wavesurf.load(currentSample.audio_url);\n    }\n  }, [currentSample]);\n  useEffect(() => {\n    console.log(waveformRef);\n\n    if (wavesurf !== false) {\n      wavesurf.setWaveColor(color);\n      setWavesurfCreated(true);\n    }\n  }, [color]);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addSampleToFavorites = () => {\n    addFavorites({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  const addSampleToSkipped = () => {\n    addSkipped({\n      user: parseInt(localStorage.getItem(\"user_number\")),\n      sample: currentSample.id\n    });\n  };\n\n  useEffect(() => {\n    getUsers().then(getSkipped).then(getFavorites).then(getRandomSample).then(getRatings);\n  }, []);\n  useEffect(() => {\n    if (itemsLeftToShow.length > 0) {\n      setCurrentSample(itemsLeftToShow[rSampleItem]);\n    }\n  }, [rSampleItem, zeroed]);\n  useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0) {\n      if (rSampleItem < itemsLeftToShow.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else if (rSampleItem === 0 && itemsLeftToShow.length - 1 === 0) {\n        setZeroed(true);\n      } else {\n        setRSampleValue(0);\n      }\n\n      setNoneLeft(false);\n    } else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n      //data has been loaded from api, filtering done, no items left to show\n      setNoneLeft(true);\n    }\n  }, [itemsLeftToShow, randomSample, randomSamplesLoaded]);\n  useEffect(() => {\n    //Filtration\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n\n    if (randomSample.length > 0) {\n      let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites));\n      let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped));\n      setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited); //Increment\n    }\n  }, [favorites, skipped, randomSample]);\n\n  if (noneLeft !== true && randomSamplesLoaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: currentSample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), \"let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id) let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length; let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length; let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length; let averageColorHex = Math.round(averageColor).toString(16) averageColorHex = `#` + averageColorHex if(isNaN(averageLoudness))\", averageLoudness = 1.0, \"if(isNaN(averageRating))\", averageRating = 0, \"if(averageColorHex === \\\"#NaN\\\")\", averageColorHex = '#ffffff', \"sample.averageColorHex = averageColorHex sample.averageLoudness = averageLoudness sample.averageRating = averageRating\", /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${currentSample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 48\n      }\n    }, currentSample.name)), /*#__PURE__*/React.createElement(Rating, {\n      value: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      src: currentSample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: addSampleToSkipped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, \"Nah\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button2\",\n      onClick: getFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: addSampleToFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, \"Love\"));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), \"You've checked out all the samples currently in our archive.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 77\n      }\n    }), \"Come back later this week and there's sure to be more! \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 72\n      }\n    }), \"Right now you go ahead and \", /*#__PURE__*/React.createElement(Link, {\n      to: `/crushes`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 44\n      }\n    }, \"check out your crushes\"));\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","useRef","SampleContext","AudioPlayer","Link","WaveSurfer","Rating","BrowseSamples","props","rSampleItem","setRSampleValue","currentSample","setCurrentSample","noneLeft","setNoneLeft","zeroed","setZeroed","itemsLeftToShow","setitemsLeftToShow","wavesurf","setWavesurf","waveformRef","audio_url","setAudioURL","color","setColor","wavesurfCreated","setWavesurfCreated","favorites","getUsers","getFavorites","getRandomSample","randomSample","addFavorites","skipped","addSkipped","getSkipped","randomSamplesLoaded","getRatings","ratings","current","create","container","cursorColor","backgroundColor","barWidth","fillParent","load","console","log","setWaveColor","comparer","otherArray","filter","other","sample_id","id","length","addSampleToFavorites","user","parseInt","localStorage","getItem","sample","addSampleToSkipped","then","increment","currentUser","thisUserFavorites","faves","user_id","thisUserSkipped","skip","randomSamplesThatHaveNotBeenFavorited","randomSamplesThatHaveNotBeenSkippedOrFavorited","sample_image","averageLoudness","averageRating","averageColorHex","name","e"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\nimport Rating from '@material-ui/lab/Rating';\n\nexport const BrowseSamples = (props) => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [currentSample, setCurrentSample] = useState({})\n    const [noneLeft, setNoneLeft] = useState(false)\n    const [zeroed, setZeroed] = useState(false)\n    const [itemsLeftToShow, setitemsLeftToShow] = useState([])\n    const [wavesurf, setWavesurf] = useState(false)\n    const waveformRef = useRef(null);\n    const [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3')\n    const [color, setColor] = useState(\"#aabbcc\")\n    const [wavesurfCreated, setWavesurfCreated] = useState(false)\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        addFavorites,\n        skipped,\n        addSkipped,\n        getSkipped,\n        randomSamplesLoaded,\n        getRatings,\n        ratings\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        if (waveformRef.current) {\n            setWavesurf(WaveSurfer.create({\n                container: waveformRef.current,\n                cursorColor: \"transparent\",\n                backgroundColor: \"black\",\n                barWidth: 1,\n                fillParent: true\n            }))\n        }\n    }, [])\n\n    useEffect(() => {\n        if (wavesurf !== false) {\n            wavesurf.load(currentSample.audio_url)\n        }\n    }, [currentSample])\n\n    useEffect(() => {\n        console.log(waveformRef)\n        if (wavesurf !== false) {\n            wavesurf.setWaveColor(color)\n            setWavesurfCreated(true)\n        }\n    }, [color])\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addSampleToFavorites = () => {\n        addFavorites({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n\n    const addSampleToSkipped = () => {\n        addSkipped({\n            user: parseInt(localStorage.getItem(\"user_number\")),\n            sample: currentSample.id\n        })\n    }\n    \n    useEffect(() => {\n        getUsers().then(getSkipped).then(getFavorites).then(getRandomSample).then(getRatings)\n    }, [])\n\n    useEffect(() => {\n        if (itemsLeftToShow.length > 0){\n        setCurrentSample(itemsLeftToShow[rSampleItem])\n        }\n    }, [rSampleItem, zeroed])\n\n    useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0){\n            if (rSampleItem < itemsLeftToShow.length-1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } \n            else if(rSampleItem === 0 && itemsLeftToShow.length-1 === 0){\n                setZeroed(true)\n            }\n            else {\n                setRSampleValue(0)\n            }\n            setNoneLeft(false)\n    }\n    else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n        //data has been loaded from api, filtering done, no items left to show\n        setNoneLeft(true)\n    }\n    \n    }, [itemsLeftToShow, randomSample, randomSamplesLoaded])\n\n    useEffect(() => {\n\n        //Filtration\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        if (randomSample.length > 0) {\n            let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites))\n            let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped))\n            setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            //Increment\n        }\n    }, [favorites, skipped, randomSample])\n\n    if (noneLeft !== true && randomSamplesLoaded) {\n        return (\n            <div class=\"sampleContainer\">\n                <div ref={waveformRef} />\n                <img class=\"img\" src={currentSample.sample_image}></img>let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id)\n                      let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n                      let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n                      let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n                      let averageColorHex = Math.round(averageColor).toString(16)\n                      averageColorHex = `#` + averageColorHex\n                      if(isNaN(averageLoudness)){averageLoudness = 1.0}\n                      if(isNaN(averageRating)){averageRating = 0}\n                      if(averageColorHex === \"#NaN\"){averageColorHex = '#ffffff'}\n                      sample.averageColorHex = averageColorHex\n                      sample.averageLoudness = averageLoudness \n                      sample.averageRating = averageRating\n                <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n                <Rating\n                        value={5}/>\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={currentSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")} />\n                <button class=\"button5\" onClick={addSampleToSkipped}>Nah</button>\n                <button class=\"button2\" onClick={getFavorites}>Skip</button>\n                <button class=\"button3\" onClick={addSampleToFavorites}>Love</button>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <div ref={waveformRef} />\n                You've checked out all the samples currently in our archive.<br></br>\n                Come back later this week and there's sure to be more! <br></br>\n                Right now you go ahead and <Link to={`/crushes`}>check out your crushes</Link>\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}