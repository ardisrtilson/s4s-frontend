{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleDetail.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Samples.css\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\nexport const SampleDetails = props => {\n  const waveformRef = useRef(null);\n  const contentRef = useRef(\"\");\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    skipped,\n    addRatings,\n    getRatings,\n    singleSample,\n    ratings,\n    getSkipped,\n    addComment,\n    randomSamplesLoaded,\n    getSampleById\n  } = useContext(SampleContext);\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\"\n    });\n    waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3');\n    waveformRef.current.setWaveColor(color);\n  }, []);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addThisComment = () => {\n    console.log(contentRef.current.value);\n    addComment({\n      sample: singleSample.id,\n      content: contentRef.current.value,\n      date_added: \"\"\n    });\n  };\n\n  useEffect(() => {\n    let sampleId = parseInt(props.match.params.sampleId);\n    getUsers().then(getSkipped).then(getFavorites).then(getSampleById(sampleId));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"img\",\n    src: singleSample.sample_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"link_card button4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/browse/${singleSample.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 48\n    }\n  }, singleSample.name)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: waveformRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayer, {\n    autoPlayAfterSrcChange: false,\n    src: singleSample.audio_url,\n    onPlay: e => console.log(\"onPlay\"),\n    onVolumeChange: e => setVolume(e.target.volume),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    ref: contentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      addThisComment();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Submit Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 14\n    },\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: \"40px 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: singleSample.sample_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    justifyContent: \"left\",\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: 0,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, \"Michel Michel\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Lorem ipsum.\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"left\",\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"posted 1 minute ago\"))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"fullWidth\",\n    style: {\n      margin: \"30px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: singleSample.sample_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    justifyContent: \"left\",\n    item: true,\n    xs: true,\n    zeroMinWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      margin: 0,\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Michel Michel\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Lorem ipsum.\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"left\",\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"posted 1 minute ago\"))))));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleDetail.js"],"names":["React","useContext","useEffect","useState","useRef","Rating","SampleContext","AudioPlayer","Link","WaveSurfer","HexColorPicker","TextField","Button","Divider","Avatar","Grid","Paper","SampleDetails","props","waveformRef","contentRef","favorites","getUsers","getFavorites","getRandomSample","randomSample","skipped","addRatings","getRatings","singleSample","ratings","getSkipped","addComment","randomSamplesLoaded","getSampleById","current","create","container","cursorColor","backgroundColor","load","setWaveColor","color","comparer","otherArray","filter","other","sample_id","id","length","addThisComment","console","log","value","sample","content","date_added","sampleId","parseInt","match","params","then","sample_image","name","audio_url","e","setVolume","target","volume","padding","margin","textAlign"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Samples.css\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css'\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\n\n\nexport const SampleDetails = (props) => {\n\n    const waveformRef = useRef(null);\n    const contentRef = useRef(\"\")\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        skipped,\n        addRatings,\n        getRatings,\n        singleSample,\n        ratings,\n        getSkipped,\n        addComment,\n        randomSamplesLoaded,\n        getSampleById,\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        waveformRef.current = WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\"\n        });\n        waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n        waveformRef.current.setWaveColor(color)\n      }, []);\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addThisComment = () => {\n      console.log(contentRef.current.value)\n        addComment({\n            sample: singleSample.id,\n            content: contentRef.current.value,\n            date_added: \"\"\n        })\n    }\n    useEffect(() => {\n        let sampleId = parseInt(props.match.params.sampleId)\n        getUsers().then(getSkipped).then(getFavorites).then(getSampleById(sampleId))\n    }, [])\n\n        return (\n            <>\n            <div class=\"sampleContainer\">\n            <img class=\"img\" src={singleSample.sample_image}></img>\n                <div class=\"link_card button4\"><Link to={`/browse/${singleSample.id}`}>{singleSample.name}</Link></div>\n                <div ref={waveformRef} />\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={singleSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")}\n                    onVolumeChange={e => setVolume(e.target.volume)} />\n            <TextField ref={contentRef}></TextField>\n            <Button onClick={() => { addThisComment() }}>Submit Comment</Button>\n            </div>\n            <div style={{ padding: 14 }} className=\"App\">\n      <h1>Comments</h1>\n      <Paper style={{ padding: \"40px 20px\" }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt=\"Remy Sharp\" src={singleSample.sample_image} />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>Michel Michel</h4>\n            <p style={{ textAlign: \"left\" }}>\n              Lorem ipsum.{\" \"}\n            </p>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n              posted 1 minute ago\n            </p>\n          </Grid>\n        </Grid>\n        <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt=\"Remy Sharp\" src={singleSample.sample_image} />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>Michel Michel</h4>\n            <p style={{ textAlign: \"left\" }}>\n              Lorem ipsum.{\" \"}\n            </p>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n              posted 1 minute ago\n            </p>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n            </>\n        )\n}"]},"metadata":{},"sourceType":"module"}