{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Browse } from \"./Browse\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  // Context\n  const {\n    favorites,\n    filterValue,\n    getCustomers,\n    getFavorites,\n    getSamples,\n    samples,\n    searchTerms,\n    setFilter\n  } = useContext(SampleContext); // State \n\n  const [filteredSamples, setFiltered] = useState([]); // Hooks\n\n  useEffect(() => {\n    getSamples().then(() => {\n      getCustomers().then(() => {\n        getFavorites().then(() => {\n          let samplesToDisplay = samples;\n          let randomSample = samples;\n          let currentlyFiltered = samples;\n          const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer)); // const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer))\n\n          const finalFilter = notUser.filter(sample => {\n            matchingFave = favorites.find(favorite => favorite.customerId === parseInt(localStorage.customer) && sample.id === favorite.sampleId);\n            return matchingFave == undefined;\n          });\n          console.log(finalFilter);\n          const randInt = Math.floor(Math.random() * notUser.length + 1);\n          randomSample = [finalFilter.find(randomSample => randomSample.id == randInt)];\n          setFiltered(randomSample);\n        });\n      });\n    });\n  }, []); // JSX\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(Browse, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","Browse","BrowseSamples","props","favorites","filterValue","getCustomers","getFavorites","getSamples","samples","searchTerms","setFilter","filteredSamples","setFiltered","then","samplesToDisplay","randomSample","currentlyFiltered","notUser","filter","byUser","customerId","parseInt","localStorage","customer","finalFilter","sample","matchingFave","find","favorite","id","sampleId","undefined","console","log","randInt","Math","floor","random","length","map"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,cAAP;AACA,OAAO,sCAAP;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEpC;AACA,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,WADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,WANE;AAOFC,IAAAA;AAPE,MAQFd,UAAU,CAACG,aAAD,CARd,CAHoC,CAapC;;AAEA,QAAM,CAAEY,eAAF,EAAmBC,WAAnB,IAAmCd,QAAQ,CAAC,EAAD,CAAjD,CAfoC,CAiBpC;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU,GAAGM,IAAb,CAAkB,MAAM;AACxBR,MAAAA,YAAY,GAAGQ,IAAf,CAAoB,MAAM;AAC1BP,QAAAA,YAAY,GAAGO,IAAf,CAAoB,MAAM;AAC1B,cAAIC,gBAAgB,GAAGN,OAAvB;AACA,cAAIO,YAAY,GAAGP,OAAnB;AACA,cAAIQ,iBAAiB,GAAGR,OAAxB;AACQ,gBAAMS,OAAO,GAAGD,iBAAiB,CAACE,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,UAAP,IAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhE,CAAhB,CAJkB,CAKlB;;AACA,gBAAMC,WAAW,GAAGP,OAAO,CAACC,MAAR,CAAeO,MAAM,IAAI;AACzCC,YAAAA,YAAY,GAAGvB,SAAS,CAACwB,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACR,UAAT,KAAwBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhC,IAA2DE,MAAM,CAACI,EAAP,KAAcD,QAAQ,CAACE,QAA7G,CAAf;AACA,mBAAOJ,YAAY,IAAIK,SAAvB;AAAiC,WAFjB,CAApB;AAGAC,UAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AAEA,gBAAMU,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBpB,OAAO,CAACqB,MAAxB,GAAiC,CAA5C,CAAhB;AACAvB,UAAAA,YAAY,GAAG,CAACS,WAAW,CAACG,IAAZ,CAAiBZ,YAAY,IAAIA,YAAY,CAACc,EAAb,IAAmBK,OAApD,CAAD,CAAf;AAEZtB,UAAAA,WAAW,CAACG,YAAD,CAAX;AACC,SAfG;AAeD,OAhBC;AAgBC,KAjBD;AAiBG,GAlBE,EAkBA,EAlBA,CAAT,CAnBoC,CAuCpC;;AAEI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIQJ,eAAe,CAAC4B,GAAhB,CAAoBd,MAAM,IAAI;AAC1B,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACI,EAApB;AAAwB,MAAA,MAAM,EAAEJ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAJR,CADA,CADJ;AAaH,CAtDE","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport { Browse } from \"./Browse\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    // Context\n    const {favorites, \n        filterValue, \n        getCustomers,\n        getFavorites,\n        getSamples,\n        samples, \n        searchTerms,\n        setFilter,\n    } = useContext(SampleContext)\n    \n    // State \n\n    const [ filteredSamples, setFiltered ] = useState([])\n\n    // Hooks\n\n    useEffect(() => {\n        getSamples().then(() => {\n        getCustomers().then(() => {\n        getFavorites().then(() => {\n        let samplesToDisplay = samples\n        let randomSample = samples\n        let currentlyFiltered = samples\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                // const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer))\n                const finalFilter = notUser.filter(sample => {\n                    matchingFave = favorites.find(favorite => favorite.customerId === parseInt(localStorage.customer) && sample.id === favorite.sampleId)\n                    return matchingFave == undefined})\n                console.log(finalFilter)\n\n                const randInt = Math.floor(Math.random() * notUser.length + 1)\n                randomSample = [finalFilter.find(randomSample => randomSample.id == randInt)]\n                \n    setFiltered(randomSample)\n    })})})}, [])\n\n    // JSX\n\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return <Browse key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>     \n        )\n    }"]},"metadata":{},"sourceType":"module"}