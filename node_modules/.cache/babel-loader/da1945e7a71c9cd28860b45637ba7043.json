{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Link } from \"react-router-dom\";\nimport React, { useContext, useState, useEffect, useRef } from \"react\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport WaveSurfer from \"wavesurfer.js\";\nexport const CrushPanel = ({\n  sample\n}) => {\n  const [filteredSamples, setFiltered] = useState([]);\n  const waveformRef = useRef(null);\n  const {\n    favorites,\n    releaseFavorite,\n    getFavorites,\n    filterValue,\n    getUsers,\n    getSamples,\n    samples,\n    ratings,\n    searchTerms,\n    getRatings\n  } = useContext(SampleContext);\n  useEffect(() => {\n    getSamples();\n    getUsers();\n    getFavorites();\n    getRatings();\n  }, []);\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\"\n    });\n    waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3');\n    waveformRef.current.setWaveColor(\"white\");\n  }, []);\n  useEffect(() => {\n    setFiltered(samples);\n    console.log(ratings.sort((a, b) => a.rating > b.rating ? 1 : -1));\n  }, [searchTerms, samples, filterValue]);\n  const currentUser = parseInt(localStorage.getItem(\"user_number\"));\n  let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n  let foundFave = thisUserFavorites.find(fave => fave.sample_id === sample.id);\n\n  if (foundFave === undefined) {\n    foundFave = false;\n  }\n\n  let isFavorite = foundFave.user_id === currentUser;\n\n  const downloadFile = () => {\n    window.location.href = sample.audio_url;\n  };\n\n  const removeFavorite = () => {\n    releaseFavorite(foundFave.id).then(getFavorites);\n  };\n\n  if (isFavorite) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"samples\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), filteredSamples.map(sample => {\n      return /*#__PURE__*/React.createElement(CrushPanel, {\n        key: sample.id,\n        sample: sample,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      });\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js"],"names":["SampleContext","Link","React","useContext","useState","useEffect","useRef","AudioPlayer","WaveSurfer","CrushPanel","sample","filteredSamples","setFiltered","waveformRef","favorites","releaseFavorite","getFavorites","filterValue","getUsers","getSamples","samples","ratings","searchTerms","getRatings","current","create","container","cursorColor","backgroundColor","load","setWaveColor","console","log","sort","a","b","rating","currentUser","parseInt","localStorage","getItem","thisUserFavorites","filter","faves","user_id","foundFave","find","fave","sample_id","id","undefined","isFavorite","downloadFile","window","location","href","audio_url","removeFavorite","then","map"],"mappings":"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","sourcesContent":["import { SampleContext } from \"../sample/SampleProvider\"\nimport { Link } from \"react-router-dom\"\nimport React, {useContext, useState, useEffect, useRef} from \"react\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport WaveSurfer from \"wavesurfer.js\";\n\nexport const CrushPanel = ({sample}) => {\n\n  const [ filteredSamples, setFiltered ] = useState([])\n\n  const waveformRef = useRef(null)\n\n  const {\n    favorites, \n    releaseFavorite, \n    getFavorites,\n    filterValue, \n    getUsers,\n    getSamples,\n    samples,\n    ratings,\n    searchTerms,\n    getRatings,\n  } = useContext(SampleContext)\n\n  useEffect(() => {\n    getSamples()\n    getUsers()\n    getFavorites()\n    getRatings()\n}, [])\n\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({ \n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\"\n    });\n    waveformRef.current.load('http://ia902606.us.archive.org/35/items/shortpoetry_047_librivox/song_cjrg_teasdale_64kb.mp3')\n    waveformRef.current.setWaveColor(\"white\")\n  }, [])\n\n  useEffect(() => {\n    setFiltered(samples)\n    console.log(ratings.sort((a, b) => (a.rating > b.rating) ? 1 : -1))\n    }, [searchTerms, samples, filterValue])\n\n  const currentUser = parseInt(localStorage.getItem(\"user_number\"))\n  let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n  let foundFave = thisUserFavorites.find(fave => fave.sample_id === sample.id)\n  if (foundFave === undefined) {foundFave= false}\n  let isFavorite = foundFave.user_id === currentUser\n\n        const downloadFile = () => {\n          window.location.href = sample.audio_url\n        }\n\n        const removeFavorite = () => {\n          releaseFavorite(foundFave.id).then(getFavorites)\n        }\n\n\nif (isFavorite){\n\nreturn (\n  <>\n  <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return (<CrushPanel key={sample.id} sample={sample} />)\n                    })\n                }\n            </div> \n</>\n)}\n\nelse{\nreturn (\n  <div ref={waveformRef} />\n  )}\n}"]},"metadata":{},"sourceType":"module"}