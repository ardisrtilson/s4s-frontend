{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/rate/Rate.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { RgbaColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nexport const Rate = props => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [value, setValue] = useState(null);\n  const [volume, setVolume] = useState(null);\n  const [currentSample, setCurrentSample] = useState({});\n  const [noneLeft, setNoneLeft] = useState(false);\n  const [zeroed, setZeroed] = useState(false);\n  const [itemsLeftToShow, setitemsLeftToShow] = useState([]);\n  const [color, setColor] = useState(\"#aabbcc\");\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    addFavorites,\n    skipped,\n    addRatings,\n    getSkipped,\n    randomSamplesLoaded\n  } = useContext(SampleContext);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addSampleRatings = () => {\n    addRatings({\n      sample: currentSample.id\n    });\n  };\n\n  useEffect(() => {\n    getUsers().then(getSkipped).then(getFavorites).then(getRandomSample);\n  }, []);\n  useEffect(() => {\n    if (itemsLeftToShow.length > 0) {\n      setCurrentSample(itemsLeftToShow[rSampleItem]);\n    }\n  }, [rSampleItem, zeroed]);\n  useEffect(() => {\n    console.log(value);\n    console.log(volume);\n  }, [value, volume]);\n  useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0) {\n      console.log(itemsLeftToShow[rSampleItem]);\n\n      if (rSampleItem < itemsLeftToShow.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else {\n        setRSampleValue(0);\n        setZeroed(true);\n      }\n\n      setNoneLeft(false);\n    } else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n      //data has been loaded from api, filtering done, no items left to show\n      setNoneLeft(true);\n    } else {}\n  }, [itemsLeftToShow, randomSample, randomSamplesLoaded]);\n  useEffect(() => {\n    //Filtration\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n\n    if (randomSample.length > 0) {\n      let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites));\n      let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped));\n      console.log(randomSamplesThatHaveNotBeenSkippedOrFavorited);\n      setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited); //Increment\n    }\n  }, [favorites, skipped, randomSample]);\n\n  if (noneLeft !== true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: currentSample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${currentSample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 48\n      }\n    }, currentSample.name)), /*#__PURE__*/React.createElement(RgbaColorPicker, {\n      color: color,\n      onChange: setColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), \";\", /*#__PURE__*/React.createElement(Rating, {\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      src: currentSample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      onVolumeChange: e => setVolume(e.target.volume),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: addSampleRatings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"Submit Ratings\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button2\",\n      onClick: getFavorites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Skip\")));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"None Left\");\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/rate/Rate.js"],"names":["React","useContext","useEffect","useState","Rating","SampleContext","AudioPlayer","Link","RgbaColorPicker","Rate","props","rSampleItem","setRSampleValue","value","setValue","volume","setVolume","currentSample","setCurrentSample","noneLeft","setNoneLeft","zeroed","setZeroed","itemsLeftToShow","setitemsLeftToShow","color","setColor","favorites","getUsers","getFavorites","getRandomSample","randomSample","addFavorites","skipped","addRatings","getSkipped","randomSamplesLoaded","comparer","otherArray","current","filter","other","sample_id","id","length","addSampleRatings","sample","then","console","log","increment","currentUser","parseInt","localStorage","getItem","thisUserFavorites","faves","user_id","thisUserSkipped","skip","randomSamplesThatHaveNotBeenFavorited","randomSamplesThatHaveNotBeenSkippedOrFavorited","sample_image","name","event","newValue","audio_url","e","target"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\nimport { RgbaColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\n\nexport const Rate = (props) => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [value, setValue] = useState(null)\n    const [volume, setVolume] = useState(null)\n    const [currentSample, setCurrentSample] = useState({})\n    const [noneLeft, setNoneLeft] = useState(false)\n    const [zeroed, setZeroed] = useState(false)\n    const [itemsLeftToShow, setitemsLeftToShow] = useState([])\n    const [color, setColor] = useState(\"#aabbcc\");\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        addFavorites,\n        skipped,\n        addRatings,\n        getSkipped,\n        randomSamplesLoaded,\n    } = useContext(SampleContext)\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addSampleRatings = () => {\n        addRatings({\n            sample: currentSample.id\n        })\n    }\n    \n    useEffect(() => {\n        getUsers().then(getSkipped).then(getFavorites).then(getRandomSample)\n    }, [])\n\n    useEffect(() => {\n        if (itemsLeftToShow.length > 0){\n        setCurrentSample(itemsLeftToShow[rSampleItem])\n        }\n    }, [rSampleItem, zeroed])\n\n    useEffect(() => {\n        console.log(value)\n        console.log(volume)\n    }, [value, volume])\n\n    useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0){\n            console.log(itemsLeftToShow[rSampleItem])\n            if (rSampleItem < itemsLeftToShow.length - 1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } else {\n                setRSampleValue(0)\n                setZeroed(true)\n            }\n            setNoneLeft(false)\n    }\n    else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n        //data has been loaded from api, filtering done, no items left to show\n        setNoneLeft(true)\n    }\n    else {\n        \n    }\n    }, [itemsLeftToShow, randomSample, randomSamplesLoaded])\n\n    useEffect(() => {\n\n        //Filtration\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        if (randomSample.length > 0) {\n            let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites))\n            let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped))\n            console.log(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            //Increment\n        }\n    }, [favorites, skipped, randomSample])\n\n    if (noneLeft !== true) {\n        return (\n            <>\n            <div class=\"sampleCard\">\n            <img class=\"img\" src={currentSample.sample_image}></img>\n                <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n\n                <RgbaColorPicker color={color} onChange={setColor} />;\n                <Rating \n                value={value}\n                onChange={(event, newValue) => {setValue(newValue)}}/>\n                \n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={currentSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")}\n                    onVolumeChange={e => setVolume(e.target.volume)} />\n                    <button class=\"button5\" onClick={addSampleRatings}>Submit Ratings</button>\n                    <button class=\"button2\" onClick={getFavorites}>Skip</button>\n            </div>\n            </>\n        )\n    }\n    else {\n        return (\n            <div class=\"sampleCard\">\n                None Left\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}