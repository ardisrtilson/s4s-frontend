{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Browse } from \"./Browse\";\nimport \"./Browse.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const BrowseSamples = props => {\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getSamples,\n    samples\n  } = useContext(SampleContext);\n  let currentlyFiltered = samples;\n  const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n  const finalFilter = notUser.filter(sample => {\n    let matchingFave = favorites.find(favorite => favorite.customerId === parseInt(localStorage.customer) && sample.id === favorite.sampleId);\n    return matchingFave == undefined;\n  });\n  const randInt = Math.floor(Math.random() * notUser.length + 1);\n  let randomSample = [finalFilter.find(randomSample => randomSample.id == randInt)]; // Context\n  // State \n\n  const [filteredSamples, setFiltered] = useState([]); // Hooks\n\n  useEffect(() => {\n    getSamples();\n    getUsers();\n    getFavorites();\n    setFiltered(randomSample);\n  }, [favorites]); // JSX\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(Browse, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/browse/BrowseSamples.js"],"names":["React","useContext","useEffect","useState","SampleContext","Browse","BrowseSamples","props","favorites","getUsers","getFavorites","getSamples","samples","currentlyFiltered","notUser","filter","byUser","customerId","parseInt","localStorage","customer","finalFilter","sample","matchingFave","find","favorite","id","sampleId","undefined","randInt","Math","floor","random","length","randomSample","filteredSamples","setFiltered","map"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,cAAP;AACA,OAAO,sCAAP;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAEpC,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,QADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,UAHE;AAIFC,IAAAA;AAJE,MAKFX,UAAU,CAACG,aAAD,CALd;AAOA,MAAIS,iBAAiB,GAAGD,OAAxB;AACA,QAAME,OAAO,GAAGD,iBAAiB,CAACE,MAAlB,CAAyBC,MAAM,IAAIA,MAAM,CAACC,UAAP,IAAqBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhE,CAAhB;AACA,QAAMC,WAAW,GAAGP,OAAO,CAACC,MAAR,CAAeO,MAAM,IAAI;AACzC,QAAIC,YAAY,GAAGf,SAAS,CAACgB,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACR,UAAT,KAAwBC,QAAQ,CAACC,YAAY,CAACC,QAAd,CAAhC,IAA2DE,MAAM,CAACI,EAAP,KAAcD,QAAQ,CAACE,QAA7G,CAAnB;AACA,WAAOJ,YAAY,IAAIK,SAAvB;AAAiC,GAFjB,CAApB;AAIA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBlB,OAAO,CAACmB,MAAxB,GAAiC,CAA5C,CAAhB;AACA,MAAIC,YAAY,GAAG,CAACb,WAAW,CAACG,IAAZ,CAAiBU,YAAY,IAAIA,YAAY,CAACR,EAAb,IAAmBG,OAApD,CAAD,CAAnB,CAhBoC,CAkBpC;AACA;;AAEA,QAAM,CAAEM,eAAF,EAAmBC,WAAnB,IAAmCjC,QAAQ,CAAC,EAAD,CAAjD,CArBoC,CAsBpC;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACVF,IAAAA,QAAQ;AACRC,IAAAA,YAAY;AAChB0B,IAAAA,WAAW,CAACF,YAAD,CAAX;AACC,GALQ,EAKN,CAAC1B,SAAD,CALM,CAAT,CAxBoC,CA+BpC;;AACI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIQ2B,eAAe,CAACE,GAAhB,CAAoBf,MAAM,IAAI;AAC1B,wBAAO,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,MAAM,CAACI,EAApB;AAAwB,MAAA,MAAM,EAAEJ,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAJR,CADA,CADJ;AAYE,CA5CH","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport { Browse } from \"./Browse\"\nimport \"./Browse.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const BrowseSamples = (props) => {\n\n    const {favorites,  \n        getUsers,\n        getFavorites,\n        getSamples,\n        samples, \n    } = useContext(SampleContext)\n    \n    let currentlyFiltered = samples\n    const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n    const finalFilter = notUser.filter(sample => {\n        let matchingFave = favorites.find(favorite => favorite.customerId === parseInt(localStorage.customer) && sample.id === favorite.sampleId)\n        return matchingFave == undefined})         \n\n    const randInt = Math.floor(Math.random() * notUser.length + 1)\n    let randomSample = [finalFilter.find(randomSample => randomSample.id == randInt)]\n    \n    // Context\n    // State \n\n    const [ filteredSamples, setFiltered ] = useState([])\n    // Hooks\n\n    useEffect(() => {\n        getSamples()\n        getUsers()\n        getFavorites()\n    setFiltered(randomSample)\n    }, [favorites])\n\n    // JSX\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return <Browse key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>     \n        )}"]},"metadata":{},"sourceType":"module"}