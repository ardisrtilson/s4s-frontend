{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/Crushes.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"./SampleProvider\";\nimport { Sample } from \"./Sample\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nexport const Crushes = props => {\n  const {\n    favorites,\n    filterValue,\n    getCustomers,\n    getFavorites,\n    getSamples,\n    getUserFriends,\n    samples,\n    searchTerms,\n    setFilter,\n    userFriends\n  } = useContext(SampleContext);\n  const [filteredSamples, setFiltered] = useState([]);\n\n  const findFriends = () => {\n    let currentUserId = parseInt(localStorage.customer);\n    let currentRelationships = userFriends.filter(f => {\n      if (currentUserId === f.userId || currentUserId === f.friendId) {\n        return f;\n      }\n    });\n    let friendIds = currentRelationships.map(r => {\n      if (r.userId === currentUserId) {\n        return r.friendId;\n      } else {\n        return r.userId;\n      }\n    });\n    friendIds.push(currentUserId);\n    return friendIds;\n  };\n\n  useEffect(() => {\n    getSamples();\n    getCustomers();\n    getUserFriends();\n    getFavorites();\n  }, []);\n  useEffect(() => {\n    let samplesToDisplay = samples;\n    let currentlyFiltered = samples;\n    const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer));\n    const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer));\n    Math.floor(Math.random() * 11);\n    samplesToDisplay = notUser.filter(currentSamples => {\n      return userFaves.some(favorite => favorite.sampleId === currentSamples.id);\n    });\n    setFiltered(samplesToDisplay);\n  }, [searchTerms, samples, filterValue]);\n  console.log(filteredSamples);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(Sample, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/Crushes.js"],"names":["React","useContext","useEffect","useState","SampleContext","Sample","AudioPlayer","Crushes","props","favorites","filterValue","getCustomers","getFavorites","getSamples","getUserFriends","samples","searchTerms","setFilter","userFriends","filteredSamples","setFiltered","findFriends","currentUserId","parseInt","localStorage","customer","currentRelationships","filter","f","userId","friendId","friendIds","map","r","push","samplesToDisplay","currentlyFiltered","notUser","byUser","customerId","userFaves","faves","Math","floor","random","currentSamples","some","favorite","sampleId","id","console","log","sample"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"./SampleProvider\"\nimport { Sample } from \"./Sample\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const Crushes = (props) => {\n\n    const {favorites, \n        filterValue, \n        getCustomers,\n        getFavorites,\n        getSamples,\n        getUserFriends, \n        samples, \n        searchTerms,\n        setFilter,\n        userFriends,\n           } = useContext(SampleContext)\n    const [ filteredSamples, setFiltered ] = useState([])\n    const findFriends = () => {\n        let currentUserId = parseInt(localStorage.customer)\n        let currentRelationships = userFriends.filter(f => {\n            if (currentUserId === f.userId || currentUserId === f.friendId) {\n                return f\n            }\n        })\n        let friendIds = currentRelationships.map(r => {\n            if (r.userId === currentUserId) {\n                return r.friendId\n            } else {\n                return r.userId\n            }\n        })\n        friendIds.push(currentUserId)\n        return friendIds\n}\n    useEffect(() => {\n        getSamples()\n        getCustomers()\n        getUserFriends()\n        getFavorites()\n    }, [])\n    useEffect(() => {\n        let samplesToDisplay = samples\n        let currentlyFiltered = samples\n\n                const notUser = currentlyFiltered.filter(byUser => byUser.customerId != parseInt(localStorage.customer))\n                const userFaves = favorites.filter(faves => faves.customerId === parseInt(localStorage.customer))\n                Math.floor(Math.random() * 11);\n                samplesToDisplay = notUser.filter(currentSamples => \n                    {return userFaves.some(favorite => \n                        favorite.sampleId === currentSamples.id)})\n   \n    setFiltered(samplesToDisplay)\n    }, [searchTerms, samples, filterValue])\n    console.log(filteredSamples)\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return <Sample key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>\n        )\n    }"]},"metadata":{},"sourceType":"module"}