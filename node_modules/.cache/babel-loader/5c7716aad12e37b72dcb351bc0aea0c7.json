{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/Crushes.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { CrushPanel } from \"./CrushPanel\";\nimport \"./Samples.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { Link } from \"react-router-dom\";\nimport AudioPlayer from 'react-h5-audio-player';\nexport const Crushes = props => {\n  // Context \n  const {\n    favorites,\n    filterValue,\n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    searchTerms\n  } = useContext(SampleContext); // State\n\n  const [filteredSamples, setFiltered] = useState([]); // Hooks\n\n  useEffect(() => {\n    getSamples();\n    getUsers();\n    getFavorites();\n  }, []);\n  useEffect(() => {\n    setFiltered(samples);\n  }, [searchTerms, samples, filterValue]); // JSX\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"img\",\n    src: sample.profile_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(CrushPanel, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/Crushes.js"],"names":["React","useContext","useEffect","useState","SampleContext","CrushPanel","Link","AudioPlayer","Crushes","props","favorites","filterValue","getFavorites","getUsers","getSamples","samples","searchTerms","filteredSamples","setFiltered","sample","profile_image","map","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAGA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAE9B;AAEA,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,WADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA;AANE,MAOFf,UAAU,CAACG,aAAD,CAPd,CAJ8B,CAa9B;;AAEA,QAAM,CAAEa,eAAF,EAAmBC,WAAnB,IAAmCf,QAAQ,CAAC,EAAD,CAAjD,CAf8B,CAiB9B;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACVD,IAAAA,QAAQ;AACRD,IAAAA,YAAY;AACf,GAJQ,EAIN,EAJM,CAAT;AAMAV,EAAAA,SAAS,CAAC,MAAM;AAChBgB,IAAAA,WAAW,CAACH,OAAD,CAAX;AACC,GAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,EAAuBJ,WAAvB,CAFM,CAAT,CAzB8B,CA6B9B;;AAEI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAC,KAAX;AAAiB,IAAA,GAAG,EAAEQ,MAAM,CAACC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADJ,EAMQH,eAAe,CAACI,GAAhB,CAAoBF,MAAM,IAAI;AAC1B,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,MAAM,CAACG,EAAxB;AAA4B,MAAA,MAAM,EAAEH,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CANR,CADA,CADJ;AAeH,CA9CE","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport { CrushPanel } from \"./CrushPanel\"\nimport \"./Samples.css\"\nimport 'react-h5-audio-player/lib/styles.css'\nimport { Link } from \"react-router-dom\"\nimport AudioPlayer from 'react-h5-audio-player';\n\n\nexport const Crushes = (props) => {\n\n    // Context \n\n    const {favorites, \n        filterValue, \n        getFavorites,\n        getUsers,\n        getSamples,\n        samples,\n        searchTerms,\n    } = useContext(SampleContext)\n\n    // State\n\n    const [ filteredSamples, setFiltered ] = useState([])\n\n    // Hooks\n\n    useEffect(() => {\n        getSamples()\n        getUsers()\n        getFavorites()\n    }, [])\n\n    useEffect(() => {\n    setFiltered(samples)\n    }, [searchTerms, samples, filterValue])\n\n    // JSX\n\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                <img class=\"img\" src={sample.profile_image}></img>\n                        </div>\n\n                {\n                    filteredSamples.map(sample => {\n                        return <CrushPanel key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>\n        )\n    }"]},"metadata":{},"sourceType":"module"}