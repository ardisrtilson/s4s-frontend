{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleProvider.js\";\n// Organized\nimport React, { useState } from \"react\";\nexport const SampleContext = React.createContext();\nexport const SampleProvider = props => {\n  const [commentValue, setComments] = useState([]);\n  const [customers, setCustomers] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [filterValue, setFilter] = useState([]);\n  const [ratingValue, setRating] = useState([]);\n  const [samples, setSamples] = useState([]);\n  const [searchTerms, setTerms] = useState(\"\");\n  const [userFriends, setUserFriends] = useState([]);\n\n  const addComment = comment => {\n    return fetch(\"http://localhost:8088/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(comment)\n    }).then(getSamples);\n  };\n\n  const addFavorites = sample => {\n    return fetch(\"http://localhost:8088/userFavorites\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sample)\n    }).then(getFavorites);\n  };\n\n  const addSample = sample => {\n    return fetch(\"http://localhost:8088/samples\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sample)\n    }).then(getSamples);\n  };\n\n  const addUserFriends = customer => {\n    return fetch(\"http://localhost:8088/userFriends\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(customer)\n    }).then(getSamples);\n  };\n\n  const getComments = () => {\n    return fetch(\"http://localhost:8088/comments\").then(res => res.json()).then(setComments);\n  };\n\n  const getCustomers = () => {\n    return fetch(\"http://localhost:8088/customers\").then(res => res.json()).then(setCustomers);\n  };\n\n  const getFavorites = () => {\n    return fetch(\"http://localhost:8088/userFavorites\").then(res => res.json()).then(setFavorites);\n  };\n\n  const getSamples = () => {\n    return fetch(\"http://localhost:8088/samples\").then(res => res.json()).then(setSamples);\n  };\n\n  const getSampleById = id => {\n    return fetch(`http://localhost:8088/samples/${id}`).then(res => res.json());\n  };\n\n  const getUserFriends = () => {\n    return fetch(\"http://localhost:8088/userFriends\").then(res => res.json()).then(setUserFriends);\n  };\n\n  const releaseComment = commentId => {\n    return fetch(`http://localhost:8088/comments/${commentId}`, {\n      method: \"DELETE\"\n    }).then(getComments);\n  };\n\n  const releaseFavorite = favoriteId => {\n    return fetch(`http://localhost:8088/userFavorites/${favoriteId}`, {\n      method: \"DELETE\"\n    }).then(getFavorites);\n  };\n\n  const releaseSample = sampleId => {\n    return fetch(`http://localhost:8088/samples/${sampleId}`, {\n      method: \"DELETE\"\n    }).then(getSamples);\n  };\n\n  const releaseUserFriends = relationshipId => {\n    return fetch(`http://localhost:8088/userFriends/${relationshipId}`, {\n      method: \"DELETE\"\n    }).then(getSamples);\n  };\n\n  const updateSample = sample => {\n    return fetch(`http://localhost:8088/samples/${sample.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sample)\n    }).then(getSamples);\n  };\n\n  return /*#__PURE__*/React.createElement(SampleContext.Provider, {\n    value: {\n      addComment,\n      addFavorites,\n      addSample,\n      addUserFriends,\n      commentValue,\n      customers,\n      favorites,\n      filterValue,\n      getComments,\n      getCustomers,\n      getFavorites,\n      getSamples,\n      getSampleById,\n      getUserFriends,\n      releaseSample,\n      releaseUserFriends,\n      ratingValue,\n      releaseComment,\n      releaseFavorite,\n      samples,\n      searchTerms,\n      setComments,\n      setFavorites,\n      setFilter,\n      setRating,\n      setTerms,\n      updateSample,\n      userFriends\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleProvider.js"],"names":["React","useState","SampleContext","createContext","SampleProvider","props","commentValue","setComments","customers","setCustomers","favorites","setFavorites","filterValue","setFilter","ratingValue","setRating","samples","setSamples","searchTerms","setTerms","userFriends","setUserFriends","addComment","comment","fetch","method","headers","body","JSON","stringify","then","getSamples","addFavorites","sample","getFavorites","addSample","addUserFriends","customer","getComments","res","json","getCustomers","getSampleById","id","getUserFriends","releaseComment","commentId","releaseFavorite","favoriteId","releaseSample","sampleId","releaseUserFriends","relationshipId","updateSample","children"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useState } from \"react\"\n\nexport const SampleContext = React.createContext()\n\nexport const SampleProvider = (props) => {\n    const [commentValue, setComments] = useState([])\n    const [customers, setCustomers] = useState([])\n    const [favorites, setFavorites] = useState([])\n    const [filterValue, setFilter] = useState([])\n    const [ratingValue, setRating] = useState([])\n    const [samples, setSamples] = useState([])\n    const [searchTerms, setTerms] = useState(\"\")\n    const [userFriends, setUserFriends] = useState([])\n\n    const addComment = comment => {\n        return fetch(\"http://localhost:8088/comments\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(comment)\n        })\n            .then(getSamples)\n    }\n    const addFavorites = sample => {\n        return fetch(\"http://localhost:8088/userFavorites\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getFavorites)\n    }\n    const addSample = sample => {\n        return fetch(\"http://localhost:8088/samples\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getSamples)\n    }\n    const addUserFriends = customer => {\n        return fetch(\"http://localhost:8088/userFriends\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(customer)\n        })\n            .then(getSamples)\n    }\n    const getComments = () => {\n        return fetch(\"http://localhost:8088/comments\")\n            .then(res => res.json())\n            .then(setComments)\n    }\n    const getCustomers = () => {\n        return fetch(\"http://localhost:8088/customers\")\n            .then(res => res.json())\n            .then(setCustomers)\n    }\n    const getFavorites = () => {\n        return fetch(\"http://localhost:8088/userFavorites\")\n            .then(res => res.json())\n            .then(setFavorites)\n    }\n    const getSamples = () => {\n        return fetch(\"http://localhost:8088/samples\")\n            .then(res => res.json())\n            .then(setSamples)\n    }\n    const getSampleById = (id) => {\n        return fetch(`http://localhost:8088/samples/${id}`)\n            .then(res => res.json())\n    }\n    const getUserFriends = () => {\n        return fetch(\"http://localhost:8088/userFriends\")\n            .then(res => res.json())\n            .then(setUserFriends)\n    }\n    const releaseComment = (commentId) => {\n        return fetch(`http://localhost:8088/comments/${commentId}`, {\n            method: \"DELETE\"\n        })\n            .then(getComments)\n    }\n    const releaseFavorite = (favoriteId) => {\n        return fetch(`http://localhost:8088/userFavorites/${favoriteId}`, {\n            method: \"DELETE\"\n        })\n            .then(getFavorites)\n    }\n    const releaseSample = (sampleId) => {\n        return fetch(`http://localhost:8088/samples/${sampleId}`, {\n            method: \"DELETE\"\n        })\n            .then(getSamples)\n    }\n    const releaseUserFriends = (relationshipId) => {\n        return fetch(`http://localhost:8088/userFriends/${relationshipId}`, {\n            method: \"DELETE\"\n        })\n            .then(getSamples)\n    }\n    const updateSample = sample => {\n        return fetch(`http://localhost:8088/samples/${sample.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getSamples)\n    }\n\n    return (\n        <SampleContext.Provider value={\n            {\n                addComment,\n                addFavorites,\n                addSample,\n                addUserFriends,\n                commentValue,\n                customers,\n                favorites, \n                filterValue, \n                getComments,\n                getCustomers,\n                getFavorites,\n                getSamples, \n                getSampleById,\n                getUserFriends, \n                releaseSample, \n                releaseUserFriends, \n                ratingValue,\n                releaseComment,\n                releaseFavorite,\n                samples,\n                searchTerms,\n                setComments,\n                setFavorites, \n                setFilter,\n                setRating,\n                setTerms,\n                updateSample,\n                userFriends,\n            }}>\n        {props.children}\n        </SampleContext.Provider>\n        )\n    }"]},"metadata":{},"sourceType":"module"}