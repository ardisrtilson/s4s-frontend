{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/auth/Login.js\";\nimport React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nexport const Login = props => {\n  const email = useRef();\n  const password = useRef();\n  const existDialog = useRef();\n  const passwordDialog = useRef(); // const existingUserCheck = () => {\n  //     return fetch(`http://localhost:8088/customers?email=${email.current.value}`)\n  //         .then(_ => _.json())\n  //         .then(user => user.length ? user[0] : false)\n  // }\n\n  const handleLogin = e => {\n    e.preventDefault();\n\n    if (exists && exists.password === password.current.value) {\n      localStorage.setItem(\"customer\", exists.id);\n      props.history.push(\"/\");\n    } else if (exists && exists.password !== password.current.value) {\n      passwordDialog.current.showModal();\n    } else if (!exists) {\n      existDialog.current.showModal();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"container--login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"Logo.png\",\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"dialog\", {\n    className: \"dialog dialog--auth\",\n    ref: existDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"User does not exist\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button--close\",\n    onClick: e => existDialog.current.close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"dialog\", {\n    className: \"dialog dialog--password\",\n    ref: passwordDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Password does not match\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button--close\",\n    onClick: e => passwordDialog.current.close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form--login\",\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Selektor\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Please sign in\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \" Email address \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: email,\n    type: \"email\",\n    id: \"email\",\n    defaultValue: \"a@b.com\",\n    className: \"form-control\",\n    placeholder: \"Email address\",\n    required: true,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"inputPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \" Password \"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: password,\n    type: \"password\",\n    id: \"password\",\n    defaultValue: \"me\",\n    className: \"form-control\",\n    placeholder: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Not a member yet?\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"link--register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/auth/Login.js"],"names":["React","useRef","Link","Login","props","email","password","existDialog","passwordDialog","handleLogin","e","preventDefault","exists","current","value","localStorage","setItem","id","history","push","showModal","close"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\"\n\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const passwordDialog = useRef()\n\n    // const existingUserCheck = () => {\n    //     return fetch(`http://localhost:8088/customers?email=${email.current.value}`)\n    //         .then(_ => _.json())\n    //         .then(user => user.length ? user[0] : false)\n    // }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n                if (exists && exists.password === password.current.value) {\n                    localStorage.setItem(\"customer\", exists.id)\n                    props.history.push(\"/\")\n                } else if (exists && exists.password !== password.current.value) {\n                    passwordDialog.current.showModal()\n                } else if (!exists) {\n                    existDialog.current.showModal()\n                }\n            }\n\n    return (\n        <main className=\"container--login\">\n            <img src=\"Logo.png\" alt=\"Logo\"></img>\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n            <dialog className=\"dialog dialog--password\" ref={passwordDialog}>\n                <div>Password does not match</div>\n                <button className=\"button--close\" onClick={e => passwordDialog.current.close()}>Close</button>\n            </dialog>\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1>Selektor</h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            defaultValue=\"a@b.com\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <label htmlFor=\"inputPassword\"> Password </label>\n                        <input ref={password} type=\"password\"\n                            id=\"password\"\n                            defaultValue=\"me\"\n                            className=\"form-control\"\n                            placeholder=\"Password\"\n                            required />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                        </button>\n                        <Link to=\"/register\">Not a member yet?</Link>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                \n            </section>\n        </main>\n    )\n}"]},"metadata":{},"sourceType":"module"}