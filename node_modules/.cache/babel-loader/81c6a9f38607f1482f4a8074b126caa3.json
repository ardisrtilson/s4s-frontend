{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/rate/Rate.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Browse.css\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nexport const Rate = () => {\n  const [rSampleItem, setRSampleValue] = useState(0);\n  const [value, setValue] = useState(null);\n  const [volume, setVolume] = useState(null);\n  const [currentSample, setCurrentSample] = useState({});\n  const [noneLeft, setNoneLeft] = useState(false);\n  const [zeroed, setZeroed] = useState(false);\n  const [itemsLeftToShow, setitemsLeftToShow] = useState([]);\n  const [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3');\n  const [color, setColor] = useState(\"#aabbcc\");\n  const [wavesurf, setWavesurf] = useState(false);\n  const waveformRef = useRef(null);\n  const {\n    favorites,\n    getUsers,\n    getFavorites,\n    getRandomSample,\n    randomSample,\n    skipped,\n    addRatings,\n    getRatings,\n    ratings,\n    getSkipped,\n    randomSamplesLoaded\n  } = useContext(SampleContext);\n  useEffect(() => {\n    if (waveformRef.current) {\n      setWavesurf(WaveSurfer.create({\n        container: waveformRef.current,\n        cursorColor: \"transparent\",\n        backgroundColor: \"black\",\n        barWidth: 1,\n        fillParent: true\n      }));\n      console.log(wavesurf);\n      wavesurf.load('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3');\n      wavesurf.setWaveColor(color);\n    }\n  }, [color, currentSample]);\n\n  function comparer(otherArray) {\n    return function (current) {\n      return otherArray.filter(function (other) {\n        return other.sample_id == current.id;\n      }).length == 0;\n    };\n  }\n\n  const addSampleRatings = () => {\n    console.log(color);\n\n    if (volume !== null && value != null) {\n      addRatings({\n        sample: currentSample.id,\n        color: color,\n        rating: value,\n        loudness: volume\n      });\n    } else {\n      if (volume === null && value !== null) {\n        alert(\"Please drag the volume slider until the sound is just right\");\n      } else if (value === null && volume !== null) {\n        alert(\"Please rate the sample on a scale from 1-5 stars\");\n      } else if (value === null && volume === null) {\n        alert(\"Please rate the sample on a scale from 1-5 stars and drag the volume slider until the sound is just right\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    getUsers().then(getSkipped).then(getFavorites).then(getRandomSample);\n  }, []);\n  useEffect(() => {\n    if (itemsLeftToShow.length > 0) {\n      setCurrentSample(itemsLeftToShow[rSampleItem]);\n    }\n  }, [rSampleItem, zeroed]);\n  useEffect(() => {\n    if (currentSample !== {}) {\n      setAudioURL(currentSample.audio_url);\n    }\n  }, [currentSample]);\n  useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0) {\n      if (rSampleItem < itemsLeftToShow.length - 1) {\n        let increment = rSampleItem + 1;\n        setRSampleValue(increment);\n      } else {\n        setRSampleValue(0);\n        setZeroed(true);\n      }\n\n      setNoneLeft(false);\n    } else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n      //data has been loaded from api, filtering done, no items left to show\n      setNoneLeft(true);\n    } else {}\n  }, [itemsLeftToShow, randomSample, randomSamplesLoaded]);\n  useEffect(() => {\n    //Filtrationxs\n    let currentUser = parseInt(localStorage.getItem(\"user_number\"));\n    let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser);\n    let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser);\n\n    if (randomSample.length > 0) {\n      let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites));\n      let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped));\n      setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited); //Increment\n    }\n  }, [randomSample, ratings]);\n\n  if (noneLeft !== true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: currentSample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${currentSample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 44\n      }\n    }, currentSample.name)), /*#__PURE__*/React.createElement(\"div\", {\n      ref: waveformRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Rating, {\n      value: value,\n      onChange: (event, newValue) => {\n        setValue(newValue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      src: currentSample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      onVolumeChange: e => setVolume(e.target.volume),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: addSampleRatings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Submit Ratings\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button2\",\n      onClick: getRatings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(HexColorPicker, {\n      color: color,\n      onChange: setColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"sampleCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, \"None Left\");\n  }\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/rate/Rate.js"],"names":["React","useContext","useEffect","useState","useRef","Rating","SampleContext","AudioPlayer","Link","WaveSurfer","HexColorPicker","Rate","rSampleItem","setRSampleValue","value","setValue","volume","setVolume","currentSample","setCurrentSample","noneLeft","setNoneLeft","zeroed","setZeroed","itemsLeftToShow","setitemsLeftToShow","audio_url","setAudioURL","color","setColor","wavesurf","setWavesurf","waveformRef","favorites","getUsers","getFavorites","getRandomSample","randomSample","skipped","addRatings","getRatings","ratings","getSkipped","randomSamplesLoaded","current","create","container","cursorColor","backgroundColor","barWidth","fillParent","console","log","load","setWaveColor","comparer","otherArray","filter","other","sample_id","id","length","addSampleRatings","sample","rating","loudness","alert","then","increment","currentUser","parseInt","localStorage","getItem","thisUserFavorites","faves","user_id","thisUserSkipped","skip","randomSamplesThatHaveNotBeenFavorited","randomSamplesThatHaveNotBeenSkippedOrFavorited","sample_image","name","event","newValue","e","target"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport Rating from '@material-ui/lab/Rating';\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Browse.css\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css'\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\n\nexport const Rate = () => {\n\n    const [rSampleItem, setRSampleValue] = useState(0)\n    const [value, setValue] = useState(null)\n    const [volume, setVolume] = useState(null)\n    const [currentSample, setCurrentSample] = useState({})\n    const [noneLeft, setNoneLeft] = useState(false)\n    const [zeroed, setZeroed] = useState(false)\n    const [itemsLeftToShow, setitemsLeftToShow] = useState([])\n    const [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3')\n    const [color, setColor] = useState(\"#aabbcc\")\n    const [wavesurf, setWavesurf] = useState(false)\n\n    const waveformRef = useRef(null);\n\n    const { favorites,\n        getUsers,\n        getFavorites,\n        getRandomSample,\n        randomSample,\n        skipped,\n        addRatings,\n        getRatings,\n        ratings,\n        getSkipped,\n        randomSamplesLoaded,\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        if (waveformRef.current){\n        setWavesurf(WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\",\n          barWidth: 1,\n          fillParent:true\n        }))\n        console.log(wavesurf)\n        wavesurf.load('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3')\n        wavesurf.setWaveColor(color)\n      }\n    }, [color, currentSample])\n\n    function comparer(otherArray) {\n        return function (current) {\n            return otherArray.filter(function (other) {\n                return other.sample_id == current.id\n            }).length == 0\n        }\n    }\n\n    const addSampleRatings = () => {\n        console.log(color)\n        if (volume !== null && value != null){\n        addRatings({\n            sample: currentSample.id,\n            color: color,\n            rating: value,\n            loudness: volume\n        })\n    }\n        else{\n            if (volume === null && value !== null) {alert(\"Please drag the volume slider until the sound is just right\")}\n            else if (value === null && volume !== null) {alert(\"Please rate the sample on a scale from 1-5 stars\")}\n            else if (value === null && volume === null){alert(\"Please rate the sample on a scale from 1-5 stars and drag the volume slider until the sound is just right\")}\n    }}\n    \n    useEffect(() => {\n        getUsers().then(getSkipped).then(getFavorites).then(getRandomSample)\n    }, [])\n\n    useEffect(() => {\n        if (itemsLeftToShow.length > 0){\n        setCurrentSample(itemsLeftToShow[rSampleItem])\n        }\n    }, [rSampleItem, zeroed])\n\n    useEffect(() => {\n        if (currentSample !== {}){\n        setAudioURL(currentSample.audio_url)\n        }\n    }, [currentSample])\n\n\n    useEffect(() => {\n    if (randomSamplesLoaded && itemsLeftToShow.length > 0){\n            if (rSampleItem < itemsLeftToShow.length - 1) {\n                let increment = rSampleItem + 1\n                setRSampleValue(increment)\n            } else {\n                setRSampleValue(0)\n                setZeroed(true)\n            }\n            setNoneLeft(false)\n    }\n    else if (randomSamplesLoaded && itemsLeftToShow.length === 0) {\n        //data has been loaded from api, filtering done, no items left to show\n        setNoneLeft(true)\n    }\n    else {\n        \n    }\n    }, [itemsLeftToShow, randomSample, randomSamplesLoaded])\n\n    useEffect(() => {\n\n        //Filtrationxs\n        let currentUser = parseInt(localStorage.getItem(\"user_number\"))\n        let thisUserFavorites = favorites.filter(faves => faves.user_id === currentUser)\n        let thisUserSkipped = skipped.filter(skip => skip.user_id === currentUser)\n        if (randomSample.length > 0) {\n            let randomSamplesThatHaveNotBeenFavorited = randomSample.filter(comparer(thisUserFavorites))\n            let randomSamplesThatHaveNotBeenSkippedOrFavorited = randomSamplesThatHaveNotBeenFavorited.filter(comparer(thisUserSkipped))\n            setitemsLeftToShow(randomSamplesThatHaveNotBeenSkippedOrFavorited)\n            //Increment\n        }\n    }, [randomSample, ratings])\n\n    if (noneLeft !== true) {\n        return (\n            <>\n            <div class =\"sampleContainer\">\n            <img class=\"img\" src={currentSample.sample_image}></img>\n            <div class=\"link_card button4\"><Link to={`/browse/${currentSample.id}`}>{currentSample.name}</Link></div>\n            <div ref={waveformRef} />\n                <Rating \n                value={value}\n                onChange={(event, newValue) => {setValue(newValue)}}/>\n\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={currentSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")}\n                    onVolumeChange={e => setVolume(e.target.volume)} />\n                    <button class=\"button5\" onClick={addSampleRatings}>Submit Ratings</button>\n                    <button class=\"button2\" onClick={getRatings}>Skip</button>\n                <HexColorPicker color={color} onChange={setColor} />\n            </div>\n            </>\n        )\n    }\n    else {\n        return (\n            <div class=\"sampleCard\">\n                None Left\n            </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}