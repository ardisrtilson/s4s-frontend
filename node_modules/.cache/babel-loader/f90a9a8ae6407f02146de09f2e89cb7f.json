{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleDetail.js\";\n// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport { Link } from \"react-router-dom\";\nimport \"./Samples.css\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css';\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\nexport const SampleDetails = props => {\n  const [localState, setLocalState] = useState({});\n  const [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3');\n\n  const delete_prompt = id => {\n    var retVal = window.confirm(\"Are you sure you want to delete your comment?\");\n\n    if (retVal == true) {\n      deleteComment(id);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleControlledInputChange = e => {\n    const newComment = Object.assign({}, localState);\n    newComment[e.target.name] = e.target.value;\n    setLocalState(newComment);\n  };\n\n  const deleteComment = id => {\n    releaseComment(id);\n    getComments();\n    getRatings();\n  };\n\n  const submitComment = () => {\n    addComment({\n      content: localState.content,\n      user: localStorage.getItem(\"user_number\"),\n      date_added: \"4\",\n      sample: props.match.params.sampleId\n    });\n    getComments();\n  };\n\n  const waveformRef = useRef(null);\n  const {\n    getUsers,\n    singleSample,\n    getSampleById,\n    getComments,\n    commentValue,\n    addComment,\n    releaseComment,\n    getRatings,\n    sampleRatings\n  } = useContext(SampleContext);\n  useEffect(() => {\n    waveformRef.current = WaveSurfer.create({\n      container: waveformRef.current,\n      cursorColor: \"transparent\",\n      backgroundColor: \"black\",\n      barWidth: 1,\n      fillParent: true\n    });\n    waveformRef.current.load(audio_url);\n    waveformRef.current.setWaveColor(\"red\");\n  }, []);\n  useEffect(() => {\n    let sampleId = parseInt(props.match.params.sampleId);\n    getUsers();\n    getComments().then(res => setLocalState(res));\n    getSampleById(sampleId);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"img\",\n    src: singleSample.sample_image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"link_card button4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/browse/${singleSample.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 48\n    }\n  }, singleSample.name)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: waveformRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(AudioPlayer, {\n    autoPlayAfterSrcChange: false,\n    src: singleSample.audio_url,\n    onPlay: e => console.log(\"onPlay\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"content\",\n    onChange: handleControlledInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      submitComment();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Submit Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 14\n    },\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Comments\"), commentValue.map(comment => {\n    if (comment.sample === parseInt(props.match.params.sampleId)) {\n      return /*#__PURE__*/React.createElement(Paper, {\n        style: {\n          padding: \"40px 20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        alt: \"Remy Sharp\",\n        src: comment.user.profile_image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        justifyContent: \"left\",\n        item: true,\n        xs: true,\n        zeroMinWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          margin: 0,\n          textAlign: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, comment.user.user.username), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, comment.content), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          delete_prompt(comment.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"Delete Comment\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: \"left\",\n          color: \"gray\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, \"posted less than 1 minute ago\"))), /*#__PURE__*/React.createElement(Divider, {\n        variant: \"fullWidth\",\n        style: {\n          margin: \"30px 0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }));\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleDetail.js"],"names":["React","useContext","useEffect","useState","useRef","SampleContext","AudioPlayer","Link","WaveSurfer","HexColorPicker","TextField","Rating","Button","Divider","Avatar","Grid","Paper","SampleDetails","props","localState","setLocalState","audio_url","setAudioURL","delete_prompt","id","retVal","window","confirm","deleteComment","handleControlledInputChange","e","newComment","Object","assign","target","name","value","releaseComment","getComments","getRatings","submitComment","addComment","content","user","localStorage","getItem","date_added","sample","match","params","sampleId","waveformRef","getUsers","singleSample","getSampleById","commentValue","sampleRatings","current","create","container","cursorColor","backgroundColor","barWidth","fillParent","load","setWaveColor","parseInt","then","res","sample_image","console","log","padding","map","comment","profile_image","margin","textAlign","username","color"],"mappings":"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","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState, useRef } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport AudioPlayer from 'react-h5-audio-player'\nimport { Link } from \"react-router-dom\"\nimport \"./Samples.css\"\nimport WaveSurfer from \"wavesurfer.js\";\nimport 'react-h5-audio-player/lib/styles.css'\nimport { HexColorPicker } from \"react-colorful\";\nimport \"react-colorful/dist/index.css\";\nimport TextField from '@material-ui/core/TextField';\nimport Rating from '@material-ui/lab/Rating';\nimport Button from '@material-ui/core/Button';\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\n\nexport const SampleDetails = (props) => {\n\n  const [localState, setLocalState] = useState({})\n  const [audio_url, setAudioURL] = useState('https://firebasestorage.googleapis.com/v0/b/selektor-b0fc6.appspot.com/o/Audio%2FKick.wav?alt=media&token=61384403-e6c8-4874-9062-1527d920dfe3')\n\n  const delete_prompt = (id) => {\n    var retVal = window.confirm(\"Are you sure you want to delete your comment?\");\n    if( retVal == true ) {\n        deleteComment(id)\n        return true;\n    } else {\n        return false;\n    }\n}\n\n  const handleControlledInputChange = (e) => {\n    const newComment = Object.assign({}, localState)\n    newComment[e.target.name] = e.target.value\n    setLocalState(newComment)\n}\n\nconst deleteComment = (id) => {\n  releaseComment(id)\n  getComments()\n  getRatings()\n}\n\nconst submitComment = () => {\n  addComment({\n    content: localState.content,\n    user: localStorage.getItem(\"user_number\"),\n    date_added: \"4\",\n    sample: props.match.params.sampleId\n})\n  getComments()\n}\n\n  const waveformRef = useRef(null);\n\n    const {\n        getUsers,\n        singleSample,\n        getSampleById,\n        getComments,\n        commentValue,\n        addComment,\n        releaseComment,\n        getRatings,\n        sampleRatings\n    } = useContext(SampleContext)\n\n    useEffect(() => {\n        waveformRef.current = WaveSurfer.create({ \n          container: waveformRef.current,\n          cursorColor: \"transparent\",\n          backgroundColor: \"black\",\n          barWidth: 1,\n          fillParent: true\n        });\n        waveformRef.current.load(audio_url)\n        waveformRef.current.setWaveColor(\"red\")\n      }, [])\n\n    useEffect(() => {\n        let sampleId = parseInt(props.match.params.sampleId)\n        getUsers()\n        getComments().then(res => setLocalState(res))\n        getSampleById(sampleId)\n    }, [])\n\n        return (\n            <>\n            <div class=\"sampleContainer\">\n            <img class=\"img\" src={singleSample.sample_image}></img>\n                <div class=\"link_card button4\"><Link to={`/browse/${singleSample.id}`}>{singleSample.name}</Link></div>\n                <div ref={waveformRef} />\n                <AudioPlayer\n                    autoPlayAfterSrcChange={false}\n                    src={singleSample.audio_url}\n                    onPlay={e => console.log(\"onPlay\")}/>\n            <TextField name=\"content\" onChange={handleControlledInputChange}></TextField>\n            <Button onClick={() => {submitComment()}}>Submit Comment</Button>\n            </div>\n            <div style={{ padding: 14 }} className=\"App\">\n      <h1>Comments</h1>\n      {\n      commentValue.map(comment => {\n      if (comment.sample ===parseInt(props.match.params.sampleId)){\n      return(\n      <Paper style={{ padding: \"40px 20px\" }}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar alt=\"Remy Sharp\" src={comment.user.profile_image} />\n          </Grid>\n          <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>{comment.user.user.username}</h4>\n            <p style={{ textAlign: \"left\" }}>\n              {comment.content}\n            </p>\n            <Button onClick={() => {delete_prompt(comment.id)}}>Delete Comment</Button>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n              posted less than 1 minute ago\n            </p>\n          </Grid>\n        </Grid>\n        <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\n      </Paper>\n      )\n      }}\n      )\n\n      }\n    </div>\n            </>\n        )\n}"]},"metadata":{},"sourceType":"module"}