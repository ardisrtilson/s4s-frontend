{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/Crushes.js\";\n// Organized\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { CrushPanel } from \"./CrushPanel\";\nimport \"./Samples.css\";\nimport 'react-h5-audio-player/lib/styles.css';\nexport const Crushes = props => {\n  // Context \n  const {\n    favorites,\n    filterValue,\n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    ratings,\n    searchTerms,\n    getRatings\n  } = useContext(SampleContext);\n  const [filteredSamples, setFiltered] = useState([]);\n  const waveformRef = useRef(null); // Hooks\n\n  useEffect(() => {\n    getSamples();\n    getUsers();\n    getFavorites();\n    getRatings();\n  }, []);\n  useEffect(() => {\n    setFiltered(samples);\n    console.log(ratings.sort((a, b) => a.rating > b.rating ? 1 : -1));\n  }, [searchTerms, samples, filterValue]); // JSX\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"sampleCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), filteredSamples.map(sample => {\n    return /*#__PURE__*/React.createElement(CrushPanel, {\n      key: sample.id,\n      sample: sample,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }\n    });\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/Crushes.js"],"names":["React","useContext","useEffect","useState","SampleContext","CrushPanel","Crushes","props","favorites","filterValue","getFavorites","getUsers","getSamples","samples","ratings","searchTerms","getRatings","filteredSamples","setFiltered","waveformRef","useRef","console","log","sort","a","b","rating","map","sample","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AAEA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAE9B;AAEA,QAAM;AAACC,IAAAA,SAAD;AACFC,IAAAA,WADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,UAJE;AAKFC,IAAAA,OALE;AAMFC,IAAAA,OANE;AAOFC,IAAAA,WAPE;AAQFC,IAAAA;AARE,MASFf,UAAU,CAACG,aAAD,CATd;AAWA,QAAM,CAAEa,eAAF,EAAmBC,WAAnB,IAAmCf,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAMgB,WAAW,GAAGC,MAAM,CAAC,IAAD,CAA1B,CAhB8B,CAkB9B;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,UAAU;AACVD,IAAAA,QAAQ;AACRD,IAAAA,YAAY;AACZM,IAAAA,UAAU;AACb,GALQ,EAKN,EALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AAChBgB,IAAAA,WAAW,CAACL,OAAD,CAAX;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAO,CAACS,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAApD,CAAZ;AACC,GAHQ,EAGN,CAACX,WAAD,EAAcF,OAAd,EAAuBJ,WAAvB,CAHM,CAAT,CA3B8B,CAgC9B;;AAEI,sBACI,uDACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAIQQ,eAAe,CAACU,GAAhB,CAAoBC,MAAM,IAAI;AAC1B,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAxB;AAA4B,MAAA,MAAM,EAAED,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,CAJR,CADA,CADJ;AAaH,CA/CE","sourcesContent":["// Organized\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { SampleContext } from \"../sample/SampleProvider\"\nimport { CrushPanel } from \"./CrushPanel\"\nimport \"./Samples.css\"\nimport 'react-h5-audio-player/lib/styles.css'\n\nexport const Crushes = (props) => {\n\n    // Context \n\n    const {favorites, \n        filterValue, \n        getFavorites,\n        getUsers,\n        getSamples,\n        samples,\n        ratings,\n        searchTerms,\n        getRatings,\n    } = useContext(SampleContext)\n\n    const [ filteredSamples, setFiltered ] = useState([])\n    const waveformRef = useRef(null);\n\n    // Hooks\n\n    useEffect(() => {\n        getSamples()\n        getUsers()\n        getFavorites()\n        getRatings()\n    }, [])\n\n    useEffect(() => {\n    setFiltered(samples)\n    console.log(ratings.sort((a, b) => (a.rating > b.rating) ? 1 : -1))\n    }, [searchTerms, samples, filterValue])\n\n    // JSX\n\n        return (\n            <>\n            <div className=\"samples\">\n                <div class=\"sampleCard\">\n                        </div> \n                {\n                    filteredSamples.map(sample => {\n                        return <CrushPanel key={sample.id} sample={sample} />\n                    })\n                }\n            </div> \n            </>\n        )\n    }"]},"metadata":{},"sourceType":"module"}