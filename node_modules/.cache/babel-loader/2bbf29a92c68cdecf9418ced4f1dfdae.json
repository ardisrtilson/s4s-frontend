{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleProvider.js\";\nimport React, { useState } from \"react\";\nexport const SampleContext = React.createContext();\nexport const SampleProvider = props => {\n  const [commentValue, setComments] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [randomSample, setRandomSample] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [filterValue, setFilter] = useState([]);\n  const [sampleRatings, setSampleRatings] = useState([]);\n  const [samples, setSamples] = useState([]);\n  const [singleSample, setSingleSample] = useState({});\n  const [skipped, setSkipped] = useState([]);\n  const [searchTerms, setTerms] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [randomSamplesLoaded, setRandomSamplesLoaded] = useState(false);\n  const [singleSampleLoaded, setSingleSampleLoaded] = useState(false);\n\n  const getUserById = id => {\n    return fetch(`http://localhost:8000/users/${id}`, {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setUser);\n  };\n\n  const addComment = comment => {\n    return fetch(\"http://localhost:8000/comments\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      },\n      body: JSON.stringify(comment)\n    }).then(getComments);\n  };\n\n  const addFavorites = favorite => {\n    return fetch(\"http://localhost:8000/userFavorites\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      },\n      body: JSON.stringify(favorite)\n    }).then(getFavorites);\n  };\n\n  const addSkipped = skipped => {\n    return fetch(\"http://localhost:8000/userSkipped\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      },\n      body: JSON.stringify(skipped)\n    }).then(getSkipped);\n  };\n\n  const addRatings = rating => {\n    return fetch(\"http://localhost:8000/sampleRatings\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      },\n      body: JSON.stringify(rating)\n    }).then(getRatings);\n  };\n\n  const getRatings = () => {\n    return fetch(\"http://localhost:8000/sampleRatings\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setRatings);\n  };\n\n  const addSample = sample => {\n    return fetch(\"http://localhost:8000/samples\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      },\n      body: JSON.stringify(sample)\n    }).then(getSamples);\n  };\n\n  const getComments = () => {\n    return fetch(\"http://localhost:8000/comments\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setComments);\n  };\n\n  const getUsers = () => {\n    return fetch(\"http://localhost:8000/users\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setUsers);\n  };\n\n  const getRandomSample = () => {\n    return fetch(\"http://localhost:8000/randomSample\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(data => {\n      setRandomSample(data);\n      setRandomSamplesLoaded(true);\n    });\n  };\n\n  const getSkipped = () => {\n    return fetch(\"http://localhost:8000/userSkipped\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setSkipped);\n  };\n\n  const getFavorites = () => {\n    return fetch(\"http://localhost:8000/userFavorites\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setFavorites);\n  };\n\n  const getSamples = () => {\n    return fetch(\"http://localhost:8000/samples\", {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setSamples);\n  };\n\n  const getSampleById = id => {\n    return fetch(`http://localhost:8000/samples/${id}`, {\n      headers: {\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(res => res.json()).then(setSingleSample).then(setSingleSampleLoaded(true));\n  };\n\n  const releaseComment = commentId => {\n    return fetch(`http://localhost:8000/comments/${commentId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(getComments);\n  };\n\n  const releaseFavorite = sampleId => {\n    return fetch(`http://localhost:8000/userFavorites/${sampleId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(getFavorites);\n  };\n\n  const releaseSample = sampleId => {\n    return fetch(`http://localhost:8000/samples/${sampleId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n      }\n    }).then(getSamples);\n  };\n\n  const updateSample = sample => {\n    return fetch(`http://localhost:8088/samples/${sample.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sample)\n    }).then(getSamples);\n  };\n\n  return /*#__PURE__*/React.createElement(SampleContext.Provider, {\n    value: {\n      addComment,\n      addFavorites,\n      addSample,\n      addSkipped,\n      commentValue,\n      users,\n      favorites,\n      filterValue,\n      ratings,\n      getRatings,\n      addRatings,\n      getComments,\n      getUsers,\n      getFavorites,\n      getSamples,\n      getSampleById,\n      getRandomSample,\n      randomSample,\n      getRatingsForSample,\n      sampleRatings,\n      releaseSample,\n      ratingValue,\n      releaseComment,\n      releaseFavorite,\n      singleSampleLoaded,\n      samples,\n      singleSample,\n      skipped,\n      getSkipped,\n      setSkipped,\n      searchTerms,\n      setComments,\n      setFavorites,\n      setFilter,\n      setRating,\n      randomSamplesLoaded,\n      setTerms,\n      updateSample,\n      user,\n      setUser,\n      getUserById\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/sample/SampleProvider.js"],"names":["React","useState","SampleContext","createContext","SampleProvider","props","commentValue","setComments","users","setUsers","ratings","setRatings","randomSample","setRandomSample","favorites","setFavorites","filterValue","setFilter","sampleRatings","setSampleRatings","samples","setSamples","singleSample","setSingleSample","skipped","setSkipped","searchTerms","setTerms","user","setUser","randomSamplesLoaded","setRandomSamplesLoaded","singleSampleLoaded","setSingleSampleLoaded","getUserById","id","fetch","headers","localStorage","getItem","then","res","json","addComment","comment","method","body","JSON","stringify","getComments","addFavorites","favorite","getFavorites","addSkipped","getSkipped","addRatings","rating","getRatings","addSample","sample","getSamples","getUsers","getRandomSample","data","getSampleById","releaseComment","commentId","releaseFavorite","sampleId","releaseSample","updateSample","getRatingsForSample","ratingValue","setRating","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,aAAa,GAAGF,KAAK,CAACG,aAAN,EAAtB;AAEP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,QAAM,CAACC,YAAD,EAAeC,WAAf,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACe,WAAD,EAAcC,SAAd,IAA2BhB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,YAAD,EAAeC,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACyB,WAAD,EAAcC,QAAd,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC2B,IAAD,EAAOC,OAAP,IAAkB5B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC6B,mBAAD,EAAsBC,sBAAtB,IAAgD9B,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAAC+B,kBAAD,EAAqBC,qBAArB,IAA8ChC,QAAQ,CAAC,KAAD,CAA5D;;AAEA,QAAMiC,WAAW,GAAIC,EAAD,IAAQ;AACxB,WAAOC,KAAK,CAAE,+BAA8BD,EAAG,EAAnC,EAAsC;AAC9CE,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADsC,KAAtC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKGX,OALH,CAAP;AAMH,GAPD;;AASA,QAAMc,UAAU,GAAGC,OAAO,IAAI;AAC1B,WAAOR,KAAK,CAAC,gCAAD,EAAmC;AAC3CS,MAAAA,MAAM,EAAE,MADmC;AAE3CR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD,OAFkC;AAM3CO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AANqC,KAAnC,CAAL,CAQFJ,IARE,CAQGS,WARH,CAAP;AASH,GAVD;;AAWA,QAAMC,YAAY,GAAGC,QAAQ,IAAI;AAC7B,WAAOf,KAAK,CAAC,qCAAD,EAAwC;AAChDS,MAAAA,MAAM,EAAE,MADwC;AAEhDR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD,OAFuC;AAMhDO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,QAAf;AAN0C,KAAxC,CAAL,CAQFX,IARE,CAQGY,YARH,CAAP;AASH,GAVD;;AAYA,QAAMC,UAAU,GAAG7B,OAAO,IAAI;AAC1B,WAAOY,KAAK,CAAC,mCAAD,EAAsC;AAC9CS,MAAAA,MAAM,EAAE,MADsC;AAE9CR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD,OAFqC;AAM9CO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAexB,OAAf;AANwC,KAAtC,CAAL,CAQFgB,IARE,CAQGc,UARH,CAAP;AASH,GAVD;;AAYA,QAAMC,UAAU,GAAGC,MAAM,IAAI;AACzB,WAAOpB,KAAK,CAAC,qCAAD,EAAwC;AAChDS,MAAAA,MAAM,EAAE,MADwC;AAEhDR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD,OAFuC;AAMhDO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeQ,MAAf;AAN0C,KAAxC,CAAL,CAQFhB,IARE,CAQGiB,UARH,CAAP;AASH,GAVD;;AAYA,QAAMA,UAAU,GAAG,MAAM;AACrB,WAAOrB,KAAK,CAAC,qCAAD,EAAwC;AAChDC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADwC,KAAxC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKG7B,UALH,CAAP;AAMH,GAPD;;AASA,QAAM+C,SAAS,GAAGC,MAAM,IAAI;AACxB,WAAOvB,KAAK,CAAC,+BAAD,EAAkC;AAC1CS,MAAAA,MAAM,EAAE,MADkC;AAE1CR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD,OAFiC;AAM1CO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,MAAf;AANoC,KAAlC,CAAL,CAQFnB,IARE,CAQGoB,UARH,CAAP;AASH,GAVD;;AAWA,QAAMX,WAAW,GAAG,MAAM;AACtB,WAAOb,KAAK,CAAC,gCAAD,EAAmC;AAC3CC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADmC,KAAnC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKGjC,WALH,CAAP;AAMH,GAPD;;AAQA,QAAMsD,QAAQ,GAAG,MAAM;AACnB,WAAOzB,KAAK,CAAC,6BAAD,EAAgC;AACxCC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADgC,KAAhC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKG/B,QALH,CAAP;AAMH,GAPD;;AASA,QAAMqD,eAAe,GAAG,MAAM;AAC1B,WAAO1B,KAAK,CAAC,oCAAD,EAAuC;AAC/CC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADuC,KAAvC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKIuB,IAAD,IAAU;AACZlD,MAAAA,eAAe,CAACkD,IAAD,CAAf;AACAhC,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACH,KARE,CAAP;AASH,GAVD;;AAYA,QAAMuB,UAAU,GAAG,MAAM;AACrB,WAAOlB,KAAK,CAAC,mCAAD,EAAsC;AAC9CC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADsC,KAAtC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKGf,UALH,CAAP;AAMH,GAPD;;AASA,QAAM2B,YAAY,GAAG,MAAM;AACvB,WAAOhB,KAAK,CAAC,qCAAD,EAAwC;AAChDC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADwC,KAAxC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKGzB,YALH,CAAP;AAMH,GAPD;;AAQA,QAAM6C,UAAU,GAAG,MAAM;AACrB,WAAOxB,KAAK,CAAC,+BAAD,EAAkC;AAC1CC,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADkC,KAAlC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKGnB,UALH,CAAP;AAMH,GAPD;;AASA,QAAM2C,aAAa,GAAI7B,EAAD,IAAQ;AAC1B,WAAOC,KAAK,CAAE,iCAAgCD,EAAG,EAArC,EAAwC;AAChDE,MAAAA,OAAO,EAAC;AACJ,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AADtD;AADwC,KAAxC,CAAL,CAIFC,IAJE,CAIGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJV,EAKFF,IALE,CAKGjB,eALH,EAMFiB,IANE,CAMGP,qBAAqB,CAAC,IAAD,CANxB,CAAP;AAOH,GARD;;AAUA,QAAMgC,cAAc,GAAIC,SAAD,IAAe;AAClC,WAAO9B,KAAK,CAAE,kCAAiC8B,SAAU,EAA7C,EAAgD;AACxDrB,MAAAA,MAAM,EAAE,QADgD;AAExDR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD;AAF+C,KAAhD,CAAL,CAOFC,IAPE,CAOGS,WAPH,CAAP;AAQH,GATD;;AAUA,QAAMkB,eAAe,GAAIC,QAAD,IAAc;AAClC,WAAOhC,KAAK,CAAE,uCAAsCgC,QAAS,EAAjD,EAAoD;AAC5DvB,MAAAA,MAAM,EAAE,QADoD;AAE5DR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD;AAFmD,KAApD,CAAL,CAOFC,IAPE,CAOGY,YAPH,CAAP;AAQH,GATD;;AAUA,QAAMiB,aAAa,GAAID,QAAD,IAAc;AAChC,WAAOhC,KAAK,CAAE,iCAAgCgC,QAAS,EAA3C,EAA8C;AACtDvB,MAAAA,MAAM,EAAE,QAD8C;AAEtDR,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAkB,SAAQC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFrD;AAF6C,KAA9C,CAAL,CAOFC,IAPE,CAOGoB,UAPH,CAAP;AAQH,GATD;;AAWA,QAAMU,YAAY,GAAGX,MAAM,IAAI;AAC3B,WAAOvB,KAAK,CAAE,iCAAgCuB,MAAM,CAACxB,EAAG,EAA5C,EAA+C;AACvDU,MAAAA,MAAM,EAAE,KAD+C;AAEvDR,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAF8C;AAKvDS,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,MAAf;AALiD,KAA/C,CAAL,CAOFnB,IAPE,CAOGoB,UAPH,CAAP;AAQH,GATD;;AAWA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EACzB;AACIjB,MAAAA,UADJ;AAEIO,MAAAA,YAFJ;AAGIQ,MAAAA,SAHJ;AAIIL,MAAAA,UAJJ;AAKI/C,MAAAA,YALJ;AAMIE,MAAAA,KANJ;AAOIM,MAAAA,SAPJ;AAQIE,MAAAA,WARJ;AASIN,MAAAA,OATJ;AAUI+C,MAAAA,UAVJ;AAWIF,MAAAA,UAXJ;AAYIN,MAAAA,WAZJ;AAaIY,MAAAA,QAbJ;AAcIT,MAAAA,YAdJ;AAeIQ,MAAAA,UAfJ;AAgBII,MAAAA,aAhBJ;AAiBIF,MAAAA,eAjBJ;AAkBIlD,MAAAA,YAlBJ;AAmBI2D,MAAAA,mBAnBJ;AAoBIrD,MAAAA,aApBJ;AAqBImD,MAAAA,aArBJ;AAsBIG,MAAAA,WAtBJ;AAuBIP,MAAAA,cAvBJ;AAwBIE,MAAAA,eAxBJ;AAyBInC,MAAAA,kBAzBJ;AA0BIZ,MAAAA,OA1BJ;AA2BIE,MAAAA,YA3BJ;AA4BIE,MAAAA,OA5BJ;AA6BI8B,MAAAA,UA7BJ;AA8BI7B,MAAAA,UA9BJ;AA+BIC,MAAAA,WA/BJ;AAgCInB,MAAAA,WAhCJ;AAiCIQ,MAAAA,YAjCJ;AAkCIE,MAAAA,SAlCJ;AAmCIwD,MAAAA,SAnCJ;AAoCI3C,MAAAA,mBApCJ;AAqCIH,MAAAA,QArCJ;AAsCI2C,MAAAA,YAtCJ;AAuCI1C,MAAAA,IAvCJ;AAwCIC,MAAAA,OAxCJ;AAyCIK,MAAAA;AAzCJ,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4CC7B,KAAK,CAACqE,QA5CP,CADJ;AAgDC,CAvPE","sourcesContent":["import React, { useState } from \"react\"\n\nexport const SampleContext = React.createContext()\n\nexport const SampleProvider = (props) => {\n    const [commentValue, setComments] = useState([])\n    const [users, setUsers] = useState([])\n    const [ratings, setRatings] = useState([])\n    const [randomSample, setRandomSample] = useState([])\n    const [favorites, setFavorites] = useState([])\n    const [filterValue, setFilter] = useState([])\n    const [sampleRatings, setSampleRatings] = useState([])\n    const [samples, setSamples] = useState([])\n    const [singleSample, setSingleSample] = useState({})\n    const [skipped, setSkipped] = useState([])\n    const [searchTerms, setTerms] = useState(\"\")\n    const [user, setUser] = useState({})\n    const [randomSamplesLoaded, setRandomSamplesLoaded] = useState(false)\n    const [singleSampleLoaded, setSingleSampleLoaded] = useState(false)\n\n    const getUserById = (id) => {\n        return fetch(`http://localhost:8000/users/${id}`, {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setUser)\n    }\n\n    const addComment = comment => {\n        return fetch(\"http://localhost:8000/comments\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n            body: JSON.stringify(comment)\n        })\n            .then(getComments)\n    }\n    const addFavorites = favorite => {\n        return fetch(\"http://localhost:8000/userFavorites\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n            body: JSON.stringify(favorite)\n        })\n            .then(getFavorites)\n    }\n\n    const addSkipped = skipped => {\n        return fetch(\"http://localhost:8000/userSkipped\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n            body: JSON.stringify(skipped)\n        })\n            .then(getSkipped)\n    }\n\n    const addRatings = rating => {\n        return fetch(\"http://localhost:8000/sampleRatings\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n            body: JSON.stringify(rating)\n        })\n            .then(getRatings)\n    }\n\n    const getRatings = () => {\n        return fetch(\"http://localhost:8000/sampleRatings\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setRatings)\n    }\n\n    const addSample = sample => {\n        return fetch(\"http://localhost:8000/samples\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getSamples)\n    }\n    const getComments = () => {\n        return fetch(\"http://localhost:8000/comments\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setComments)\n    }\n    const getUsers = () => {\n        return fetch(\"http://localhost:8000/users\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setUsers)\n    }\n\n    const getRandomSample = () => {\n        return fetch(\"http://localhost:8000/randomSample\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then((data) => {\n                setRandomSample(data)\n                setRandomSamplesLoaded(true)\n            })\n    }\n\n    const getSkipped = () => {\n        return fetch(\"http://localhost:8000/userSkipped\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setSkipped)\n    }\n\n    const getFavorites = () => {\n        return fetch(\"http://localhost:8000/userFavorites\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setFavorites)\n    }\n    const getSamples = () => {\n        return fetch(\"http://localhost:8000/samples\", {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setSamples)\n    }\n\n    const getSampleById = (id) => {\n        return fetch(`http://localhost:8000/samples/${id}`, {\n            headers:{\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            }})\n            .then(res => res.json())\n            .then(setSingleSample)\n            .then(setSingleSampleLoaded(true))\n    }\n    \n    const releaseComment = (commentId) => {\n        return fetch(`http://localhost:8000/comments/${commentId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n        })\n            .then(getComments)\n    }\n    const releaseFavorite = (sampleId) => {\n        return fetch(`http://localhost:8000/userFavorites/${sampleId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n        })\n            .then(getFavorites)\n    }\n    const releaseSample = (sampleId) => {\n        return fetch(`http://localhost:8000/samples/${sampleId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Token ${localStorage.getItem(\"user_id\")}`\n            },\n        })\n            .then(getSamples)\n    }\n\n    const updateSample = sample => {\n        return fetch(`http://localhost:8088/samples/${sample.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(sample)\n        })\n            .then(getSamples)\n    }\n\n    return (\n        <SampleContext.Provider value={\n            {\n                addComment,\n                addFavorites,\n                addSample,\n                addSkipped,\n                commentValue,\n                users,\n                favorites, \n                filterValue,\n                ratings,\n                getRatings,\n                addRatings,\n                getComments,\n                getUsers,\n                getFavorites,\n                getSamples, \n                getSampleById,\n                getRandomSample,\n                randomSample,\n                getRatingsForSample,\n                sampleRatings,\n                releaseSample, \n                ratingValue,\n                releaseComment,\n                releaseFavorite,\n                singleSampleLoaded,\n                samples,\n                singleSample,\n                skipped,\n                getSkipped,\n                setSkipped,\n                searchTerms,\n                setComments,\n                setFavorites, \n                setFilter,\n                setRating,\n                randomSamplesLoaded,\n                setTerms,\n                updateSample,\n                user,\n                setUser,\n                getUserById,\n            }}>\n        {props.children}\n        </SampleContext.Provider>\n        )\n    }"]},"metadata":{},"sourceType":"module"}