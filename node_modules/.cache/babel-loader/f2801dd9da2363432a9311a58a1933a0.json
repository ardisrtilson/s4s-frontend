{"ast":null,"code":"var _jsxFileName = \"/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js\";\nimport { SampleContext } from \"../sample/SampleProvider\";\nimport { Link } from \"react-router-dom\";\nimport React, { useContext, useState, useEffect, useRef, createRef } from \"react\";\nimport \"./Samples.css\";\nimport AudioPlayer from 'react-h5-audio-player';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AvgRating from '@material-ui/lab/Rating';\nimport ReactColorSquare from \"react-color-square\";\nimport hexSorter from 'hexsorter';\nexport const CrushPanel = ({\n  sample\n}) => {\n  const [faves, setFaves] = useState([]);\n  const [sort, setSort] = useState([]);\n  const [thisUserFavorites, setThisUserFavorites] = useState([]);\n  const [currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")));\n\n  const handleControlledInputChange = e => {\n    setSort(e.target.value);\n  };\n\n  const {\n    favorites,\n    releaseFavorite,\n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    getRatings,\n    ratings\n  } = useContext(SampleContext);\n  useEffect(() => {\n    getUsers().then(getFavorites()).then(getRatings()).then(getSamples());\n  }, []);\n  useEffect(() => {\n    setThisUserFavorites(favorites.filter(faves => faves.user_id === currentUser));\n  }, [favorites, currentUser]);\n  useEffect(() => {\n    if (sort === 1) {\n      setFaves(faves.sort((a, b) => a.averageRating < b.averageRating ? 1 : -1));\n      getRatings();\n    } else if (sort === 2) {\n      setFaves(faves.sort((a, b) => a.averageLoudness > b.averageLoudness ? 1 : -1));\n      getRatings();\n    } else if (sort === 3) {\n      setFaves(faves.sort((a, b) => a.name > b.name ? 1 : -1));\n      getRatings();\n    } else if (sort === 4) {\n      setFaves(faves.sort((a, b) => a.name < b.name ? 1 : -1));\n      getRatings();\n    } else if (sort === 5) {\n      let hexArray = faves.map(faveHex => faveHex.averageColorHex);\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostSaturatedColor');\n      let sortedHex = mostSaturatedColor.map(msc => faves.find(fave => fave.averageColorHex === msc));\n      setFaves(sortedHex.sort((a, b) => parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1));\n      getRatings();\n    } else if (sort === 6) {\n      let hexArray = faves.map(faveHex => faveHex.averageColorHex);\n      var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostBrightColor');\n      let sortedHex = mostSaturatedColor.map(msc => faves.find(fave => fave.averageColorHex === msc));\n      setFaves(sortedHex.sort((a, b) => parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1));\n      getRatings();\n    }\n  }, [sort]);\n  useEffect(() => {\n    if (samples && samples.length) {\n      setFaves(thisUserFavorites.map(fave => samples.find(sample => fave.sample_id === sample.id)));\n    }\n  }, [thisUserFavorites, samples]);\n\n  const downloadFile = sample => {\n    window.location.href = sample.audio_url;\n  };\n\n  const removeFavorite = sample => {\n    let favId = thisUserFavorites.find(favorite => favorite.sample_id === sample.id);\n    releaseFavorite(favId.id).then(getFavorites);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"samples\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: 0,\n    onChange: handleControlledInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Sort By\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Avg. Rating\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Subjective Volume(All)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Alphabetical\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Reverse Alphabetical\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Color by Saturation(All)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Color by Brightness(All)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Saturation (Masc Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Brightness (Masc Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Brightness (Femme Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Saturation (Femme Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Subjective Volume(Masc Users)\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Subjective Volume (Femme Users)\")), /*#__PURE__*/React.createElement(\"div\", {\n    class: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), faves.map(sample => {\n    let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id);\n    let mascUserRatings;\n    let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n    let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n    let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n    let averageColorHex = Math.round(averageColor).toString(16);\n    averageColorHex = `#` + averageColorHex;\n\n    if (isNaN(averageLoudness)) {\n      averageLoudness = 1.0;\n    }\n\n    if (isNaN(averageRating)) {\n      averageRating = 0;\n    }\n\n    if (averageColorHex === \"#NaN\") {\n      averageColorHex = '#ffffff';\n    }\n\n    sample.averageColorHex = averageColorHex;\n    sample.averageLoudness = averageLoudness;\n    sample.averageRating = averageRating;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      class: \"playerContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"img\",\n      src: sample.sample_image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"link_card button4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/browse/${sample.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 60\n      }\n    }, sample.name)), /*#__PURE__*/React.createElement(AvgRating, {\n      value: averageRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ReactColorSquare, {\n      height: 100,\n      width: 558,\n      color: averageColorHex,\n      text: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(AudioPlayer, {\n      autoPlayAfterSrcChange: false,\n      preload: \"true\",\n      volume: averageLoudness,\n      src: sample.audio_url,\n      onPlay: e => console.log(\"onPlay\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button5\",\n      onClick: () => removeFavorite(sample),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 35\n      }\n    }, \"Remove Favorite\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button3\",\n      onClick: () => downloadFile(sample),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 35\n      }\n    }, \"Download Sample\"));\n  })));\n};","map":{"version":3,"sources":["/Users/ardisred/Workspace/samples4singles/s4s-frontend/src/components/crushes/CrushPanel.js"],"names":["SampleContext","Link","React","useContext","useState","useEffect","useRef","createRef","AudioPlayer","Select","MenuItem","AvgRating","ReactColorSquare","hexSorter","CrushPanel","sample","faves","setFaves","sort","setSort","thisUserFavorites","setThisUserFavorites","currentUser","setCurrentUser","parseInt","localStorage","getItem","handleControlledInputChange","e","target","value","favorites","releaseFavorite","getFavorites","getUsers","getSamples","samples","getRatings","ratings","then","filter","user_id","a","b","averageRating","averageLoudness","name","hexArray","map","faveHex","averageColorHex","mostSaturatedColor","sortColors","sortedHex","msc","find","fave","substring","length","sample_id","id","downloadFile","window","location","href","audio_url","removeFavorite","favId","favorite","thisSampleFavorites","rating","mascUserRatings","reduce","total","next","parseFloat","loudness","averageColor","color","Math","round","toString","isNaN","sample_image","console","log"],"mappings":"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","sourcesContent":["import { SampleContext } from \"../sample/SampleProvider\"\nimport { Link } from \"react-router-dom\"\nimport React, {useContext, useState, useEffect, useRef, createRef} from \"react\"\nimport \"./Samples.css\"\nimport AudioPlayer from 'react-h5-audio-player';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AvgRating from '@material-ui/lab/Rating';\nimport ReactColorSquare from \"react-color-square\";\nimport hexSorter from 'hexsorter';\n\nexport const CrushPanel = ({sample}) => {\n\n  const [ faves, setFaves ] = useState([])\n  const [ sort, setSort ] = useState([])\n  const [ thisUserFavorites, setThisUserFavorites ] = useState([])\n  const [ currentUser, setCurrentUser] = useState(parseInt(localStorage.getItem(\"user_number\")))\n\n  const handleControlledInputChange = (e) => {\n    setSort(e.target.value)\n}\n\n  const {\n    favorites, \n    releaseFavorite, \n    getFavorites,\n    getUsers,\n    getSamples,\n    samples,\n    getRatings,\n    ratings,\n  } = useContext(SampleContext)\n\n  useEffect(() => {\n    getUsers().then(\n    getFavorites()).then(\n    getRatings()).then(\n    getSamples())\n}, [])\n\nuseEffect(() => {\n  setThisUserFavorites(favorites.filter(faves => faves.user_id === currentUser))\n}, [favorites, currentUser])\n\nuseEffect(() => {\n  if(sort === 1){setFaves(faves.sort((a, b) => (a.averageRating < b.averageRating) ? 1 : -1))\n  getRatings()}\n  else if (sort === 2){setFaves(faves.sort((a, b) => (a.averageLoudness > b.averageLoudness) ? 1 : -1))\n    getRatings()}\n  else if (sort === 3){setFaves(faves.sort((a, b) => (a.name > b.name) ? 1 : -1))\n  getRatings()}\n  else if (sort === 4){setFaves(faves.sort((a, b) => (a.name < b.name) ? 1 : -1))\n  getRatings()}\n  else if (sort === 5){\n    let hexArray = faves.map(faveHex => (faveHex.averageColorHex))\n    var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostSaturatedColor')\n    let sortedHex = mostSaturatedColor.map(msc => faves.find(fave => fave.averageColorHex === msc))\n    setFaves(sortedHex.sort((a, b) => (parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1)))\n    getRatings()}\n  else if (sort === 6){\n    let hexArray = faves.map(faveHex => (faveHex.averageColorHex))\n    var mostSaturatedColor = hexSorter.sortColors(hexArray, 'mostBrightColor')\n    let sortedHex = mostSaturatedColor.map(msc => faves.find(fave => fave.averageColorHex === msc))\n    setFaves(sortedHex.sort((a, b) => (parseInt(a.averageColorHex.substring(1) > b.averageColorHex.substring(1)) ? 1 : -1)))\n    getRatings()}\n}, [sort])\n\nuseEffect(() => {\n  if (samples && samples.length){\n    setFaves(thisUserFavorites.map(fave => samples.find(sample => fave.sample_id === sample.id)))\n  }\n}, [thisUserFavorites, samples])\n\n        const downloadFile = (sample) => {\n          window.location.href = sample.audio_url\n        }\n\n        const removeFavorite = (sample) => {\n          let favId = thisUserFavorites.find(favorite => favorite.sample_id === sample.id)\n          releaseFavorite(favId.id).then(getFavorites)\n        }\nreturn (\n  <>\n  <div className=\"samples\">\n          <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={0}\n          onChange={handleControlledInputChange}\n        >\n          <MenuItem value={0}>Sort By</MenuItem>\n          <MenuItem value={1}>Avg. Rating</MenuItem>\n          <MenuItem value={2}>Subjective Volume(All)</MenuItem>\n          <MenuItem value={3}>Alphabetical</MenuItem>\n          <MenuItem value={4}>Reverse Alphabetical</MenuItem>\n          <MenuItem value={5}>Color by Saturation(All)</MenuItem>\n          <MenuItem value={6}>Color by Brightness(All)</MenuItem>\n          <MenuItem value={7}>Saturation (Masc Users)</MenuItem>\n          <MenuItem value={8}>Brightness (Masc Users)</MenuItem>\n          <MenuItem value={9}>Brightness (Femme Users)</MenuItem>\n          <MenuItem value={10}>Saturation (Femme Users)</MenuItem>\n          <MenuItem value={11}>Subjective Volume(Masc Users)</MenuItem>\n          <MenuItem value={12}>Subjective Volume (Femme Users)</MenuItem>\n        </Select>\n                <div class>\n                {/* <div ref={lineRefs.current[1]} /> */}\n                        </div>\n                {\n                    faves.map(sample => {\n                      let thisSampleFavorites = ratings.filter(rating => rating.sample.id === sample.id)\n                      let mascUserRatings\n                      let averageRating = thisSampleFavorites.reduce((total, next) => total + parseInt(next.rating), 0) / thisSampleFavorites.length;\n                      let averageLoudness = thisSampleFavorites.reduce((total, next) => total + parseFloat(next.loudness), 0) / thisSampleFavorites.length;\n                      let averageColor = thisSampleFavorites.reduce((total, next) => total + parseInt(next.color.substring(1), 16), 0) / thisSampleFavorites.length;\n                      let averageColorHex = Math.round(averageColor).toString(16)\n                      averageColorHex = `#` + averageColorHex\n                      if(isNaN(averageLoudness)){averageLoudness = 1.0}\n                      if(isNaN(averageRating)){averageRating = 0}\n                      if(averageColorHex === \"#NaN\"){averageColorHex = '#ffffff'}\n                      sample.averageColorHex = averageColorHex\n                      sample.averageLoudness = averageLoudness \n                      sample.averageRating = averageRating\n                        return (\n                          <section class=\"playerContainer\">\n                          <img class=\"img\" src={sample.sample_image}></img>\n                            <div class=\"link_card button4\"><Link to={`/browse/${sample.id}`}>{sample.name}</Link></div>\n                            <AvgRating \n                            value={averageRating}/>\n                            <ReactColorSquare height={100} width={558} color={averageColorHex} text=\"\" />\n                                  <AudioPlayer \n                                      autoPlayAfterSrcChange={false}\n                                      preload=\"true\"\n                                      volume={averageLoudness}\n                                      src={sample.audio_url}\n                                      onPlay={e => console.log(\"onPlay\")}/>\n                                  <button class=\"button5\" onClick={()=>removeFavorite(sample)}>Remove Favorite</button>\n                                  <button class=\"button3\" onClick={()=>downloadFile(sample)}>Download Sample</button>\n                          </section>)\n                    })\n                  }\n            </div> \n</>\n)\n}"]},"metadata":{},"sourceType":"module"}